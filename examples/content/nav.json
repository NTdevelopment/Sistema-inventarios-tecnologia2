[
  {
    "text": "AutoComplete",
    "name": "autocomplete",
    "api": "web/autocomplete",
    "documentation": {
       "kendo-ui": "getting-started/web/autocomplete/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/autocomplete/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/autocomplete/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/autocomplete/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/autocomplete",
       "aspnet-mvc": "aspnet-mvc/autocomplete",
       "jsp-ui": "jsp/autocomplete",
       "php-ui": "php/autocomplete"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/autocomplete",
       "aspnet-mvc": "aspnet-mvc/autocomplete",
       "jsp-ui": "jsp/autocomplete",
       "php-ui": "php/autocomplete"
    },
    "spriteCssClass": "autoCompleteIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "autocomplete/index",
        "title": {
            "kendo-ui": "Demo and source code for Kendo UI Autocomplete widget",
            "aspnet-mvc": "Demo and source code for  Telerik ASP.NET MVC Autocomplete"
        },
        "meta": {
            "kendo-ui": "How jQuery-based Autocomplete widget works, view demo source code of Kendo UI Autocomplete.",
            "aspnet-mvc": "See how the Telerik ASP.NET MVC Autocomplete control works and view the demo source code."
        }
      },
      {
        "text": "Server filtering",
        "url": "autocomplete/serverfiltering",
        "title": {
            "kendo-ui": "Server filtering in Kendo UI Autocomplete widget | Kendo UI Demo",
            "aspnet-mvc": "Server filtering in ASP.NET MVC Autocomplete control"
        },
        "meta": {
            "kendo-ui": "This demo of Kendo UI Autocomplete control shows how autocomplete suggestions are given upon typing and the data is loaded from OData remote data source.",
            "aspnet-mvc": "This demo of ASP.NET MVC Autocomplete control shows how autocomplete suggestions are given upon typing and the data is loaded from OData remote data source."
        }
      },
      {
        "text": "Virtualization",
        "url": "autocomplete/virtualization",
        "title": {
            "kendo-ui": "Virtualization in Kendo UI Autocomplete widget | Kendo UI Demo",
            "aspnet-mvc": "Virtualization in ASP.NET MVC Autocomplete control"
        },
        "meta": {
            "kendo-ui": "This demo of Kendo UI Autocomplete control shows how load large amount of data in the autocomplete widget",
            "aspnet-mvc": "This demo of Kendo UI Autocomplete control shows how load large amount of data in the autocomplete widget"
        }
      },
      {
        "text": "Grouping",
        "url": "autocomplete/grouping",
        "title": {
            "kendo-ui": "Grouping in Kendo UI Autocomplete widget | Kendo UI Demo",
            "aspnet-mvc": "Grouping in ASP.NET MVC Autocomplete control"
        },
        "meta": {
            "kendo-ui": "This demo of Kendo UI Autocomplete control shows how load grouped data in the autocomplete widget",
            "aspnet-mvc": "This demo of Kendo UI Autocomplete control shows how load grouped data in the autocomplete widget"
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "autocomplete/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "autocomplete/template",
        "title": {
            "kendo-ui": "Templates customization in Kendo UI AutoComplete",
            "aspnet-mvc": "Templates customization in ASP.NET MVC AutoComplete"
        },
        "meta": {
            "kendo-ui": "With this Kendo UI AutoComplete demo, you can learn how to customize the template of the widget.",
            "aspnet-mvc": "With this ASP.NET MVC AutoComplete demo, you can learn how to customize the template of the control."
        }
      },
      {
        "text": "Custom data source",
        "url": "autocomplete/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "autocomplete/events",
        "title": {
            "kendo-ui": "Events in Kendo UI AutoComplete widget | Kendo UI Web demos",
            "aspnet-mvc": "Events in MVC AutoComplete component | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "Take a look at this Kendo UI AutoComplete example to find out how events are triggered in the AutoComplete widget, included in Kendo UI Web framework.",
            "aspnet-mvc": "Take a look at this ASP.NET MVC AutoComplete example to find out how events are triggered in the AutoComplete control."
        }
      },
      {
        "text": "API",
        "url": "autocomplete/api",
        "title": {
            "kendo-ui": "Example of Kendo UI Autocomplete widget API",
            "aspnet-mvc": "Example of ASP.NET MVC Autocomplete component API"
        },
        "meta": {
            "kendo-ui": "The API Functions of Kendo UI Autocomplete widget give you the option to set a specific value, attribute a value for the string, starting with a symbol or a digit.",
            "aspnet-mvc": "The API Functions of ASP.NET MVC Autocomplete give you the option to set a specific value, attribute a value for the string, starting with a symbol or a digit."
        }
      },
      {
        "text": "RTL support",
        "url": "autocomplete/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left support in Kendo UI AutoComplete widget",
            "aspnet-mvc": "Right-to-left support in ASP.NET MVC AutoComplete component"
        },
        "meta": {
            "kendo-ui": "We will demonstrate how the right-to-left typing feature is implemented in the text input field of Kendo UI jQuery-powered AutoComplete control.",
            "aspnet-mvc": "We will demonstrate how the right-to-left typing feature is implemented in the text input field of the ASP.NET MVC AutoComplete control."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "autocomplete/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI AutoComplete widget",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC AutoComplete control"
        },
        "meta": {
            "kendo-ui": "Look at this Kendo UI Web demo which illustrates how the keyboard navigation feature is supported in Kendo UI AutoComplete component.",
            "aspnet-mvc": "Look at this ASP.NET MVC demo which illustrates how the keyboard navigation feature is supported in Telerik AutoComplete."
        }
      },
      {
        "text": "MVVM",
        "url": "autocomplete/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI AutoComplete"
        },
        "meta": {
            "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI AutoComplete"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "autocomplete/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI AutoComplete"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support in Kendo UI AutoComplete"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Button",
    "name": "button",
    "api": "web/button",
    "documentation": {
       "kendo-ui": "getting-started/web/button/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/button/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/button/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/button/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/button",
       "aspnet-mvc": "aspnet-mvc/buttonw",
       "jsp-ui": "jsp/button",
       "php-ui": "php/button"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/button",
       "aspnet-mvc": "aspnet-mvc/button",
       "jsp-ui": "jsp/button",
       "php-ui": "php/button"
    },
    "spriteCssClass": "buttonIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "button/index",
        "title": {
            "kendo-ui": "Demo and source code for Kendo UI Button widget",
            "aspnet-mvc": "ASP.NET MVC Button HTMLHelper extension sample"
        },
        "meta": {
            "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button.",
            "aspnet-mvc": "This demo illustrates how to configure Kendo UI jQuery-based button in ASP.NET MVC."
        }
      },
      {
        "packages": [
          "online"
        ],
        "text": "Multiple buttons",
        "url": "button/multiple",
        "title": {
            "kendo-ui": "Using Multiple Kendo UI Button widgets"
        },
        "meta": {
            "kendo-ui": "Using multiple buttons via a single Button widget instance."
        }
      },
      {
        "text": "Images",
        "url": "button/images",
        "title": {
            "kendo-ui": "Using Kendo UI Buttons with images and icons",
            "aspnet-mvc": "Using ASP.NET MVC Buttons with images and icons"
        },
        "meta": {
            "kendo-ui": "Using buttons with images and icons.",
            "aspnet-mvc": "This online demo will show you how to embed images and icons in your ASP.NET MVC Button."
        }
      },
      {
        "text": "Events",
        "url": "button/events",
        "title": {
            "kendo-ui": "Kendo UI Button events",
            "aspnet-mvc": "ASP.NET MVC Button events demo"
        },
        "meta": {
            "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button.",
            "aspnet-mvc": "Take a look at this ASP.NET MVC Button example to find out how events are triggered in the Button control."
        }
      },
      {
        "text": "API",
        "url": "button/api",
        "title": {
            "kendo-ui": "Kendo UI Button API",
            "aspnet-mvc": "ASP.NET MVC Button component API"
        },
        "meta": {
            "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button.",
            "aspnet-mvc": "See how the API functions of ASP.NET MVC Button give you the option to enable and disable it."
        }
      },
      {
        "text": "RTL support",
        "url": "button/right-to-left-support",
        "title": {
            "kendo-ui": "Kendo UI Button RTL Support",
            "aspnet-mvc": "ASP.NET MVC Button Component RTL Support Demo"
        },
        "meta": {
            "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button.",
            "aspnet-mvc": "We will demonstrate how the right-to-left feature is implemented in the ASP.NET MVC Button control."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "button/keyboard-navigation",
        "title": {
            "kendo-ui": "Kendo UI Button Keyboard Navigation",
            "aspnet-mvc": "ASP.NET MVC Button Control Keyboard Navigation"
        },
        "meta": {
            "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button.",
            "aspnet-mvc": "Look at this ASP.NET MVC demo which illustrates how the keyboard navigation feature is supported in Telerik Button."
        }
      },
      {
        "text": "MVVM",
        "url": "button/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Button"
        },
        "meta": {
            "kendo-ui": "Enabled, events, visible MVVM binding support in Kendo UI AutoComplete"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "button/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Button"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support in Kendo UI Button"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "ButtonGroup",
    "name": "buttongroup",
    "api": "mobile/buttongroup",
    "category": "Navigation",
    "documentation": {
       "kendo-ui": "getting-started/mobile/buttongroup",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/mobilebuttongroup/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/button-group",
       "aspnet-mvc": "aspnet-mvc/buttongroup"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/buttongroup",
       "aspnet-mvc": "aspnet-mvc/buttongroup"
    },
    "spriteCssClass": "mobileButtonGroupIcon",
    "packages": [ "!jsp", "!php" ],
    "items": [
      {
        "text": "Basic Usage",
        "url": "buttongroup/index",
        "title": {
            "kendo-ui": "Mobile ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the Mobile ButtonGroup"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ]
  },
  {
    "text": "Calendar",
    "name": "calendar",
    "api": "web/calendar",
    "documentation": {
       "kendo-ui": "getting-started/web/calendar/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/calendar/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/calendar/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/calendar/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/calendar",
       "aspnet-mvc": "aspnet-mvc/calendar",
       "jsp-ui": "jsp/calendar",
       "php-ui": "php/calendar"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/calendar",
       "aspnet-mvc": "aspnet-mvc/calendar",
       "jsp-ui": "jsp/calendar",
       "php-ui": "php/calendar"
    },
    "spriteCssClass": "calendarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "calendar/index",
        "title": {
            "kendo-ui": "Example of Kendo UI jQuery-based Calendar",
            "aspnet-mvc": "Example of ASP.NET MVC Calendar"
        },
        "meta": {
            "kendo-ui": "Explore the example of HTML5 calendar widget, included in Kendo UI Web, to find how easy it is to add a calendar to your website or web app.",
            "aspnet-mvc": "Explore the example of ASP.NET MVC calendar control to find how easy it is to add a calendar to your website or web app."
        }
      },
      {
        "text": "Customizing templates",
        "url": "calendar/template",
        "title": {
            "kendo-ui": "Customize the template of Kendo UI Calendar widget | Kendo UI Web demos",
            "aspnet-mvc": "Custom templates for ASP.NET MVC Calendar | ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Calendar allows you to customize the content in your template.",
            "aspnet-mvc": "This demo shows how ASP.NET MVC Calendar allows you to customize the content in your template."
        }
      },
      {
        "text": "Events",
        "url": "calendar/events",
        "title": {
            "kendo-ui": "Events, triggered in Kendo UI Calendar | Kendo UI Web Demos",
            "aspnet-mvc": "Events, triggered in ASP.NET MVC Calendar | ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This example of Kendo UI Calendar widget shows events which are available in the component.",
            "aspnet-mvc": "This example of ASP.NET MVC Calendar control shows events which are available in the component."
        }
      },
      {
        "text": "API",
        "url": "calendar/api",
        "title": {
            "kendo-ui": "Demo for Kendo UI Calendar Widget API",
            "aspnet-mvc": "Demo for ASP.NET MVC Calendar Control API"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Calendar Widget API works and what kind of functions it supports.",
            "aspnet-mvc": "This demo shows how the ASP.NET MVC Calendar API works and what kind of functions it supports."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "calendar/globalization"
      },
      {
        "text": "RTL support",
        "url": "calendar/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left functionality, enabled in Kendo UI Calendar widget",
            "aspnet-mvc": "Right-to-left functionality, enabled in ASP.NET MVC Calendar"
        },
        "meta": {
            "kendo-ui": "Kendo UI Calendar component supports RTL functionality. Look at the demo to see how to easily apply RTL support to the widget.",
            "aspnet-mvc": "ASP.NET MVC Calendar component supports RTL functionality. Look at the demo to see how to easily apply RTL support to the control."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "calendar/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation demo for Kendo UI Calendar widget",
            "aspnet-mvc": "Keyboard navigation demo for ASP.NET MVC Calendar"
        },
        "meta": {
            "kendo-ui": "You can easily navigate in Kendo UI Calendar by using the keyboard. This demo shows the functionality, just look at the notes and play with the example.",
            "aspnet-mvc": "You can easily navigate in ASP.NET MVC Calendar by using the keyboard. This demo shows the functionality, just look at the notes and play with the example."
        }
      },
      {
        "text": "MVVM",
        "url": "calendar/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Calendar"
        },
        "meta": {
            "kendo-ui": "Events, value and visible MVVM binding support in Kendo UI Calendar"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "calendar/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Calendar"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support in Kendo UI Calendar"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }

    ],
    "category": "Scheduling"
  },
  {
    "text": "ColorPicker",
    "name": "colorpicker",
    "api": "web/colorpicker",
    "documentation": {
       "kendo-ui": "getting-started/web/colorpicker/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/colorpicker/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/colorpicker/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/colorpicker/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/color-picker",
       "aspnet-mvc": "aspnet-mvc/color-picker",
       "jsp-ui": "jsp/color-picker",
       "php-ui": "php/color-picker"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/colorpicker",
       "aspnet-mvc": "aspnet-mvc/colorpicker",
       "jsp-ui": "jsp/colorpicker",
       "php-ui": "php/colorpicker"
    },
    "spriteCssClass": "colorPickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "colorpicker/index",
        "title": {
            "kendo-ui": "Kendo UI ColorPicker widget | Kendo UI Web Demos",
            "aspnet-mvc": "ASP.NET MVC Color Picker extension demo"
        },
        "meta": {
            "kendo-ui": "This example shows the basic functions of Kendo UI ColorPicker component.",
            "aspnet-mvc": "This demo illustrates the basic functionality of ASP.NET MVC HTML Helper for Kendo UI ColorPicker widget."
        }
      },
      {
        "text": "Flat color picker",
        "url": "colorpicker/flatcolorpicker",
        "title": {
            "kendo-ui": "Kendo UI FlatColorPicker demo",
            "aspnet-mvc": "Flat color picker demo for ASP.NET MVC ColorPicker extension"
        },
        "meta": {
            "kendo-ui": "In this example we will show how the Kendo UI FlatColorPicker, a part of the Kendo UI framework, works.",
            "aspnet-mvc": "This sample demonstrates how Telerik ASP.NET MVC helper could be used for your flat color picker scenario."
        }
      },
      {
        "text": "Standalone Palette",
        "url": "colorpicker/palette",
        "title": {
            "kendo-ui": "Standalone Palette Demo in Kendo UI ColorPicker widget",
            "aspnet-mvc": "Standalone Palette Demo in ASP.NET MVC ColorPicker control"
        },
        "meta": {
            "kendo-ui": "In this demo you will take a look at the rich standalone palette of Kendo UI ColorPicker component. Grab the source code and play with the demo!",
            "aspnet-mvc": "In this demo you will take a look at the rich standalone palette of ASP.NET MVC ColorPicker component. Grab the source code and play with the demo!"
        }
      },
      {
        "text": "Palette presets",
        "url": "colorpicker/palette-presets",
        "title": {
            "kendo-ui": "Palette presets in Kendo UI ColorPicker widget | Kendo UI Demo",
            "aspnet-mvc": "Palette presets in ASP.NET MVC ColorPicker"
        },
        "meta": {
            "kendo-ui": "Select a color based on a preset color palette in Kendo UI ColorPicker widget. This demo allows you to play with the palette presets in the component.",
            "aspnet-mvc": "This example shows how to easily use  palette presents of Telerik ASP.NET MVC ColorPicker extension. Look at the code and implement it for  user scenario."
        }
      },
      {
        "text": "Keyboard support",
        "url": "colorpicker/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard support enabled in Kendo UI ColorPicker widget",
            "aspnet-mvc": "Keyboard support of ASP.NET MVC ColorPicker extension"
        },
        "meta": {
            "kendo-ui": "In this demo we review the keyboard support that is enabled in Kendo UI ColorPicker.",
            "aspnet-mvc": "This example demonstrates the keyboard support functionality of Telerik ASP.NET MVC ColorPicker control."
        }
      },
      {
        "text": "Events",
        "url": "colorpicker/events",
        "title": {
            "kendo-ui": "Events in Kendo UI ColorPicker widget",
            "aspnet-mvc": "Events in ASP.NET MVC ColorPicker control"
        },
        "meta": {
            "kendo-ui": "In this example we will examine the events that are fired in Kendo UI jQuery-powered ColorPicker component.",
            "aspnet-mvc": "In this example we will examine the events that are fired in ASP.NET MVC ColorPicker component."
        }
      },
      {
        "text": "API",
        "url": "colorpicker/api",
        "title": {
            "kendo-ui": "API for Kendo UI ColorPicker | Kendo UI Demo",
            "aspnet-mvc": "API for ASP.NET MVC ColorPicker | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This Kendo UI demo shows the API of Kendo UI drop-down color picker widget.",
            "aspnet-mvc": "This example for using Kendo UI ColorPicker widget in ASP.NET MVC shows how you can set values, enable/disable, open/close them by using ColorPicker API."
        }
      },
      {
        "text": "MVVM",
        "url": "colorpicker/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI ColorPicker"
        },
        "meta": {
            "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI ColorPicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "colorpicker/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI ColorPicker"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI ColorPicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ComboBox",
    "name": "combobox",
    "api": "web/combobox",
    "documentation": {
       "kendo-ui": "getting-started/web/combobox/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/combobox/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/combobox/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/combobox/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/combobox",
       "aspnet-mvc": "aspnet-mvc/combobox",
       "jsp-ui": "jsp/combobox",
       "php-ui": "php/combobox"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/combobox",
       "aspnet-mvc": "aspnet-mvc/combobox",
       "jsp-ui": "jsp/combobox",
       "php-ui": "php/combobox"
    },
    "spriteCssClass": "comboBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "combobox/index",
        "title": {
            "kendo-ui": "jQuery-based Combobox widget Demo | Kendo UI Web Demos",
            "aspnet-mvc": "ASP.NET MVC Combobox control Demo | UI for ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This Combobox UI example shows how you can easily apply an editable text box with flexible auto-searchable functionality of the dropdown list into your web app.",
            "aspnet-mvc": "This ASP.NET MVC Combobox UI demo shows how to easily apply an editable text box with flexible auto-searchable functionality of the dropdown list into your web app."
        }
      },
      {
        "text": "Server filtering",
        "url": "combobox/serverfiltering",
        "title": {
            "kendo-ui": "Server filtering in Kendo UI ComboBox",
            "aspnet-mvc": "Server filtering in ASP.NET MVC ComboBox"
        },
        "meta": {
            "kendo-ui": "Check out this demo to see how the server filtering functionality works in Kendo UI ComboBox.",
            "aspnet-mvc": "Check out this demo to see how the server filtering functionality works in ASP.NET MVC ComboBox."
        }
      },
      {
        "text": "Virtualization",
        "url": "combobox/virtualization",
        "title": {
            "kendo-ui": "Virtualization in Kendo UI ComboBox",
            "aspnet-mvc": "Virtualization in ASP.NET MVC ComboBox"
        },
        "meta": {
            "kendo-ui": "Check out this demo to see how the virtualization functionality works in Kendo UI ComboBox.",
            "aspnet-mvc": "Check out this demo to see how the virtualization functionality works in ASP.NET MVC ComboBox."
        }
      },
      {
        "text": "Grouping",
        "url": "combobox/grouping",
        "title": {
            "kendo-ui": "Grouping in Kendo UI ComboBox",
            "aspnet-mvc": "Grouping in ASP.NET MVC ComboBox"
        },
        "meta": {
            "kendo-ui": "Check out this demo to see how the grouping functionality works in Kendo UI ComboBox.",
            "aspnet-mvc": "Check out this demo to see how the grouping functionality works in ASP.NET MVC ComboBox."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "combobox/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "combobox/template",
        "title": {
            "kendo-ui": "Demo for customizing jQuery ComboBox Templates | Kendo UI Web Demos",
            "aspnet-mvc": "Demo for customizing ASP.NET MVC ComboBox Templates"
        },
        "meta": {
            "kendo-ui": "This Kendo UI ComboBox demo shows how the template of the control can be customized to change the appearance of items in the auto-searchable list.",
            "aspnet-mvc": "This ASP.NET MVC ComboBox demo shows how the template of the control can be customized to change the appearance of items in the auto-searchable list."
        }
      },
      {
        "text": "Cascading ComboBox",
        "url": "combobox/cascadingcombobox",
        "title": {
            "kendo-ui": "Cascading jQuery ComboBox sample | Kendo UI Web demos",
            "aspnet-mvc": "Cascading ASP.NET MVC ComboBox sample | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This demo shows how the cascading Kendo UI ComboBox control would fit any web application or website.",
            "aspnet-mvc": "This demo shows how the cascading ASP.NET MVC ComboBox control would fit any web application or website."
        }
      },
      {
        "text": "Custom data source",
        "url": "combobox/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "combobox/events",
        "title": {
            "kendo-ui": "Examples of events in Kendo UI jQuery ComboBox component",
            "aspnet-mvc": "Examples of events in ASP.NET MVC ComboBox component"
        },
        "meta": {
            "kendo-ui": "This demo demonstrates useful events which are triggered in Kendo UI ComboBox upon user's selection of an item from the drop-down list.",
            "aspnet-mvc": "This demo demonstrates useful events which are triggered in ASP.NET MVC ComboBox upon user's selection of an item from the drop-down list."
        }
      },
      {
        "text": "API",
        "url": "combobox/api",
        "title": {
            "kendo-ui": "Demo for Kendo UI ComboBox widget API",
            "aspnet-mvc": "Demo for ASP.NET MVC ComboBox control API"
        },
        "meta": {
            "kendo-ui": "This sample shows all API functions for Kendo UI ComboBox widget.",
            "aspnet-mvc": "This sample shows all API functions for Telerik ASP.NET MVC ComboBox control."
        }
      },
      {
        "text": "RTL support",
        "url": "combobox/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left support in Kendo UI ComboBox widget",
            "aspnet-mvc": "Right-to-left support in ASP.NET MVC ComboBox control"
        },
        "meta": {
            "kendo-ui": "Build your app with Kendo UI ComboBox. This demo shows how RTL feature is supported in the component.",
            "aspnet-mvc": "Build your app with ASP.NET MVC ComboBox. This demo shows how RTL feature is supported in the component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "combobox/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard nagivation in Kendo UI ComboBox | Kendo UI Web demos",
            "aspnet-mvc": "Keyboard nagivation in ASP.NET MVC ComboBox | ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "Kendo UI ComboBox widget for web app development supports easy keyboard navigation. Play with the demo to explore the functionality.",
            "aspnet-mvc": "ASP.NET MVC ComboBox control for web app development supports easy keyboard navigation. Play with the demo to explore the functionality."
        }
      },
      {
        "text": "MVVM",
        "url": "combobox/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI ComboBox"
        },
        "meta": {
            "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI ComboBox"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "combobox/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI ComboBox"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI  ComboBox"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DatePicker",
    "name": "datepicker",
    "api": "web/datepicker",
    "documentation": {
       "kendo-ui": "getting-started/web/datepicker/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/datepicker/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/datepicker/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/datepicker/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/date-time-pickers",
       "aspnet-mvc": "aspnet-mvc/date-time-pickers",
       "jsp-ui": "jsp/date-picker-pickers",
       "php-ui": "php/date-time-pickers"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/datepicker",
       "aspnet-mvc": "aspnet-mvc/datetime",
       "jsp-ui": "jsp/date-time-pickers",
       "php-ui": "php/date-time-pickers"
    },
    "spriteCssClass": "datePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datepicker/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery DatePicker Demo",
            "aspnet-mvc": "ASP.NET MVC DatePicker sample"
        },
        "meta": {
            "kendo-ui": "The demo shows how users can efforight-to-left-supportessly edit and select dates in the calendar. Combine date editing functionality and animated dropdown in a jQuery Datepicker control for your web app.",
            "aspnet-mvc": "This example shows Telerik DatePicker basic features to select dates and times in ASP.NET MVC application."
        }
      },
      {
        "text": "Range selection",
        "url": "datepicker/rangeselection",
        "title": {
            "kendo-ui": "Range selection in Kendo UI DatePicker | Kendo UI Web Demos",
            "aspnet-mvc": "Range selection in ASP.NET MVC DatePicker | ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This demo shows how the Datepicker component works for range selections. You can easily enable users to select a date range in a handy manner.",
            "aspnet-mvc": "This demo shows how the ASP.NET MVC Datepicker component works for range selections. You can easily enable users to select a date range in a handy manner."
        }
      },
      {
        "text": "Customizing templates",
        "url": "datepicker/template",
        "title": {
            "kendo-ui": "Demo for customizing the template of Kendo UI DatePicker control",
            "aspnet-mvc": "Demo for customizing the template of ASP.NET MVC DatePicker"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how you can use a custom template for your jQuery Kendo UI DatePicker control in your web app. Easily apply a special style for your template.",
            "aspnet-mvc": "This example demonstrates how you can use a custom template for your ASP.NET MVC DatePicker control in your web app. Easily apply a special style for your template."
        }
      },
      {
        "text": "Events",
        "url": "datepicker/events",
        "title": {
            "kendo-ui": "Attach an event to Kendo UI jQuery DatePicker | Kendo UI Web Demos",
            "aspnet-mvc": "Attach an event to ASP.NET MVC DatePicker | ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This sample shows how to access the events, attached to a date, as well as use Kendo UI Date Picker widget to pick a date or change it manually from the dropdown calendar.",
            "aspnet-mvc": "This sample shows how to access the events, attached to a date, as well as use ASP.NET MVC Date Picker to pick a date or change it manually from a dropdown calendar."
        }
      },
      {
        "text": "API",
        "url": "datepicker/api",
        "title": {
            "kendo-ui": "Kendo UI DatePicker API Demo",
            "aspnet-mvc": "API ASP.NET MVC Datepicker example"
        },
        "meta": {
            "kendo-ui": "DatePicker API example shows how the API functions can be used to apply enable/disable functionality to jQuery-powered date picker control or open/close the calendar.",
            "aspnet-mvc": "This example demonstrates how the API of Telerik ASP.NET MVC Datepicker can be configured to modify the features of the extension."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "datepicker/globalization"
      },
      {
        "text": "RTL support",
        "url": "datepicker/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI DatePicker widget | Kendo UI Demo",
            "aspnet-mvc": "RTL support in ASP.NET MVC DatePicker control | ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "See how Kendo UI DatePicker component supports RTL functionality.",
            "aspnet-mvc": "See how ASP.NET MVC DatePicker component supports RTL functionality."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "datepicker/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI DatePicker",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC DatePicker"
        },
        "meta": {
            "kendo-ui": "This example shows how the keyboard navigation functionality is supported in Kendo UI DatePicker widget.",
            "aspnet-mvc": "This example shows how the keyboard navigation functionality is supported in ASP.NET MVC DatePicker control."
        }
      },
      {
        "text": "MVVM",
        "url": "datepicker/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI DatePicker"
        },
        "meta": {
            "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI DatePicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "datepicker/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI DatePicker"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI DatePicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DateTimePicker",
    "name": "datetimepicker",
    "api": "web/datetimepicker",
    "documentation": {
       "kendo-ui": "getting-started/web/datetimepicker/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/datetimepicker/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/datetimepicker/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/datetimepicker/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/date-time-pickers",
       "aspnet-mvc": "aspnet-mvc/date-time-pickers",
       "jsp-ui": "jsp/date-picker-pickers",
       "php-ui": "php/date-time-pickers"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/datepicker",
       "aspnet-mvc": "aspnet-mvc/datetime",
       "jsp-ui": "jsp/date-time-pickers",
       "php-ui": "php/date-time-pickers"
    },
    "spriteCssClass": "dateTimePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datetimepicker/index",
        "title": {
            "kendo-ui": "Kendo UI Date and Time picker example",
            "aspnet-mvc": "ASP.NET MVC Date and Time picker example"
        },
        "meta": {
            "kendo-ui": "Kendo UI DateTimePicker control handles both dates and times. Learn more about the time/date selection functionality by playing with this demo.",
            "aspnet-mvc": "ASP.NET MVC DateTimePicker control handles both dates and times. Learn more about the time/date selection functionality by playing with this demo."
        }
      },
      {
        "text": "Range selection",
        "url": "datetimepicker/rangeselection",
        "title": {
            "kendo-ui": "Date range selection functionality in Kendo UI DateTimePicker",
            "aspnet-mvc": "Date range selection functionality in ASP.NET MVC DateTimePicker"
        },
        "meta": {
            "kendo-ui": "In Kendo UI DateTimePicker control, dates and times are handled in two different input boxes so that the user can easily select different date ranges.",
            "aspnet-mvc": "In ASP.NET MVC DateTimePicker control, dates and times are handled in two different input boxes so that the user can easily select different date ranges."
        }
      },
      {
        "text": "Customizing templates",
        "url": "datetimepicker/template",
        "title": {
            "kendo-ui": "Templates customization example | Kendo UI DateTimePicker widget",
            "aspnet-mvc": "Templates customization example | ASP.NET MVC DateTimePicker demo"
        },
        "meta": {
            "kendo-ui": "This example shows how templates of Kendo HTML5-based DateTimePicker widget can be customized to fit your application.",
            "aspnet-mvc": "This example shows how templates of ASP.NET MVC DateTimePicker control can be customized to fit your application."
        }
      },
      {
        "text": "Events",
        "url": "datetimepicker/events",
        "title": {
            "kendo-ui": "Events in Kendo UI Date and Timepicker component",
            "aspnet-mvc": "Events in ASP.NET MVC Date and Timepicker component"
        },
        "meta": {
            "kendo-ui": "This example shows which events are triggered when you change the date and time in Kendo UI DateTimePicker component.",
            "aspnet-mvc": "This example shows which events are triggered when you change the date and time in ASP.NET MVC DateTimePicker component."
        }
      },
      {
        "text": "API",
        "url": "datetimepicker/api",
        "title": {
            "kendo-ui": "Kendo UI DateTimePicker API Demo",
            "aspnet-mvc": "ASP.NET MVC DateTimePicker API Demo"
        },
        "meta": {
            "kendo-ui": "Play with the demo to explore Kendo UI DateTimePicker API and all API functions.",
            "aspnet-mvc": "Play with the demo to explore ASP.NET MVC DateTimePicker API and all API functions."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "datetimepicker/globalization"
      },
      {
        "text": "RTL support",
        "url": "datetimepicker/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left support in Kendo UI DateTimePicker control | Kendo UI Demo",
            "aspnet-mvc": "Right-to-left support in ASP.NET MVC DateTimePicker control"
        },
        "meta": {
            "kendo-ui": "Choose a date and see how the date and the time are displayed from right to left in Kendo UI DateTimePicker component.",
            "aspnet-mvc": "Choose a date and see how the date and the time are displayed from right to left in ASP.NET MVC DateTimePicker component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "datetimepicker/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI DateTimePicker widget",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC DateTimePicker component"
        },
        "meta": {
            "kendo-ui": "By using the keyboard, you can easily select date and time in Kendo UI DateTimePicker, trigger an event or highlight a specific day.",
            "aspnet-mvc": "By using the keyboard, you can easily select date and time in ASP.NET MVC DateTimePicker, trigger an event or highlight a specific day."
        }
      },
      {
        "text": "MVVM",
        "url": "datetimepicker/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI DateTimePicker"
        },
        "meta": {
            "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI DateTimePicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "datetimepicker/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI DateTimePicker"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI DateTimePicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DropDownList",
    "name": "dropdownlist",
    "api": "web/dropdownlist",
    "documentation": {
       "kendo-ui": "getting-started/web/dropdownlist/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/dropdownlist/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/dropdownlist/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/dropdownlist/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/dropdownlist",
       "aspnet-mvc": "aspnet-mvc/dropdownlist",
       "jsp-ui": "jsp/dropdownlist",
       "php-ui": "php/dropdownlist"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/dropdownlist",
       "aspnet-mvc": "aspnet-mvc/dropdownlist",
       "jsp-ui": "jsp/dropdownlist",
       "php-ui": "php/dropdownlist"
    },
    "spriteCssClass": "dropDownListIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dropdownlist/index",
        "title": {
            "kendo-ui": "Demo for jQuery-powered DropDownList widget in Kendo UI Web",
            "aspnet-mvc": "Demo for ASP.NET MVC DropDownList control"
        },
        "meta": {
            "kendo-ui": "How to easily implement an interactive DropDownlist with user-friendly UI - look at the demo and play with Kendo UI DropDownList.",
            "aspnet-mvc": "How to easily implement an interactive DropDownlist with user-friendly UI - look at the demo and play with ASP.NET MVC DropDownList."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "dropdownlist/remotedatasource",
        "title": {
            "kendo-ui": "Remote Data binding demo | Kendo UI DropDownList widget",
            "aspnet-mvc": "Remote Data binding demo | ASP.NET MVC DropDownList control"
        },
        "meta": {
            "kendo-ui": "The dropdown list of Kendo HTML5 widget can load data from a remote source. This example shows binding to remote data functionality of the component.",
            "aspnet-mvc": "The dropdown list of ASP.NET MVC drop down list control can load data from a remote source. This example shows binding to remote data functionality of the component."
        }
      },
      {
        "text": "Server filtering",
        "url": "dropdownlist/serverfiltering",
        "title": {
            "kendo-ui": "Example of Server filtering in Kendo UI DropDownList widget"
        },
        "meta": {
            "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI DropDownList is filtered on the the server based on the input."
        }
      },
      {
        "text": "Virtualization",
        "url": "dropdownlist/virtualization",
        "title": {
            "kendo-ui": "Example of virtualization in Kendo UI DropDownList widget"
        },
        "meta": {
            "kendo-ui": "See how the virtual dropdown list of Kendo UI DropDownList is filtered on the the server based on the input."
        }
      },
      {
        "text": "Grouping",
        "url": "dropdownlist/grouping",
        "title": {
            "kendo-ui": "Example of grouping in Kendo UI DropDownList widget"
        },
        "meta": {
            "kendo-ui": "See how the virtual dropdown list of Kendo UI DropDownList is grouped."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "dropdownlist/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "dropdownlist/template",
        "title": {
            "kendo-ui": "Customize items in Kendo UI DropDownList component",
            "aspnet-mvc": "Customize items in ASP.NET MVC DropDownList component"
        },
        "meta": {
            "kendo-ui": "This example shows how you can customize the appearance of the items and easily customize templates in jQuery-based Kendo UI DropDownList widget.",
            "aspnet-mvc": "This example shows how you can customize the appearance of the items and easily customize templates in ASP.NET MVC DropDownList control."
        }
      },
      {
        "text": "Cascading DropDownList",
        "url": "dropdownlist/cascadingdropdownlist",
        "title": {
            "kendo-ui": "Example of cascading DropDownList | Kendo UI Dropdownlist Demo",
            "aspnet-mvc": "Example of cascading DropDownList | ASP.NET MVC Dropdownlist Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how the cascading jQuery dropdown works in Kendo UI DropDownList widget.",
            "aspnet-mvc": "This demo shows how the cascading ASP.NET MVC dropdown works in UI for ASP.NET MVC DropDownList control."
        }
      },
      {
        "text": "Custom data source",
        "url": "dropdownlist/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "dropdownlist/events",
        "title": {
            "kendo-ui": "Demo for events in Kendo UI DropDownList component",
            "aspnet-mvc": "Demo for events in ASP.NET MVC DropDownList component"
        },
        "meta": {
            "kendo-ui": "This demo explains how the cascading jQuery dropdown works in Kendo UI DropDownList widget.",
            "aspnet-mvc": "Take a look at this ASP.NET MVC DropDownList example to find out how events are triggered in the drop down listcontrol."
        }
      },
      {
        "text": "API",
        "url": "dropdownlist/api",
        "title": {
            "kendo-ui": "Example of Kendo UI jQuery DropDownList API",
            "aspnet-mvc": "Example of ASP.NET MVC DropDownList API"
        },
        "meta": {
            "kendo-ui": "Explore API functions of Kendo UI DropDownList to find how to enable or disable the dropdown list, open and close it or just manipulate the items.",
            "aspnet-mvc": "Explore API functions of ASP.NET MVC DropDownList to find how to enable or disable the dropdown list, open and close it or just manipulate the items."
        }
      },
      {
        "text": "RTL support",
        "url": "dropdownlist/right-to-left-support",
        "title": {
            "kendo-ui": "RTL feature in Kendo UI DropDownList",
            "aspnet-mvc": "RTL feature in ASP.NET MVC DropDownList"
        },
        "meta": {
            "kendo-ui": "In this Kendo UI demo, we illustrate how the RTL support is enabled in Kendo UI DropDownList component.",
            "aspnet-mvc": "In this ASP.NET MVC demo, we illustrate how the RTL support is enabled in ASP.NET MVC DropDownList component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "dropdownlist/keyboard-navigation",
        "title": {
            "kendo-ui": "Kendo UI DropdownList | Keyboard navigation demo",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC DropDownList control"
        },
        "meta": {
            "kendo-ui": "Kendo UI DropDownList supports keyboard navigation that lets you efforight-to-left-supportessly navigate in the dropdown widget by using the keyboard.",
            "aspnet-mvc": "Look at this ASP.NET MVC demo which illustrates how the keyboard navigation feature is supported in ASP.NET MVC DropDownList component."
        }
      },
      {
        "text": "MVVM",
        "url": "dropdownlist/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI DropDownList"
        },
        "meta": {
            "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI DropDownList"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "dropdownlist/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI DropDownList"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI DropDownList"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Editor",
    "name": "editor",
    "pro": "true",
    "api": "web/editor",
    "documentation": {
       "kendo-ui": "getting-started/web/editor/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/editor/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/editor/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/editor/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/editor",
       "aspnet-mvc": "aspnet-mvc/editor",
       "jsp-ui": "jsp/editor",
       "php-ui": "php/editor"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/editor",
       "aspnet-mvc": "aspnet-mvc/editor",
       "jsp-ui": "jsp/editor",
       "php-ui": "php/editor"
    },
    "spriteCssClass": "editorIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "editor/index",
        "title": {
            "kendo-ui": "Demo for jQuery WYSIWYG editor in Kendo UI Web framework",
            "aspnet-mvc": "Basic usage demo for ASP.NET MVC Editor"

        },
        "meta": {
            "kendo-ui": "This example of Kendo UI WYSIWYG editor component shows how you can implement this easy-to-use and beautiful editor in your web app.",
            "aspnet-mvc": "This demo shows how you can use Telerik editor extension in ASP.NET MVC."
        }
      },
      {
        "text": "Inline editing",
        "url": "editor/inline-editing",
        "title": {
            "kendo-ui": "Inline editing functionality of Kendo UI WYSIWYG jQuery Editor",
            "aspnet-mvc": "Inline editing functionality of ASP.NET MVC WYSIWYG Editor"
        },
        "meta": {
            "kendo-ui": "This example shows how to use the Kendo UI Editor to edit parts of the page inline, allowing authors to see the page in its final state.",
            "aspnet-mvc": "This example shows how to use the ASP.NET MVC Editor to edit parts of the page inline, allowing authors to see the page in its final state."
        }
      },
      {
        "text": "Custom tools",
        "url": "editor/custom-tools",
        "title": {
            "kendo-ui": "Custom tools for Kendo UI WYSIWYG jQuery Editor",
            "aspnet-mvc": "Custom tools for ASP.NET MVC WYSIWYG Editor"
        },
        "meta": {
            "kendo-ui": "This example shows how you can easily customize some of Kendo UI Editor native tools. You can also create completely custom tools for the component.",
            "aspnet-mvc": "This example shows how you can easily customize some of ASP.NET MVC Editor native tools. You can also create completely custom tools for the component."
        }
      },
      {
        "text": "File and image browser",
        "url": "editor/imagebrowser",
        "title": {
            "kendo-ui": "File and image browser in Kendo UI Editor | Kendo UI demo",
            "aspnet-mvc": "Image browser in ASP.NET MVC Editor | ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "In this demo we will see how the sleek image browser is nicely implemented in Kendo UI Editor widget.",
            "aspnet-mvc": "In this demo we will see how the sleek image browser is nicely implemented in ASP.NET MVC Editor control."
        },
        "packages": [
          "online",
          "mvc",
          "jsp",
          "php"
        ],
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }],
            "aspnet-mvc": [{
                "name": "FileBrowserController.cs",
                "url": "~/src/aspnetmvc/controllers/Editor/FileBrowserController.cs"
            }]
        }
      },
      {
        "text": "All tools",
        "url": "editor/all-tools",
        "title": {
            "kendo-ui": "All tools demo in Kendo UI HTML5-based Editor widget",
            "aspnet-mvc": "All tools demo in ASP.NET MVC Editor control"
        },
        "meta": {
            "kendo-ui": "This example illustrates the core HTML editing engine in Kendo UI Editor widget. Get familiar with all features of the component for any HTML5 website or web app.",
            "aspnet-mvc": "This example shows the core editing engine in ASP.NET MVC Editor control. Get familiar with all features of the component for any ASP.NET MVC website or web app."
        }
      },
      {
        "text": "Snippets",
        "url": "editor/snippets",
        "title": {
            "kendo-ui": "Demo for snippets feature of Kendo UI Editor widget",
            "aspnet-mvc": "Demo for snippets feature of ASP.NET MVC Editor control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the snippet feature of Kendo UI Editor. See how you can quickly insert HTML code snippet into web-based editor in your app.",
            "aspnet-mvc": "This example demonstrates the snippet feature of ASP.NET MVC Editor. See how you can quickly insert HTML code snippet into web-based editor in your app."
        }
      },
      {
        "text": "Styles",
        "url": "editor/styles",
        "title": {
            "kendo-ui": "Style tool demo for Kendo UI HTML5-based web editor | Kendo UI Demos",
            "aspnet-mvc": "Style tool demo for ASP.NET MVC web editor | ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This example shows how you can use Kendo UI Editor's style tool to customize the content of the widget with CSS classes.",
            "aspnet-mvc": "This example shows how you can use the ASP.NET MVC Editor style tool to customize the content of the control with CSS classes."
        }
      },
      {
        "text": "Events",
        "url": "editor/events",
        "title": {
            "kendo-ui": "Example for events in Kendo UI Editor component",
            "aspnet-mvc": "Example for events in ASP.NET MVC Editor component"
        },
        "meta": {
            "kendo-ui": "This demo illustrates which events are fired when the editor is blurred, its content is changed or a command is executed.",
            "aspnet-mvc": "This demo illustrates which events are fired when the ASP.NET MVC editor is blurred, its content is changed or a command is executed."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "editor/globalization"
      },
      {
        "text": "API",
        "url": "editor/api",
        "title": {
            "kendo-ui": "API demo for Kendo UI Web Editor component",
            "aspnet-mvc": "API demo for ASP.NET MVC Editor component"
        },
        "meta": {
            "kendo-ui": "This examples show how the API of Kendo UI Editor works in action and how the content in the editor can be easily manipulated via the API.",
            "aspnet-mvc": "This examples show how the API of ASP.NET MVC Editor works in action and how the content in the editor can be easily manipulated via the API."
        }
      },
      {
        "text": "Localization",
        "url": "editor/localization",
        "title": {
            "kendo-ui": "Localization support in Kendo UI Editor"
        },
        "meta": {
            "kendo-ui": "With Kendo UI Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the localization support in the widget."
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "RTL support",
        "url": "editor/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI Editor",
            "aspnet-mvc": "RTL support in ASP.NET MVC Editor"
        },
        "meta": {
            "kendo-ui": "With Kendo UI Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the RTL support in the widget.",
            "aspnet-mvc": "With ASP.NET MVC Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the RTL support in the component."
        }
      },
      {
        "text": "PDF Export",
        "url": "editor/pdf-export",
        "title": {
            "kendo-ui": "PDF export support in Kendo UI Editor",
            "aspnet-mvc": "PDF export support in ASP.NET MVC Editor"
        },
        "meta": {
            "kendo-ui": "With Kendo UI Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the PDF export support in the widget.",
            "aspnet-mvc": "With ASP.NET MVC Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the PDF export support in the component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "editor/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI Editor",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC Editor"
        },
        "meta": {
            "kendo-ui": "Kendo UI Editor is another widget that supports keyboard navigation. Check out the demo to learn how to implement it in your app.",
            "aspnet-mvc": "ASP.NET MVC Editor is another control that supports keyboard navigation. Check out the demo to learn how to implement it in your app."
        }
      },
      {
        "text": "MVVM",
        "url": "editor/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Editor"
        },
        "meta": {
            "kendo-ui": "Events, value and visible MVVM binding support in Kendo UI Editor"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "editor/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Editor"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Editor"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Grid",
    "name": "grid",
    "pro": "true",
    "api": "web/grid",
    "documentation": {
       "kendo-ui": "getting-started/web/grid/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/grid/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/grid/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/grid/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/grid",
       "aspnet-mvc": "aspnet-mvc/grid",
       "jsp-ui": "jsp/grid",
       "php-ui": "php/grid"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/grid",
       "aspnet-mvc": "aspnet-mvc/grid",
       "jsp-ui": "jsp/grid",
       "php-ui": "php/grid"
    },
    "spriteCssClass": "gridIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "grid/index",
        "title": {
            "kendo-ui": "jQuery Grid control example | Kendo UI Grid Demos",
            "aspnet-mvc": " ASP.NET MVC Grid control example"
        },
        "meta": {
            "kendo-ui": "This demo for Kendo UI jQuery-based Grid component shows how you can make your static HTML tables and raw data much more interactive to match your modern web app.",
            "aspnet-mvc": "In this demo for Kendo UI jQuery-powered Grid in ASP.NET MVC you will see all basic functionalities of the extension."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI grid is a powerful widget which allows you to visualize and edit data via its table representation. It provides a variety of options about how to present and perform operations over the underlying data, such as paging, sorting, filtering, grouping, editing, etc. To feed the grid with data, you can supply either local or remote data via the Kendo UI DataSource component, used as a mediator.</p><br/><p>There are two possible ways to instantiate a Kendo UI grid:</p><ol><li>From an empty div element. In this case all the Grid settings are provided in the initialization script statement.</li><li>From an existing HTML table element. In this case some of the Grid settings can be inferred from the table structure and elements HTML attributes.</li></ol><br/><p>In both cases the grid is registered as a jQuery plugin</p><br/><p>In this demo you can see how you can easily configure the grid to display data and perform sorting, paging and grouping operations via its built-in settings. </p><br/><p>Additional information about how to use the Kendo UI grid widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/web/grid/introduction\" target=\"_blank\">this section</a> of the product documentation.</p>\n",
            "aspnet-mvc": "<p>The <strong>Telerik Grid for ASP.NET MVC</strong> is a powerful component, which allows you to visualize and edit data via its table representation. It provides a variety of options about how to present and perform operations over the underlying data, such as paging, sorting, filtering, grouping, editing, exporting and many more. <br /> <br /> You can provide the data to the widget with Server (HTTP GET requests) or AJAX binding.<br /> In this demo you can see how you can easily configure the grid to display data and perform sorting, paging and grouping operations via its built-in settings. </p> <p>You can find additional information on how to use the Kendo UI MVC Grid in <a href=\"http://docs.telerik.com/KENDO-UI/aspnet-mvc/helpers/grid/overview\" target=\"_blank\"> this section</a> of the product documentation.<br/></p> <p><strong>Key Features</strong></p> <ul style=\"list-style-type: disc;\"> <li>Responsive and Adaptive HTML 5 Rendering</li> <li>Integrated paging, sorting, filtering and grouping functionalities.</li> <li>Insert, Update and Delete From DataSource</li> <li>Export to PDF and MS Excel</li> <li>Ultimate Performance with Virtual Scrolling</li> <li>Frozen Columns</li> <li>Column Resize, Reorder and Show/Hide Interactions</li> <li>Hierarchical Grid</li> <li>Server- and Client-Side API for Max Flexibility</li> <li>Full Control over the Layout Presentations through the Grid templates</li> <li>Accessibility, Keyboard Navigation and RTL Support</li> <li>Selecting Cells and Rows</li> <li>Scaffolding in Visual Studio</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/grid\">Grid for ASP.NET MVC</a></p>"
        }
      },
      {
        "text": "Initialization from table",
        "url": "grid/from-table",
        "title": {
            "kendo-ui": "jQuery Grid Initialization from a table | KendoGrid demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how jQuery Grid widget in Kendo UI Web displays tabular data once the grid is created from HTML5 element with defined columns and table elements."
        },
        "description": {
            "kendo-ui": "<p>When grid is initialized from an existing HTML table, this table is presumably already populated with data. This improves accessibility and SEO, and warrants the data will be visible even when JavaScript is disabled or there's a JavaScript error on the page.</p> <p>Note that the Grid uses a Kendo UI DataSource instance even when it is created from a table. The cell content is \"fetched\" and thus the DataSource is fed with data. The data field names in the DataSource are either created from the header cell content or the data-field attributes of the header cells. The data field names should be valid Javascript identifiers, that's why it is recommended to use data-field attributes, otherwise the header cell content must obey several limitations:</p> <ul> <li>no spaces</li> <li>no special characters</li> <li>the first character should be a letter</li> </ul> <p>When creating the Grid from an existing table, the column settings can be defined via HTML attributes. <br /> <br /> More information regarding Kendo UI grid creation from data table can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/introduction#create-a-grid-from-an-existing-html-table\">here</a>.</p>\n"
        },
        "packages": [
          "!mvc",
          "!php",
          "!jsp"
        ]
      },
      {
        "text": "MVVM",
        "url": "grid/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Grid"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Grid"
        },
        "description": {
           "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI grid to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel instance </strong>(with <strong>kendo.observable</strong> call) which wraps the grid data source, and instantiate the grid, its attributes and binding definition using<strong> data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the grid, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter of the documentation</a>. </p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "grid/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Grid"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Grid"
        },
        "description": {
           "kendo-ui": "<p>The Kendo UI grid features inherent integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p>&nbsp;angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our grid for apps which could benefit from such integrations. Further, you can specify the grid options as a field in the $scope and then associate them via the options attribute of the grid Angular definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use the Kendo UI grid with AngularJS you can gather from <a href=\"http://docs.telerik.com/kendo-ui/AngularJS/the-grid-widget\" target=\"_blank\">this help resource</a>.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to local data",
        "url": "grid/local-data-binding",
        "title": {
            "kendo-ui": "Binding to local data in Kendo UI Grid | Kendo UI Web",
            "aspnet-mvc": "Binding to local data in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates how we can bind Kendo UI Grid widget to local JSON Data by using Kendo UI DataSource component.",
            "aspnet-mvc": "This sample demonstrates how we can bind the Telerik ASP.NET MVC Grid control to local JSON Data by using Kendo UI DataSource component."
        },
        "group": "Data Binding",
        "description": {
            "kendo-ui": "<p>The Kendo UI grid suppports data binding and you can command the widget to display data either from local or remote data storage. For local data binding you simply need to supply an array of JavaScript objects/JSON via the dataSource data property of the grid, or utilize the Kendo UI DataSource as a mediator between the grid and the underlying data. </p> <br /> <p>In this example the grid fetches its data from a JavaScript file named products, registered via a script tag in the head section of the page. Note that in addition to the visualization, the grid provides built-in support for operations over data such as sorting, filtering and paging. </p> <br /> <p> There are two possible ways to instantiate a Kendo UI grid: </p> <ol> <li>From an empty div element. In this case all the Grid settings are provided in the initialization script statement.</li> <li>From an existing HTML table element. Thus some of the Grid settings can be inferred from the table structure and elements HTML attributes.</li> </ol> <br /> <p>In both cases the grid is registered as a standard jQuery plugin.</p> <br /><p>Additional information about how to utilize the data binding feature of the Kendo UI grid can be found in <a href=\"http://docs.telerik.com/kendo-ui/web/grid/walkthrough#data-binding---local\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Grid offers two ways of data-binding:</p> <ul style=\"list-style-type: disc;\"> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/server-binding\">Server</a> - the widget performs server-side requests (HTTP GET) when doing paging, sorting and filtering.</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/ajax-binding\">Ajax</a> - the widget will make Ajax requests when doing paging, sorting, filtering, grouping or saving data. In this mode the grid retrieves only the data (in JSON format) representing the current page. As a result only the grid is updated.</li> </ul> <p>In this demo you can see how to databind the Grid through Ajax-bound mode to an entity DataSource. The ProductService class defines the CRUD data structure that is applied to the Grid.</p> <p>Note that in addition to the visualization, the grid also provides built-in support for operations over data such as sorting, filtering and paging.</p> <p>Additional information about how to utilize the data binding feature of the MVC grid component can be found in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/ajax-binding\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "grid/remote-data-binding",
        "title": {
            "kendo-ui": "Remote data binding example in KendoGrid",
            "aspnet-mvc": "Remote data binding example in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This example and demo source code illustrate how KendoGrid component can be bound to remote data by using the DataSource component.",
            "aspnet-mvc": "This example and demo source code illustrate how the Telerik ASP.NET MVC Grid component can be bound to remote data using the DataSource component."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI grid supports data binding and you can command the widget to display data either from local or remote data storage. For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP, OData or XML format, and utilize the Kendo UI DataSource as a mediator between the grid and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <br/> <p>In this example the grid fetches its data from a remote endpoint using a web service (Northwind.svc) assigned via the dataSource -> transport -> read attribute. It also defines the schema model of the response from the web service, as well as the type of the service (odata) via the dataSource type property. Note that in addition to the visualization, the grid provides built-in support for operations over data such as sorting, filtering and paging. </p> <br/> <p> There are two possible ways to instantiate a Kendo UI grid: </p> <ol> <li>From an empty div element. In this case all the Grid settings are provided in the initialization script statement.</li> <li>From an existing HTML table element. Thus some of the Grid settings can be inferred from the table structure and elements HTML attributes.</li> </ol> <br/> <p>In both cases the grid is registered as a standard jQuery plugin.</p> <br/> <p>Additional information about how to utilize the data binding feature of the Kendo UI grid can be found in <a href=\"http://docs.telerik.com/kendo-ui/web/grid/walkthrough#data-binding--remote\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Grid offers two ways of data-binding:</p> <ul style=\"list-style-type: disc;\"> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/server-binding\">Server</a> - the widget performs server-side requests (HTTP GET) when doing paging, sorting and filtering.</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/ajax-binding\">Ajax</a> - the widget will make Ajax requests when doing paging, sorting, filtering, grouping or saving data. In this mode the grid retrieves only the data (in JSON format) representing the current page. As a result only the grid is updated.</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP, OData or XML format, and utilize the DataSource as a mediator between the grid and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the grid fetches its data from a MVC controller assigned via the DataSource read configuration. In addition to the visualization, the grid also provides built-in support for operations over data such as sorting, filtering and paging.</p> <p>Additional information about how to utilize the data binding feature of the MVC grid component can be found in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/ajax-binding\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to Telerik Backend Services",
        "url": "grid/everlive",
        "title": {
            "kendo-ui": "Binding to Telerik Backend Services | Kendo UI Grid demo",
            "aspnet-mvc": "Binding ASP.NET MVC Grid to Telerik Backend Services"
        },
        "meta": {
            "kendo-ui": "This example shows how the Kendo UI Grid can be bound to Telerik Backend Services which will provide the backend functionality",
            "aspnet-mvc": "In this sample you will see in action how Telerik ASP.NET MVC Grid is bound to Telerik cloud-based services."
        },
        "description":{
            "kendo-ui": "<h4>What are the Telerik Backend Services?</h4><p>Telerik Backend Services are a set of cloud-based services that enable developers to build and manage mobile apps insignificantly faster, easier and more scalable way. Telerik Backend Services can significantly speed-up development by providing your app with data storage, user management and server-code execution. Unlike other products, Telerik Backend Services are the integrated cloud-storage provider for all Telerik products.</p><p style=\"padding-top: 1em;\">&raquo; <a class=\"hyperlink\" href=\"http://docs.telerik.com/platform/backend-services/what-are-telerik-backend-services\" title=\"Getting started with Telerik Backend Services\">What are Telerik Backend Services</a></p><p>&raquo; <a class=\"hyperlink\" href=\"http://docs.telerik.com/platform/backend-services/development/javascript-sdk/introduction\">Telerik Backend Services JavaScript SDK</a></p><p>&raquo; <a class=\"hyperlink\" href=\"http://docs.telerik.com/platform/backend-services/development/javascript-sdk/kendoui/kendo-uiintegration\" title=\"Introduction to Kendo UI and Telerik Backend Services JavaScript integration\">Integration with Kendo UI</a></p><p class=\"demo-hint\" style=\"padding-top: 1em;\">Note: The Telerik Backend Services data source is not supported on IE8 and below yet, because it relies on <a class=\"hyperlink\" href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">cross-origin resource sharing</a>.</p>"
          },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to SignalR",
        "url": "grid/signalr",
        "title": {
            "kendo-ui": "Real-time Binding to SignalR Hub",
            "aspnet-mvc": "Real-time Binding to SignalR Hub | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This example shows how the Kendo UI Grid can be bound to SignalR Hub for real-time push notifications",
            "aspnet-mvc": "This example shows how the Telerik ASP.NET MVC Grid can be bound to SignalR Hub for real-time push notifications."
        },
         "description": {
             "kendo-ui": "<p>There are situations when you would like to perform real-time updates for all users which start a session with your web app. <br /> <br /> This is when you can utilize SignalR and the Kendo UI DataSource. The latter supports signalr dialect by setting its <strong>type </strong>attribute and<strong> transport-&gt;signalr </strong>configuration.&nbsp; In this way you instruct the data source to use SignalR protocol for transmitting and operating with data in real time on every page refresh, also known under the term long polling.</p> <p>This is especially useful for web applications which require high-frequency updates, for instance chat apps, real-time gaming, etc. More on the SignalR support of the Kendo UI DataSource can be found <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-transport.signalr\" target=\"_blank\">in this section of the docs.</a></p>",
       "aspnet-mvc": "<p>This demo shows how the Telerik ASP.NET MVC Grid can be bound to a <a href=\"http://signalr.net/\">SignalR</a> Hub for real-time push notifications. This is useful for web applications (chat, gaming and other aps) which require high-frequency updates where you usually want to perform grid updates in real-time on all connected clients.</p> <p>To configure the SignalR binding, set the <strong>SignalR</strong> and <strong>Transport</strong> settings in the Grid&rsquo;s DataSource configuration.&nbsp; In this way you instruct the data source to use SignalR protocol for transmitting and operating with data in real time.</p> <p>You can find more information in this article: <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/how-to/grid-bound-to-signalr\" target=\"_blank\">Binding Grid widget to <strong>SignalR</strong> Hub</a>.</p>"
         },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to WebSocket",
        "url": "grid/web-socket",
        "title": {
            "kendo-ui": "Real-time Binding to WebSocket"
        },
        "meta": {
            "kendo-ui": "This example shows how the Kendo UI Grid can be bound to a WebSocket for real-time push notifications"
        },
         "description": {
             "kendo-ui": "<p>There are situations when you would like to perform real-time updates for all users which start a session with your web app. <br /> <br /> This is when you can utilize WebSockets and the Kendo UI DataSource. The latter supports WebSockets by setting <strong>transport-&gt;push/read/update/destroy/create</strong> methods configuration for handling data requests in this way.&nbsp; In this way you tell the data source to use web sockets for transmitting and operating with data in real time on every page refresh, also known under the term long polling.</p> <p>This is especially useful for web applications which require high-frequency updates, for instance chat apps, real-time gaming, etc. More on the WebSockets support of the Kendo UI Data Source can be found <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-transport.push\" target=\"_blank\">in this section of the docs.</a></p>"
         },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Working Offline",
        "url": "grid/offline",
        "title": {
            "kendo-ui": "Working Offline"
        },
        "meta": {
            "kendo-ui": "This example shows how the Kendo UI Grid can work with offline data"
        },
         "description": {
             "kendo-ui": "<p>In various scenarios users would like to keep interacting with their web app, modify data and store changes even when there's no internet connection available. Further, they would want to sync their changes with the server once the connection is restored and they are back online.</p> <p>With the power of the Kendo UI DataSource, this offline data storage and sync capability comes as built-in functionality for people making use of its features. This demo illustrates how you can edit, create or delete records in the grid while being offline, persist these changes while disconnected and the sync them when you are online again. This is done by the DataSource component which is the mediator between the grid and the underlying data. </p> <p>&nbsp;Important configuration setting for the DataSource when working with offline data is its <strong>offlineStorage </strong>option (by default <strong>localStorage </strong>is used) and utilizing its <strong>online </strong>and <strong>offlineData </strong>methods. Custom offline storage is also supported.</p> <p>More information on the offline data support of the data source is available in <a href=\" http://docs.telerik.com/kendo-ui/framework/datasource/offline\" target=\"=_blank\">this help article.</a></p>"
          },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Custom ajax binding",
        "url": "grid/customajaxbinding",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Custom data source",
        "url": "grid/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "OData binding",
        "url": "grid/odata",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Web API binding",
        "url": "grid/webapi",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Server binding",
        "url": "grid/serverbinding",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Custom server binding",
        "url": "grid/customserverbinding",
        "packages": [
          "mvc-offline"
        ]
      },
      {
          "text": "Export to Excel",
          "url": "grid/excel-export",
          "title": {
              "kendo-ui": "Exporting to MS Excel"
          },
          "meta": {
              "kendo-ui": "Export Kendo UI grid as Microsoft Excel file"
          },
          "group": "Exporting",
          "description": {
             "kendo-ui": "<p>When using grid, it is often useful and important to export your data to MS Excel in order to make it accessible offline, share it with your colleagues, etc. </p><p>The Kendo UI grid provides client Excel export functionality (server-agnostic) which can be directly utilized to serve the purpose to share data in the aforementioned ways. To enable it, include the corresponding command to the grid toolbar and configure the export settings accordingly. Alternatively, you can trigger Excel export by invoking the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsExcel\">saveAsExcel</a> method from the client API of the grid. <br /><br />Additionally, you have the option to customize the rows/columns and cells of the exported file by intercepting the excelExport event. More information on this topic can be found in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/excel-export\">following documentation article</a>.</p>",
			 "aspnet-mvc": "<p>This example shows how to enable the Export to Excel functionality of the Telerik MVC Grid extension.<br /> You have to include the Excel toolbar command .ToolBar(tools =&gt; <strong>tools.Excel()</strong>) as well as to specify the <strong>FileName</strong> export setting. </p> <p>Alternatively, you could force the Excel export by invoking the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsExcel\" target=\"_blank\">saveAsExcel</a> method from the Client-side API of the component. <br /> <br /> Yet another useful option is the ability to customize the grid&rsquo;s rows/columns and cells of the exported file by intercepting the <strong>excelExport</strong> event. You can find more information in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/excel-export\">following help article</a>.</p>"
           },
          "packages": [
              "!offline"
          ]
      },
      {
          "text": "Export to PDF",
          "url": "grid/pdf-export",
          "title": {
              "kendo-ui": "Exporting to PDF"
          },
          "meta": {
              "kendo-ui": "Export Kendo UI grid as PDF file"
          },
          "description": {
             "kendo-ui": "<p>When using grids, you may need to export your data to PDF in order to make it accessible on-the-go, share it with your boss or peers, etc. </p><p>The Kendo UI grid provides client Pdf export functionality (server-agnostic) which is powered by the underlying Drawing API engine of the Kendo UI framework. To enable it, include the corresponding command to the grid toolbar and configure the pdf export settings in par with your preferences. For instance, you can specify to export all pages, margins, paper size, font, etc. To initiate export programmatically, you can call the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsPDF\">saveAsPdf</a> method from the client API. <br /><br />Furthermore, you have the ability to customize the look and feel of the exported grid table by wiring the pdfExport event of the grid. More information on the Pdf export feature of the widget is available in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/print-export#exporting\">following help topic</a>.</p>",
			 "aspnet-mvc": "<p>Nowadays, the PDF format is very popular and widely used to present documents in a manner independent of application software, hardware and operating systems. This demo demonstrates how to export the Telerik MVC Grid contents to PDF.</p> <p>The approach is very straight-forward - to export the grid content to PDF include the corresponding command to the grid toolbar&nbsp;.ToolBar(tools =&gt; <strong>tools.Pdf()</strong>) and configure the PDF export setting. For instance, you can specify the file name and whether to export all pages, margins, paper size, font, etc. To initiate export programmatically, you can call the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsPDF\">saveAsPdf</a> method from the client-side API. <br /> <br /> Additionally, you can customize the appearance of the exported grid table by attaching to the <strong>pdfExport</strong> event. Visit the <a href=\"http://demos.telerik.com/aspnet-ajax/editor/examples/overview/%5C%27http:/docs.telerik.com/kendo-ui/web/grid/print-export#exporting%5C%27\" target=\"_blank\">following help article</a> to learn exactly how to do that.</p>"
           },
          "packages": [
              "!offline"
          ]
      },
      {
        "text": "Copy to Excel",
        "url": "grid/copy-to-excel",
        "title": {
            "kendo-ui": "Copy to Excel in Kendo UI Grid | Kendo UI Web Demo"
        },
        "meta": {
            "kendo-ui": "In this example we will learn how to enable the allowCopy option of Kendo UI Grid component to allow copying data to Excel."
        },
         "description": {
           "kendo-ui": "<p>Having used to the copy-paste functionality available in MS Excel, many users would want to copy grid cell content from web apps and paste in Excel, or some other place for further review, or just to duplicate it.</p> <p>With the Kendo UI grid this is built-in functionality which is supported by setting two properties: <strong>selectable-&gt;multi cell</strong> and <strong>allowCopy-&gt;true</strong>. As simple as that, your users will be able to utilize copy and paste between across their apps, using the browser clipboard for this purpose \"behind the scenes\". </p>",
       "aspnet-mvc": "<p>Having used to the copy-paste functionality available in MS Excel, many users would want to copy grid cell content from web apps and paste in Excel, or some other place for further review, or just to duplicate it.</p> <p>With the Telerik Grid HTML helper this built-in functionality is supported by setting two configuration settings: <strong>Selectable</strong> -&gt; GridSelectionMode.Multiple and <strong>AllowCopy</strong>(true). As simple as that, your users will be able to utilize copy and paste between the browser and their apps.</p>"
         }
      },
      {
        "text": "Batch editing",
        "url": "grid/editing",
        "title": {
            "kendo-ui": "Batch editing example for Kendo UI jQuery Grid control",
            "aspnet-mvc": "Batch editing functionality in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the batch editing feature of Kendo UI jQuery Grid. Find the source code which shows how to send changes to the server as a batch.",
            "aspnet-mvc": "In this sample you will play with the batch editing functionality of Telerik ASP.NET MVC Grid."
        },
        "group": "Data Editing",
         "description": {
            "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>The focus of this demo is to present how to enable batch editing operations by specifying the <strong>batch-&gt;true</strong> option via the grid's data source settings. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>",
			"aspnet-mvc": "<p>A common scenario is to switch grid cells in edit mode by simply clicking them, update the data on the client and then process all changes on the server in a single batch update.<br /> <br /> This demo shows how this can be accomplished using the built-in batch create, update and destroy commands of the Telerik Grid component.<br /> <br /> All you have to do to enable the batch data editing functionality is to:</p> <ul style=\"list-style-type: disc;\"> <li>Turn on the inline cell editing by setting: .Editable(editable =&gt; editable.Mode(GridEditMode.<strong>InCell</strong>))</li> <li>Enable the Add New Record, Save Changes and Discard Changes buttons on the toolbar by setting: .ToolBar(toolbar =&gt; { toolbar.<strong>Create</strong>(); toolbar.<strong>Save</strong>(); }</li> <li>Set .<strong>Batch</strong>(<strong>true</strong>) and .<strong>ServerOperation</strong>(<strong>false</strong>) properties in the DataSource declaration to enable batch updates and perform the paging, sorting, filtering and grouping operations on the client.</li> <li>Invoke the CRUD action methods in the DataSource</li> </ul> <p>Once the cells are edited you have the option to process the changes or discard them. Click on a cell/row to place it in edit mode. Use the Save changes or Cancel changes buttons to process/discard all changes at once.</p> <p>For more details about the batch editing capabilities of the MVC Grid see the help article <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/batch-editing\" target=\"_blank\">here</a>.</p>"
         }
      },
      {
        "text": "Inline editing",
        "url": "grid/editing-inline",
        "title": {
            "kendo-ui": "Applying inline editing in Kendo UI Grid",
            "aspnet-mvc": "Applying inline editing in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates how the values in the cells of KendoGrid can be easily changed. Try the demo source code to find how inline data grid can be deleted and modified.",
            "aspnet-mvc": "See how the values in the cells of Telerik ASP.NET MVC Grid can be easily changed. Try the demo source code to find how inline data grid can be deleted and modified."
        },
         "description": {
            "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>This example aims to illustrate how to perform inline editing by setting the <strong>editable-&gt;inline</strong> option of the grid. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>",
			"aspnet-mvc": "<p>A common scenario is to toggle a grid cell into edit mode by simply clicking on the Edit row button, update the data inside the cell and save/discard the changes using the Update/Cancel buttons.<br /> <br /> This demo shows how this inline content management can be achieved using the data operations (create, update and destroy) of the Telerik MVC Grid component.<br /> <br /> All you have to do to enable the inline editing capabilities of the Grid is:</p> <ul> <li>Turn on the inline cell editing by setting: .Editable(editable =&gt; editable.Mode(GridEditMode.<strong>InLine</strong>))</li> <li>To enable insertion of new records, add the New Record button on the toolbar by adding: .ToolBar(toolbar =&gt; toolbar.<strong>Create</strong>())</li> <li>To enable the Edit and Delete commands on each row, insert a new column: <span>columns.Command(command =&gt; { command.<strong>Edit</strong>(); command.<strong>Destroy</strong>(); });</span></li> <li>Invoke the <strong>Create</strong>, <strong>Read</strong>, <strong>Update</strong> and <strong>Destroy</strong> action methods in the DataSource. These methods are responsible for the data items manipulation.</li> </ul> <p>For more details about the inline editing capabilities of the MVC Grid see the help article <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/ajax-editing\" target=\"_blank\">here</a>.</p>"
         }

      },
      {
        "text": "Popup editing",
        "url": "grid/editing-popup",
        "title": {
            "kendo-ui": "Popup data editing example for Kendo UI Grid widget",
            "aspnet-mvc": "Batch editing functionality in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how the records in KendoGrid can be easily modified in a pop-up dialog.",
            "aspnet-mvc": "In this sample you can see the batch editing functionality of Telerik ASP.NET MVC Grid in action."
        },
         "description": {
            "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>In this demo you can edit or insert new items via a popup form by setting the <strong>editable-&gt;popup</strong> option of the grid. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>",
			"aspnet-mvc": "<p>In various scenarios there is requirement to not only visualize tabular data, but also allow the ability to the edit the rows content in a popup edit form. In this demo you can edit or insert new items via a popup form by configuring the Telerik MVC Grid component as follow:</p> <ul> <li>Activate the popup cell editing by setting: .Editable(editable =&gt; editable.Mode(GridEditMode.<strong>PopUp</strong>))</li> <li>To enable insertion of new records, add the New Record button on the toolbar: .ToolBar(toolbar =&gt; toolbar.<strong>Create</strong>())</li> <li>To enable the Edit and Delete commands on each row, insert a new column: <span>columns.Command(command =&gt; { command.<strong>Edit</strong>(); command.<strong>Destroy</strong>(); });</span></li> <li>Invoke the <strong>Create</strong>, <strong>Read</strong>, <strong>Update</strong> and <strong>Destroy</strong> action methods in the DataSource. These methods are responsible for the data items manipulation.</li> </ul> <p>For more details about the editing capabilities of the MVC Grid see the help article <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/batch-editing\" target=\"_blank\">here</a>.</p>"
         }
      },
      {
        "text": "Editing custom editor",
        "url": "grid/editing-custom",
        "sources": {
            "aspnet-mvc": [{
                "name": "ClientCategory.cshtml",
                "url": "~/src/aspnetmvc/views/razor/grid/EditorTemplates/ClientCategory.cshtml"
            }, {
                "name": "ProductViewModel.cs",
                "url": "~/src/aspnetmvc/models/ProductViewModel.cs"
            }]
        },
        "title": {
            "kendo-ui": "jQuery Grid Custom Editing example | Kendo UI Grid Demo",
            "aspnet-mvc": "ASP.NET MVC Grid Custom Editing | UI for ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": " This example illustrates how editing in KendoGrid can be further customized with the custom editor and using DataSource component.",
            "aspnet-mvc": "This example illustrates how editing in Telerik ASP.NET MVC Grid can be further customized with the custom editor and using DataSource component."
        },
         "description": {
            "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>This sample demonstrates how to set a custom editor (Kendo UI dropdown list in this case) as grid column editor by specifying the <strong>Category</strong> column's <strong>editor</strong> field. The value of this field points to a JavaScript function which instantiates the column editor for the corresponding column cells.</p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>",
			"aspnet-mvc": "<p>In numerous scenarios there is a requirement to not only visualize data in a table structure, but also to have the ability to manipulate it and save the changes.</p> <p>The MVC grid wrapper supports CRUD data editing operations via a simple configuration of its data source. All you have to do to enable its data editing capabilities is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option: <br /> .Editable(editable =&gt; editable.Mode(GridEditMode.InCell))</li> <li>declare field definitions through the <strong>Model configurator</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>Read, Create, Update and Destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p > In this demo you can see how to further customize the editor by setting a custom editor (Html.Kendo().DropDownListFor<span>()</span><span> </span>MVC helper in this case) as a grid column editor by specifying the <strong>Category</strong> column's <strong>editor</strong> field, i.e.<br /> <br /> .Columns(columns =&gt;<span>&nbsp; </span>{ &hellip;<span>&nbsp;&nbsp;&nbsp; </span><br /> columns.Bound(p =&gt; p.Category).ClientTemplate(\"#=Category.CategoryName#\"); <br /> })<br /> <br /> For more details about the editing capabilities of the MVC Grid see the help article <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/batch-editing\" target=\"_blank\">here</a>.</p>"
         }
      },
      {
        "text": "Server editing",
        "url": "grid/serverediting",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Custom validator editing",
        "url": "grid/editing-custom-validation",
        "title": {
            "kendo-ui": "Custom Validation example for Kendo UI Grid widget",
            "aspnet-mvc": "Custom Validation example for Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": " This example demonstrates how to implement custom validation rule in a Kendo UI Grid.",
            "aspnet-mvc": "This example demonstrates how to implement custom validation rule in a Telerik ASP.NET MVC Grid."
        },
         "description": {
            "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>Here you can see how defining a validation rule via the <strong>schema-&gt;model-&gt;fields-&gt;validation</strong> option of the grid data source forces a check for first capital letter for the Product Name column, when you edit the value in it. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>",
			"aspnet-mvc": "<p>In numerous scenarios there is a requirement to not only visualize data in a table structure, but also to edit and validate it before save changes.</p> <p>The MVC grid helper supports CRUD data editing operations via a simple configuration of its data source. All you have to do to enable its data editing capabilities is to:</p> <ul> <li>set the grid's <strong>Editable </strong>configuration property: <br /> .Editable(editable =&gt; editable.Mode(GridEditMode.InCell))</li> <li>declare field definitions through the <strong>Model configurator</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>Read, Create, Update and Destroy</strong> methods</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p > In this demo you can see how defining a custom validation rule via the CustomValidationProductViewModel model and the productnamevalidation function you can force a check for first capital letter for the Product Name column, when you edit the value in it.<br /> <br /> For more details about the editing capabilities of the MVC Grid see the help article <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/grid/batch-editing\" target=\"_blank\">here</a>.</p>"
         }
      },
      {
        "text": "Virtualization of local data",
        "url": "grid/virtualization-local-data",
        "title": {
            "kendo-ui": "Example of local data virtualization in Kendo UI Grid control"
        },
        "meta": {
            "kendo-ui": "This demo shows how built-in UI virtualization for highly optimized binding to large data sets is enabled in KendoGrid widget. Demo source code helps you reproduce and utilize the functionality."
        },
        "group": "Scrolling",
        "description": {
          "kendo-ui": "<p>There are cases when you may need to operate with large amount of data in the grid, and fetching and processing this data at once would impose a performance penalty due to limited browser resources. </p> <p>Luckily, the Kendo UI grid has a solution called data virtualization that alleviates any slowdowns when operating with huge volumes of data. When enabled via the <strong>scrollable-&gt;virtual</strong> configuration option, it displays a vertical scrollbar for the grid content and renders only the number of items set via the<strong> pageSize</strong> property of the grid data source. After you drag the scrollbar and the pageSize is exceeded, it makes automatic requests to retrieve and render the next set of grid rows. </p> <p>Both local and remote data are supported with the grid virtualization feature, whereas in this demo the records are obtained locally.</p> <p>&nbsp;</p>"
        },
        "packages": [
          "!mvc"
        ]
      },
      {
        "text": "Virtualization of remote data",
        "url": "grid/virtualization-remote-data",
        "title": {
            "kendo-ui": "Demo for Kendo UI Grid virtualization to remote data",
            "aspnet-mvc": "Virtualization of remote data in ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This sample shows how KendoGrid UI virtualization is enabled to remote data.",
            "aspnet-mvc": "This demo illustrates the virtualization of remote data in ASP.NET MVC Grid."
        },
        "description": {
          "kendo-ui": "<p>There are cases when you may need to operate with large amount of data in the grid, and fetching and processing this data at once would impose a performance penalty due to limited browser resources. </p> <p>Luckily, the Kendo UI grid has a solution called data virtualization that alleviates any slowdowns when operating with huge volumes of data. When enabled via the <strong>scrollable-&gt;virtual</strong> configuration option, it displays a vertical scrollbar for the grid content and renders only the number of items set via the<strong> pageSize</strong> property of the grid data source. After you drag the scrollbar and the pageSize is exceeded, it makes automatic requests to retrieve and render the next set of grid rows. </p> <p>Both local and remote data are supported with the grid virtualization feature, whereas in this demo the records are obtained from a remote endpoint.</p> <p>&nbsp;</p>",
		  "aspnet-mvc": "<p>The virtualization feature of Telerik ASP.NET MVC Grid allows you to handle large amount of data without negatively impacting the user experience and the browser performance. <br /> <br /> You can enable the virtual scrolling via the .<strong>Scrollable</strong>(scrollable =&gt; scrollable.Virtual(true)) configuration setting, which shows a vertical scrollbar for the grid content and renders only the number of items set via the <strong>PageSize</strong> setting of the grid data source. After you drag the scrollbar and the <strong>PageSize</strong> parameter value is exceeded, it makes automatic requests to retrieve and render the next set of grid rows.</p>"
        }
      },
      {
        "text": "Frozen columns",
        "url": "grid/frozen-columns",
        "title": {
            "kendo-ui": "Static columns of Kendo UI Grid control | Kendo UI Web demo",
            "aspnet-mvc": "Frozen columns demo in Telerik ASP.NET MVC Grid "
        },
        "meta": {
            "kendo-ui": "This demo shows locked columns feature of KendoGrid control.",
            "aspnet-mvc": "Play with the demo for frozen columns functionality of Telerik ASP.NET MVC Grid."
        },
        "description": {
          "kendo-ui": "<p>There are apps which require to display grids with large number of columns on limited screen estates, and making a small subset of them static when scrolling the rest horizontally to bring them in the viewable area. The concept of pinned columns is mostly known from MS Excel, and many users would like to utilize it in web context as well.</p> <p>The Kendo UI grid widget supports static/frozen columns by a single configuration setting. Simply set the <strong>locked</strong> attribute of the corresponding column to true, and this will bring the column in the locked columns group positioned on the left in the grid. Here locked columns are OrderID and ShipName, while the rest of the columns can be scrolled horizontally. </p>",
      "aspnet-mvc": "<p>There are scenarios in which you might be required to display a large number of grid columns on limited screen space, and making a small subset of them static when scrolling the rest horizontally to bring them in the viewable area. The concept of frozen columns is well known from MS Excel, and many users would like to utilize it in a web environment too.</p> <p>The Telerik ASP.NET Grid widget for MVC supports static/frozen columns by a single configuration setting. Simply set the <strong>Locked</strong> boolean setting of the corresponding column to true, and this will bring the column in the locked columns group positioned on the left in the grid. Here the locked columns are Order ID and Ship Name, while the rest of the columns can be scrolled horizontally.</p>"
        }
      },
    {
        "text": "Filter row",
        "url": "grid/filter-row",
        "title": {
            "kendo-ui": "Filter row in Kendo UI Grid | Kendo UI Web Demo"
        },
        "meta": {
            "kendo-ui": "In this example we will learn how to enable the filter row of Kendo UI Grid component."
        },
        "group": "Filtering",
         "description": {
           "kendo-ui": "<p>With the Kendo UI grid you can enable filter row in its header by setting the grid's <strong>filterable-&gt;mode</strong> property to <strong>row</strong>. Thus based on the data type of the underlying columns data the grid will render textboxes for string values, numeric inputs or date pickers for filtering in the column headers, as illustrated in this example.</p> <p>Additionally, you can specify default filter operator to be applied when the user enters value in the filter textbox and presses Enter or Tab via the keyboard. This can be done using the <strong>filterable-&gt;cell-&gt;operator </strong>attribute of the corresponding column, as demonstrated for the ShipName and Freight columns here.</p> <p>More information on the filtering grid configuration can be found in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-filterable\">this documentation section</a>.</p> <p>&nbsp;</p>",
       "aspnet-mvc": "<p>You can see in this demo how you can enable filter row in the header by setting the grid's <strong>Filterable</strong>-&gt;<strong>Mode</strong> property to <strong>Row</strong>: .Filterable(ftb =&gt; ftb.Mode(GridFilterMode.Row))<br /> <br /> Therefore based on the data type of the underlying columns data<span>,</span> the grid will render textboxes for string values, numeric inputs or date pickers for filtering in the column headers.</p> <p>Additionally, you can specify a default filter operator to be applied when the user enters value in the filter textbox and tap Tab or Enter. This can be done using the <strong>Filterable</strong>-&gt;<strong>Cell</strong>-&gt;<strong>Operator</strong> attribute of the corresponding column, as shown for the Ship Name and Freight columns.</p>"
         }
      },
      {
        "text": "Filter Multi Checkboxes",
        "url": "grid/filter-multi-checkboxes",
        "title": {
            "kendo-ui": "Filter multi-check in Kendo UI Grid | Kendo UI Web Demo"
        },
        "meta": {
            "kendo-ui": "In this example we will learn how to enable the filter multi-check of Kendo UI Grid component."
        },
         "description": {
           "kendo-ui": "<p>You can enable filtering via checkbox list in the Kendo UI grid filter menu by specifying <strong>filterable-&gt;multi=true</strong> setting for the relevant grid columns you would like to use such a filter for. </p> <p>Furthermore, you have the ability to combine this filter with itemTemplate definition as it is done with the Country column in the second grid in this demo. Thus you can customize the items with checkboxes that will be visualized and available for selection to the end user. </p> <p>More information on the filtering grid configuration can be found in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-filterable\">this documentation section</a>.</p> <p>&nbsp;</p>",
       "aspnet-mvc": "<p>You can enable checkbox list filtering in the filter menu of the Grid HtmlHelper by specifying<span> </span><strong>Columns</strong> -&gt; <strong>Filterable -&gt; Multi(true) </strong>setting for the relevant grid columns.</p> <p>In addition, you could customize the checkbox filter menu by combining the filter with <strong>ItemTemplate</strong> definition as it is done with the Country column in the bottom grid.</p>"
         }
      },
      {
        "text": "Filter menu customization",
        "url": "grid/filter-menu-customization",
        "title": {
            "kendo-ui": "Filter menu customization in Kendo UI Grid | Kendo UI Web Demo",
            "aspnet-mvc": "Filter menu customization in MVC Grid | UI for ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "In this example we will learn how to customize the filter menu of Kendo UI Grid component.",
            "aspnet-mvc": "In this example you will learn how to customize the filter menu of Telerik ASP.NET MVC Grid component."
        },
         "description": {
           "kendo-ui": "<p>In this sample we showcase how you can apply common settings for the Kendo UI grid filter menu configuration, and customize its UI on a per column basis. This is straight-forward and easy using the exposed API for the column menu.</p> <p>First we specify a single filter criterion using the <strong>filterable-&gt;extra=false</strong> setting, and limit the filter operators for string columns to <strong>starts with, equal and not equal </strong>only. Then we define built-in date picker UI to filter the datetime column in the grid, and instantiate Kendo UI AutoComplete and DropDownList for the Title and City columns, respectively. <br /> <br /> To create the dropdown filters, we assign javascript functions to the <strong>filterable-&gt;ui </strong>attributes of the corresponding columns.</p>",
       "aspnet-mvc": "<p>You can see in this demo how to apply common settings for the MVC grid filter menu configuration, and customize its user interface. <br /> <br /> To begin we should specify a single filter criterion using the Filterable-&gt;Extra(false) setting, and limit the filter operators for string columns to &ldquo;Starts with&rdquo;, &ldquo;Is equal to&rdquo; and &ldquo;Is not equal to&rdquo;. After that we define built-in DatePicker to filter the Birth Date column, and instantiate Kendo UI AutoComplete and DropDownList for the Title and City columns, respectively.</p> <p>To create the dropdown filters, we assign JavaScript functions to the Filterable-&gt;UI attributes of the corresponding columns.</p>"
         }
      },
      {
        "text": "Sorting",
        "url": "grid/sorting",
        "title": {
            "kendo-ui": "Demo for the sorting functionality of Kendo UI Grid control",
            "aspnet-mvc": "Sorting in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how to sort the data in KendoGrid. Use the demo source code to look into the logic of the grid sorting and implement it easily in your app.",
            "aspnet-mvc": "This demo shows how to sort data in Telerik ASP.NET MVC Grid. Use the demo source code to look into the logic of grid sorting and easily implement it in your app."
        },
        "group": "Functionality",
         "description": {
            "kendo-ui": "<p>This example demonstrates how to enable sorting for the Kendo UI grid. Since this functionality is built-in, all you have to do is to set the sorting configuration via the <strong>sortable </strong>grid attribute. Supported sorting modes are single and multiple.</p> <p>Check the relevant <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-sortable\" target=\"_blank\">sorting API section</a> for more details.</p>",
            "aspnet-mvc": "<p>You can learn in this sample how to enable sorting for the Telerik MVC grid. Since this functionality is built-in, all you have to do is to set the sorting configuration via the <strong>Sortable </strong>attribute. The supported sorting modes are single and multiple, which can be specified through the <strong>SortMode</strong> property.</p>"
         }
      },
      {
        "text": "Selection",
        "url": "grid/selection",
        "title": {
            "kendo-ui": "Example of selection modes for KendoGrid component",
            "aspnet-mvc": "Multiple row and cell selection in Telerik Grid for ASP.NET MVC"
        },
        "meta": {
            "kendo-ui": "This example demonstrates different selection modes, supported by KendoGrid. Review the available selection options and apply the functionality to KendoGrid in your app.",
            "aspnet-mvc": "This demo illustrates how you can use Telerik ASP.NET MVC grid with multiple row or cell selection enabled."
        },
         "description": {
           "kendo-ui": "<p>There are situations when you would like to enable the end user to select rows or cells in the grid table, and process data from them or make calculations based on this selection. The Kendo UI grid supports selection by specifying its configuration via its selectable attribute. Accepted values are:</p> <ul> <li>true (enables row selection)</li> <li>row</li> <li>cell</li> <li>multiple, row</li> <li>multiple, cell</li> </ul> <p>Further details are available in the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-selectable\" target=\"_blank\">selectable API section</a> of the docs.</p>",
       "aspnet-mvc": "<p>There are situations when you&rsquo;d like to enable your users to select rows or cells in the grid table, and process data from them or make calculations based on this selection. The MVC Grid supports selection by specifying its configuration through its <strong>Selectable</strong> -&gt; <strong>Mode</strong> and <strong>Type</strong> attributes. <br /> <br /> The accepted values for Mode are <strong>Single</strong><strong> </strong>and<strong> Multiple</strong>, while these for Type are <strong>Cell</strong> and <strong>Row</strong>.</p> <p>More details are available in the <a href=\"http://docs.telerik.com/kendo-ui/api/aspnet-mvc/Kendo.Mvc.UI.Fluent/GridSelectionSettingsBuilder#methods-Mode%28Kendo.Mvc.UI.GridSelectionMode%29\">documentation</a>.</p>"
         }
      },
      {
        "text": "Aggregates",
        "url": "grid/aggregates",
        "title": {
            "kendo-ui": "Aggregating option demo for KendoGrid jQuery control",
            "aspnet-mvc": "Aggregating option demo for Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the aggregate option for KendoGrid. Use demo source code to enable the grid to calculate aggregated values.",
            "aspnet-mvc": "This example demonstrates the aggregate option for Telerik ASP.NET MVC Grid. Use demo source code to enable the grid to calculate aggregated values."
        },
         "description": {
            "kendo-ui": "<p>Oftentimes when displaying numbers in the grid, users would like to be able to see the results from aggregate calculations at the bottom of the grid groups or columns. </p><p>This is a no-brainer with the Kendo UI grid since it has support for the mostly used aggregate functions. All you need to do is specify the pertinent aggregate function name via the<strong> columns-&gt;aggregates </strong>attributes of the grid, and the <strong>group </strong>and <strong>aggregate </strong>fields of its data source instance. Review the code snippets in the demo for further details.</p>",
      "aspnet-mvc": "<p>In some situations when displaying numbers in the grid, users would like to be able to see the results from aggregate calculations at the bottom of the grid groups or columns.</p> <p>This is a easy with the MVC grid since it offers built-in support for the most popular aggregate functions: <strong>Average</strong>, <strong>Count</strong>, <strong>Sum</strong>, <strong>Min</strong>, <strong>Max</strong> and <strong>Count</strong>. All you need to do is define the aggregates via the Columns-&gt; ClientFooterTemplate and ClientGroupFooterTemplate templates, and the Group and Aggregate fields of its DataSource instance.</p>"
         }
      },
      {
        "text": "Server aggregates",
        "url": "grid/serveraggregates",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Paging",
        "url": "grid/paging",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Hierarchy",
        "url": "grid/hierarchy",
        "title": {
            "kendo-ui": "Hierarchical Kendo UI Grid | Kendo UI Web",
            "aspnet-mvc": "Hierarchical ASP.NET MVC Grid | UI for ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the hierarchical data grid feature of Kendo UI Grid widget. Try the demo source code to play with the grid in your web app.",
            "aspnet-mvc": "This demo illustrates the hierarchical data grid feature of the Telerik ASP.NET MVC Grid component. Try the demo source code to play with the grid in your web app."
        },
         "description": {
          "kendo-ui": "<p>There are projects which require to display table data in hierarchical-like fashion, in order to visualize relations between parent and child records. <br /> <br /> This is where the Kendo UI grid hierarchy feature comes into play. To implement hierarchy with the grid widget, you need to wire its <strong>detailInit </strong>event and filter the records in the child table based on the parent key field value. Note that the <strong>e.data.[keyFieldValue]</strong> argument holds the actual key value from the parent record.</p> <p>Additional info about the detailInit event args is available in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#events-detailInit\">API docs</a>. </p>",
      "aspnet-mvc": "<p>There are projects which require to display table data in hierarchical-like fashion, in order to visualize relations between parent and child records. <br /> <br /> This is where the Telerik MVC grid hierarchy feature comes in handy. To implement hierarchy with the grid widget, you need to:</p> <ul> <li>Set the <strong>ClientDetailTemplateId</strong> setting which specifies the id of the script element containing the client-side detail template of the grid</li> <li>Define the script tag content that will be shown when the user expands the grid rows</li> </ul>"
        }
      },
      {
        "text": "Server hierarchy",
        "url": "grid/serverhierarchy",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Persist state",
        "url": "grid/persist-state",
        "title": {
            "kendo-ui": "KendoGrid Persist State API Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how setOptions and getOptions methods can manipulate the state of Kendo UI Grid widget."
        },
         "description": {
           "kendo-ui": "<p>A common requirement for web apps is to save the user customization and settings when interacting with your app, and then restore them once he/she logs back at some point in the future. </p> <p>The Kendo UI grid exposes the capability to save and restore settings that were previously applied to its structure using the <strong>getOptions </strong>and <strong>setOptions </strong>methods from its API. These methods allow you to serialize the grid current state, when needed, and then recover it at certain point in time. In this particular example we use localStorage key/value pair to save and load grid settings. </p> <p>Further info on the setOptions and getOptions methods is available in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#methods-setOptions\">this API section</a>. </p>",
       "aspnet-mvc": "<p>A common scenario is to save the user customization and settings when interacting with your app, and then restore them once he/she logs back at some point in the future.</p> <p>The Telerik MVC component provided the ability to save and restore changes that were previously applied to its structure, using its <strong>getOptions</strong> and <strong>setOptions</strong> client-side methods. You can use these methods to store settings like grouping, paging, sorting, filtering<span> </span>and when needed to restore them. To demonstrate this functionality, we use <strong>localStorage</strong> key/value pair to save and load the grid state.</p> <p>More detail on the setOptions and getOptions methods is available in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#methods-setOptions\">this API section</a>.</p>"
         }
      },
      {
        "text": "Toolbar template",
        "url": "grid/toolbar-template",
        "title": {
            "kendo-ui": "Toolbar template demo for Kendo UI HTML5 Grid control",
            "aspnet-mvc": "Toolbar templates for Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This Kendo UI Grid example shows how you can add custom toolbars to the grid and create toolbar templates.",
            "aspnet-mvc": "This Telerik ASP.NET MVC Grid example shows how you can add custom toolbars to the grid and create toolbar templates."
        },
        "group": "Templates",
        "description": {
          "kendo-ui": "<p>The Kendo UI grid exposes the option to define a template for the content of its toolbar, which can vary based on your requirements or preferences. </p> <p>Here we present a sample implementation of a toolbar template incorporating a Kendo UI dropdown to list the records in the grid by category. The dropdown is populated with the list of categories and the filter is applied on its change event by invoking the <strong>grid.dataSource.filter(params) </strong>method from the API. <br /> <br /> Note that the toolbar template is instantiated by calling the <strong>kendo.template </strong>method and assigning the returned value to the <strong>toolbar </strong>attribute of the grid instance. </p>",
		  "aspnet-mvc": "<p>The MVC grid component exposes an option to define a content template for its toolbar.</p> <p>Here you can see a sample implementation of a toolbar template incorporating a dropdownlist HtmlHelper to list the records in the grid by category. The combo is populated with the list of categories and the filter is applied on its change event by invoking the grid.dataSource.filter(params) method from the client-side API.</p> <p>Note that the toolbar template is instantiated by the ToolBar -&gt; Template method.</p>"
        }
      },
      {
        "text": "Column header template",
        "url": "grid/headertemplate",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Row template",
        "url": "grid/rowtemplate",
        "title": {
            "kendo-ui": "Changing row template in Kendo UI Grid widget",
            "aspnet-mvc": "Row Template for Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This sample shows how to change the style and concert of row cells with KendoGrid Row templates.",
            "aspnet-mvc": "This sample shows how to change the style and concert of row cells with Telrik ASP.NET MVC Grid Row templates."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI grid allows flexible customization of its rows in terms of layout and appearance by exposing row template feature for this purpose.</p> <p>In this example we present how you can specify your own custom layout for the rows in the grid using images and property bindings from its underlying data source. The templates are defined via script tags with ids associated with rendered html table row elements in the grid.<br /> <br /> Note that the row and altrow templates are instantiated by calling the <strong>kendo.template </strong>method and assigning the returned value to the <strong>rowTemplate </strong>and <strong>altRowTemplate </strong>attributes of the grid instance. </p>",
      "aspnet-mvc": "<p>The Telerik MVC grid allows flexible customization of its rows in terms of layout and appearance by exposing row template feature for this purpose.</p> <p>In this example we present how you can specify your own custom layout for the rows in the grid using images and property bindings from its underlying data source. <br /> <br /> To do that you need to define a template column as shown below:</p> <p>columns.Template(e =&gt; { }).ClientTemplate(\" \"). Title(\"Picture\");</p> <p>and after that using the <strong>ClientRowTemplate</strong> and <strong>ClientAltRowTemplate</strong> settings to set the custom client-side row and alt-row templates. Note that both templates should contain table row HTML elements.</p>"
        }
      },
      {
        "text": "Detail template",
        "url": "grid/detailtemplate",
        "title": {
            "kendo-ui": "Detail template demo in Kendo UI Grid control",
            "aspnet-mvc": "Detail Template for Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This example shows how records in the data grid widget can be presented with a detailed template.",
            "aspnet-mvc": "This example shows how records in the Telerik ASP.NET MVC Grid component can be presented with a detailed template."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how you can utilize the detail template feature of the Kendo UI grid when implementing hierarchical table presentation. The key steps here are to:</p> <ul> <li> specify <strong>detailTemplate</strong> definition for the grid</li> <li>intercept its <strong>detailInit </strong>event in order to populate the details for the expanded item </li> </ul> <p>In the scenario presented above we inject a tabstrip widget with two tabs in the detail template - the first holding the orders of the pertinent employee, and the second containing the contact information of that employee. The orders are populated inside the detailInit event handler applying filter by EmployeeID of the expanded grid row.</p>",
      "aspnet-mvc": "<p>This example demonstrates how you can utilize the detail template feature of the MVC grid component when implementing hierarchical table presentation. The key steps here are to:</p> <ul> <li>Set the <strong>ClientDetailTemplateId</strong> setting which specifies the id of the script element containing the client-side detail template of the grid</li> <li>Define the script tag content that will be shown when the user expands the grid rows</li> </ul> <p>In this example we inject a TabStrip HtmlHelper extension with two tabs in the detail template - the first contains the orders of the relevant employee, and the second one holds his/her contact information.</p>"
        }
      },
      {
        "text": "Server detail template",
        "url": "grid/serverdetails",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Server row template",
        "url": "grid/serverrowtemplate",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Multi-column headers",
        "url": "grid/multicolumnheaders",
        "title": {
            "kendo-ui": "Multiple column headers in Kendo UI Grid control | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "This demo shows multiple column headers feature of KendoGrid control."
        },
        "group": "Columns",
         "description": {
           "kendo-ui": "<p>The Kendo UI grid supports multi-column headers by specifying column groups which incorporate inner column structures. Here the Contact Info and Location columns have nested columns, depicted via an array of column definitions. </p> <p>Operations like sorting and filtering are supported on each column level, regardless of the chosen multi-header pattern.</p>",
		   "aspnet-mvc": "<p>The Telerik MVC Grid extension supports multi-column headers by specifying column groups which incorporate inner-column structures. In this demo, you can see the Contact Info and Location columns have nested columns, defined trough the Columns -&gt; Group -&gt; Columns scheme. In addition, operations like sorting and filtering are supported on each column level, regardless of the chosen multi-header pattern.</p>"
         }
      },
      {
        "text": "Column reordering",
        "url": "grid/column-reordering",
        "title": {
            "kendo-ui": "Columns reordering in Kendo UI Grid control | Kendo UI Web demo",
            "aspnet-mvc": "Column Reordering in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This demo shows column moving and reordering feature of KendoGrid control.",
            "aspnet-mvc": "In this demo you can see how simple it is to reorder columns in Telerik ASP.NET MVC Grid."
        },
         "description": {
           "kendo-ui":"<p>You can enable column reordering for the Kendo UI grid via a simple configuration setting. All you have to do is set its <strong>reorderable</strong> attribute to <strong>true</strong>, which will automatically make its columns draggable and reorderable, as illustrated in this example.</p>",
		   "aspnet-mvc": "<p>You can see in this demo how simple it is to reorder columns in Telerik ASP.NET MVC Grid. Just drag a column header over another header cell.</p> <p>You can enable this behavior by setting the <strong>Reorderable</strong> property of the grid.</p>"
         }
      },
      {
        "text": "Column resizing",
        "url": "grid/column-resizing",
        "title": {
            "kendo-ui": "Column resizing feature of Kendo UI grid control | Kendo UI Grid demo",
            "aspnet-mvc": "Column resizing in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how resizing of columns in KendoGrid is enabled in the widget. Use the demo source code to change width/height of the column.",
            "aspnet-mvc": "This demo demonstrates how you can resize columns in Telerik ASP.NET MVC Grid."
        },
         "description": {
           "kendo-ui":"<p>You can enable column resizing for the Kendo UI grid via a simple configuration setting. All you have to do is set its <strong>resizable</strong> attribute to <strong>true</strong>, which will make its columns resizable by displaying drag handles/hints when you hover in between their headers. </p>",
		   "aspnet-mvc": "<p>This example demonstrates how you can enable the columns resizing feature of the ASP.NET MVC Grid by setting the <strong>Resizable</strong> property.</p> <p>Once it is set the users can resize columns by dragging the edges (resize handles) of their header cells. They can also auto-fit a column by double-clicking its resize handle as in Excel.</p>"
         }
      },
      {
        "text": "Column menu",
        "url": "grid/column-menu",
        "title": {
            "kendo-ui": "Column menu in Kendo UI Grid",
            "aspnet-mvc": "Column menu functionality of Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This demo shows column menu functionality of KendoGrid widget.",
            "aspnet-mvc": "This Telerik example shows column menu functionality in the Grid extension for ASP.NET MVC."
        },
         "description": {
           "kendo-ui":"<p>When you interact with grid columns, you may want to be able to trigger column operations via a dedicated menu for this purpose.<br /> <br /> The Kendo UI grid has built-in support for such a feature, which can be enabled via a single configuration setting, i.e. <strong>columnMenu=true</strong>. Thus an option to display a column menu will be rendered in the grid column headers, which when activated allows&nbsp; you to sort, filter or change the visibility of the column. <br /> <br /> Furthermore, this menu takes into account whether a certain column operation is disabled via the column definition, and excludes the corresponding UI from its rendering. In this showcase this is done for the ShipAddress column where filtering is disabled. <br /> <br /> Further information about the available columnMenu API can be collected from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-columnMenu\">this article</a>.</p>",
		   "aspnet-mvc": "<p>You can try in this example the column menu functionality of the Grid extension for ASP.NET MVC.</p> <p>If you set the grid <strong>ColumnMenu</strong> setting, it will display the column menu when the user clicks the chevron icon in the column headers. The column menu allows to show and hide columns as well as filter and sort them (if filtering and sorting are enabled).</p>"
         }
      },
      {
        "text": "Column Settings",
        "url": "grid/columnsettings",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "ForeignKey column",
        "url": "grid/foreignkeycolumn",
        "title": {
            "kendo-ui": "Foreign Key Column demo in KendoGrid jQuery control",
            "aspnet-mvc": "Foreign Key Column demo in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This example shows the foreign key column functionality to cross-reference tables in KendoGrid component.",
            "aspnet-mvc": "This example shows the foreign key column functionality to cross-reference tables in the Telerik ASP.NET MVC Grid component."
        },
         "description": {
           "kendo-ui": "<p>In this demo we showcase how to implement foreign key column in the Kendo UI grid, hosting dropdown list editor for data editing. </p> <p>The column in question is defined via a key field (CategoryID). Through the column definition you set the key field as <strong>Field </strong>attribute, and the <strong>values </strong>attribute points to the source data for the items displayed in the dropdown list editor of that column. The editor items should have matching values of the same type as the key field (CategoryID in this case).</p> <p>See the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-columns.values\">relevant API section</a> of the docs for more info.</p>",
           "aspnet-mvc": "<p>In this example you can see how to implement foreign key column in the Telerik MVC grid, holding DropDownList editor for data editing. The ForeignKey column definition is shown below:<br /> <br /> <span>columns.ForeignKey(p =&gt; p.CategoryID, (System.Collections.IEnumerable)ViewData[\"categories\"], \"CategoryID\", \"CategoryName\").Title(\"Category\").Width(150);</span></p> <p > Here is the definition for the DropDownList user control:</p> <p>&lt;%@ Control Language=\"C#\" Inherits=\"System.Web.Mvc.ViewUserControl&lt;object&gt;\" %&gt;<br /> &lt;%= Html.Kendo().DropDownListFor(m =&gt; m)<span>&nbsp;&nbsp;&nbsp; </span><br /> <span>&nbsp;&nbsp;&nbsp; </span>.BindTo((SelectList)ViewData[ViewData.TemplateInfo.GetFullHtmlFieldName(\"\") + \"_Data\"])<br /> %&gt;</p>"
         }
      },
      {
        "text": "Custom command",
        "url": "grid/custom-command",
        "title": {
            "kendo-ui": "Custom commands demo for Kendo UI Grid widget",
            "aspnet-mvc": "Custom command demo in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "This demo demonstrates the functionality to apply custom commands to KendoGrid. Look at the source code to find how to set the text attribute and command name for the grid component.",
            "aspnet-mvc": "This example illustrates the custom command of Telerik ASP.NET MVC Grid extension."
        },
         "description": {
           "kendo-ui": "<p>This sample represents how you can implement custom command handling for records in the Kendo UI grid.&nbsp; <br /> <br /> For this purpose you need to include a command column in the grid which will render a button in the column cells that triggers the command. Through the column definition you can specify the text for the button and wire its click event to a JavaScript function, which receives the corresponding grid data item as an argument. Then in this function definition you can handle the command.</p> <p>In this demo we use Window widget instance to display details about the chosen row (Person) in the grid.</p> More information about handling custom commands can be found in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-columns.command\">this section</a> of the docs.",
       "aspnet-mvc": "<p>The demonstrated solution in this example shows how to implement a custom command handling for records in the MVC Grid extension. </p> <p>To do it you need to include a command column in the grid which will render a button in the column cells that triggers the command. Through the column definition you can specify the text for the button and wire its click event to a JavaScript function (Command -&gt; Custom -&gt; Click), which receives the corresponding grid data item as an argument. Then in this function definition you can handle the command.</p> <p>In this demo we use Window widget instance to display details about the chosen row in the grid.</p>"
         }
      },
      {
        "text": "Events",
        "url": "grid/events",
        "title": {
            "kendo-ui": "Example of using events in Kendo UI Grid control",
            "aspnet-mvc": "Example of using events in Telerik ASP.NET MVC Grid control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates different events which are available in KendoGrid widget and the code explains how you can use them for  your project.",
            "aspnet-mvc": "This example demonstrates the different events which are available in Telerik ASP.NET MVC Grid component. The code explains how you can use them for your project."
        },
        "group": "API",
         "description": {
           "kendo-ui": "<p>The Kendo UI grid exposes rich API and events which provide easy configuration or extension points for custom functionality on top of the built-in features. </p> <p>This particular example shows how you can intercept the change, dataBinding and dataBound events of the grid to output messages in the console when these events are raised. They can also be hooked for customizations or to execute custom logic, if necessary.</p> <p>Find more info about the supported grid events by clicking the API Reference button below.</p>",
		   "aspnet-mvc": "<p>Telerik MVC Grid exposes rich API and events which provide easy configuration or extension points for customization on top of the built-in features.</p> <p>This particular demo shows how you can intercept the <strong>onChange</strong>, <strong>onDataBinding</strong> and <strong>onDataBound</strong> events of the grid to output messages in the console when these events are raised. You can also use these events for customization or to execute custom logic, if necessary.</p>"
         }
      },
      {
        "text": "API",
        "url": "grid/api",
        "title": {
            "kendo-ui": "KendoGrid API Demo",
            "aspnet-mvc": "API for ASP.NET MVC Grid control | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This demo shows how API Functions can manipulate the contents and behavior of Kendo UI Grid widget.",
            "aspnet-mvc": "See how the powerful and comprehensive API Functions allow you to manipulate the contents and behavior of the Telerik ASP.NET MVC Grid."
        },
         "description": {
           "kendo-ui": "<p>The Kendo UI grid exposes rich API and events which provide easy configuration or extension points for custom functionality on top of the built-in features. </p> <p>In this sample we demonstrate how you can collect numeric value entered by the user and use this value to select or expand/collapse grid rows using the select, expandGroup and collapseGroup methods of the widget. </p> <p>Find more info about the supported grid events by clicking the API Reference button below.</p>",
		   "aspnet-mvc": "<p>Telerik MVC Grid exposes rich client-side API and events, which provide easy configuration or extension points for custom functionality on top of the built-in features.</p> <p>The example shows how you can get a reference to the grid&rsquo;s client object, collect numeric value entered by the user and use this value to select or expand/collapse grid rows using the <strong>select</strong>, <strong>expandGroup</strong> and <strong>collapseGroup</strong> client methods of the grid.</p> <p>You can find more information about the available grid&rsquo;s client-side API <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/ui/grid\">here</a>.</p>"
         }
      },
      {
        "text": "Globalization",
        "url": "grid/globalization",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Localization",
        "url": "grid/localization",
        "title": {
            "kendo-ui": "Kendo UI Grid localization demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Grid widget can be localized."
        },
        "group": "Accessibility and Internationalization",
        "description": {
           "kendo-ui": "<p>The Kendo UI grid supports localization for the texts in its UI elements. You can either define the texts for these elements using the respective messages configuration via the API, or employ culture files for this purpose (which are shipped with the product distribution).</p> <p>Further information on how to our grid widget supports localization can be found in these articles: <br /> <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/localization\">Localization via messages</a><br /> <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/globalization/overview\">Localization with culture files</a> </p>"
        },
        "packages": [
          "!mvc",
          "!php",
          "!jsp"
        ]
      },
      {
        "text": "RTL support",
        "url": "grid/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI Grid component",
            "aspnet-mvc": "Right to left support in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "In this example we will see how the Kendo UI Grid widget supports right-to-left spreadsheet grid for better user experience.",
            "aspnet-mvc": "In this demo you will be able to learn more about the right to left support in Telerik ASP.NET MVC Grid extension."
        },
          "description": {
            "kendo-ui": "<p>The Kendo UI grid supports right-to-left languages and rendering via built-in configuration. All you have to do is to register the <strong>kendo.rtl.[min].css</strong> file and wrap the grid in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the Kendo UI widgets can be extracted from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\">this topic</a>.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Grid supports right-to-left languages and rendering. All you have to do is to register the <strong>kendo.rtl.min.css</strong> file (located at Kendo.Mvc.Examples\\Content\\web\\ installation folder) and wrap the grid in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the components can be found in <a href=\"http://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this topic</a>.</p>"
          }
      },
      {
        "text": "Keyboard navigation",
        "url": "grid/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI Grid",
            "aspnet-mvc": "Keyboard navigation in Telerik ASP.NET MVC Grid"
        },
        "meta": {
            "kendo-ui": "Look at this Kendo UI Grid demo to learn how different keyboard combinations could be used to navigate in the component.",
            "aspnet-mvc": "Look at this Telerik ASP.NET MVC Grid demo to learn how different keyboard combinations could be used to navigate in the component."
        },
         "description": {
           "kendo-ui": "<p>This demo illustrates the keyboard support of the Kendo UI grid widget, which provides quick access to available grid features without the need to interact with mouse. Furthermore, applications which must cover accessibility standards for people with disabilities can directly benefit from it. </p> <p>You can focus the grid using the <strong>ALT + W</strong> key combination, and then use the keyboard key shortcuts visualized above to interact with the widget. </p> <p>Further details about the keyboard support of the Kendo UI grid widgets can be found in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/accessibility/keyboard-support\">Accessibility section</a> of the documentation.</p>",
		   "aspnet-mvc": "<p>This demo illustrates the keyboard support of Telerik Grid for MVC, which provides quick access to available grid&rsquo;s features without the need of using a mouse. This is very practical for apps that should cover the accessibility standards for people with disabilities. </p> <p>You can focus the grid using the <strong>ALT + W</strong> key combination, which will allow you to directly interact with the grid functionality through the provided keyboard shortcuts visualized above.</p> <p>Further details about the Keyboard, Section 508 and WAI-ARIA support of Telerik UI for ASP.NET MVC extensions can be found in the <a href=\"http://docs.telerik.com/kendo-ui/accessibility/accessibility-overview\">Accessibility Overview section</a> of the documentation.</p>"
         }
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "Spreadsheet",
    "name": "spreadsheet",
    "pro": "true",
    "beta": "true",
    "api": "web/spreadsheet",
    "documentation": {
       "kendo-ui": "getting-started/web/spreadsheet/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/spreadsheet/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/spreadsheet/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/spreadsheet/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/spreadsheet",
       "aspnet-mvc": "aspnet-mvc/spreadsheet",
       "jsp-ui": "jsp/spreadsheet",
       "php-ui": "php/spreadsheet"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/spreadsheet",
       "aspnet-mvc": "aspnet-mvc/spreadsheet",
       "jsp-ui": "jsp/spreadsheet",
       "php-ui": "php/spreadsheet"
    },
    "spriteCssClass": "spreadsheetIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "spreadsheet/index",
        "title": {
            "kendo-ui": "jQuery Spreadsheet control example | Kendo UI Spreadsheet Demos",
            "aspnet-mvc": " ASP.NET MVC Spreadsheet control example"
        },
        "meta": {
            "kendo-ui": "This demo for Kendo UI jQuery-based Spreadsheet component shows how you can make your static HTML tables and raw data much more interactive to match your modern web app.",
            "aspnet-mvc": "In this demo for Kendo UI jQuery-powered Spreadsheet in ASP.NET MVC you will see all basic functionalities of the extension."
        }
      },
      {
          "text": "Sorting and Filtering",
          "url": "spreadsheet/sorting-filtering",
          "title": {
             "kendo-ui": "Sorting and filtering"
          },
          "meta": {
              "kendo-ui": "This demo shows the sorting and filtering support that Kendo UI Spreadsheet provides"
          }
      },
      {
          "text": "Server Import/Export",
          "url": "spreadsheet/server-side-import-export",
          "title": {
              "kendo-ui": "Kendo Spreadsheet integration with the Telerik Document Processing Library"
          },
          "meta": {
              "kendo-ui": "Export to and import from Microsoft Excel (.xlsx), CSV, Text and JSON files"
          },
          "packages": [
              "!offline"
          ],
          "sources": {
              "kendo-ui": [{
                  "name": "Sheets settings",
                  "url": "~/content/web/spreadsheet/prices.json"
              }],
              "aspnet-mvc": [{
                  "name": "Sheets settings",
                  "url": "~/content/web/spreadsheet/prices.json"
              }]
          }
      },
      {
          "text": "Server Export to PDF",
          "url": "spreadsheet/server-side-pdf-export",
          "title": {
              "kendo-ui": "Kendo Spreadsheet PDF Export with the Telerik Document Processing Library"
          },
          "meta": {
              "kendo-ui": "Export to print-ready PDF files"
          },
          "packages": [
              "!offline"
          ]
      },
      {
          "text": "DataSource binding",
          "url": "spreadsheet/datasource",
          "title": {
             "kendo-ui": "DataSource binding"
          },
          "meta": {
              "kendo-ui": "This demo shows the integration with the DataSource component that Kendo UI Spreadsheet provides"
          },
          "packages": [
              "!mvc"
          ]
      },
      {
          "text": "Events",
          "url": "spreadsheet/events",
          "title": {
              "kendo-ui": "Events in Kendo UI Spreadsheet widget"
          },
          "meta": {
              "kendo-ui": "This example shows events which are triggered in Kendo UI Spreadsheet widget."
          }
      }
    ],
    "category": "Data Management"
  },

  {
    "text": "ListView",
    "name": "listview",
    "api": "web/listview",
    "documentation": {
       "kendo-ui": "getting-started/web/listview/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/listview/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/listview/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/listview/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/listview",
       "aspnet-mvc": "aspnet-mvc/listview",
       "jsp-ui": "jsp/listview",
       "php-ui": "php/listview"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/listview",
       "aspnet-mvc": "aspnet-mvc/listview",
       "jsp-ui": "jsp/listview",
       "php-ui": "php/listview"
    },
    "spriteCssClass": "listViewIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "listview/index",
        "title": {
            "kendo-ui": "jQuery ListView control example| KendoListView Demo",
            "aspnet-mvc": "ASP.NET MVC Listview demo | Telerik UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This KendoListView example demonstrates the basic functionality of the widget. With jQuery-based ListView widget in Kendo UI, you can specify custom layout for the items in the control.",
            "aspnet-mvc": "Play with this basic example of Telerik Listview in ASP.NET MVC and find all features of the helper for Kendo UI Listview."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "listview/remote-data-binding",
        "title": {
            "kendo-ui": "Example for Jquery Listview binding to remote data | Kendo UI demos"
        },
        "meta": {
            "kendo-ui": "This Kendo UI ListView demo shows how the control can be bound to remote data by using Kendo UI DataSource component."
        },
        "packages": [
          "!mvc"
        ]
      },
      {
        "text": "Custom data source",
        "url": "listview/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Editing",
        "url": "listview/editing",
        "title": {
            "kendo-ui": "Editing records in Kendo UI ListView widget",
            "aspnet-mvc": "Editing records in ASP.NET MVC ListView control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the option to easily edit records in Kendo UI ListView widget. Learn how to edit records and manipulate the behavior of the contents.",
            "aspnet-mvc": "This example demonstrates the option to easily edit records in ASP.NET MVC ListView component. Learn how to edit records and manipulate the behavior of the contents."
        }
      },
      {
        "text": "Selection",
        "url": "listview/selection",
        "title": {
            "kendo-ui": "Items selection demo for Kendo UI ListView widget",
            "aspnet-mvc": "Items selection demo for ASP.NET MVC ListView control"
        },
        "meta": {
            "kendo-ui": "This demo shows items in KendoListView can be selected. Find how to select multiple items and configure the behavior of the widget.",
            "aspnet-mvc": "This demo shows how items in ASP.NET MVC ListView can be selected. Find how to select multiple items and configure the behavior of the control."
        }
      },
      {
        "text": "RTL support",
        "url": "listview/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI ListView",
            "aspnet-mvc": "RTL support in ASP.NET MVC ListView"
        },
        "meta": {
            "kendo-ui": "This demo shows how the right-to-left feature is supported in Kendo UI ListView component.",
            "aspnet-mvc": "This demo shows how the right-to-left feature is supported in ASP.NET MVC ListView component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "listview/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI ListView widget",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC ListView"
        },
        "meta": {
            "kendo-ui": "In this example we will look at the supported keys and user actions in Kendo UI ListView control.",
            "aspnet-mvc": "In this example we will look at the supported keys and user actions in ASP.NET MVC ListView control."
        }
      },
      {
        "text": "MVVM",
        "url": "listview/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI ListView"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI ListView"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "listview/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI ListView"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI ListView"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "PivotGrid",
    "name": "pivotgrid",
    "pro": "true",
    "api": "web/pivotgrid",
    "documentation": {
       "kendo-ui": "getting-started/web/pivotgrid/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/pivotgrid/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/pivotgrid/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/pivotgrid/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/pivotgrid",
       "aspnet-mvc": "aspnet-mvc/pivotgrid",
       "jsp-ui": "jsp/pivotgrid",
       "php-ui": "php/pivotgrid"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/pivotgrid",
       "aspnet-mvc": "aspnet-mvc/pivotgrid",
       "jsp-ui": "jsp/pivotgrid",
       "php-ui": "php/pivotgrid"
    },
    "spriteCssClass": "pivotGridIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "pivotgrid/index",
        "title": {
            "kendo-ui": "jQuery PivotGrid control example | Kendo UI PivotGrid Demos"
        },
        "meta": {
            "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can make a data summarization tool."
        }
      },
      {
        "text": "KPI measures",
        "url": "pivotgrid/kpi",
        "title": {
            "kendo-ui": "Define KPI measures in Kendo UI PivotGrid"
        },
        "meta": {
            "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can define KPI measures."
        }
      },
      {
        "text": "Remote binding",
        "url": "pivotgrid/remote-flat-data-binding",
        "title": {
            "kendo-ui": "Binding Pivot Grid to flat remote data"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can poplate the widget with remote flat data."
        }
      },
      {
        "text": "Local binding",
        "url": "pivotgrid/local-flat-data-binding",
        "title": {
            "kendo-ui": "Binding Pivot Grid to local data"
        },
        "meta": {
            "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can poplate the widget with local flat data."
        }
      },
      {
        "text": "Templates",
        "url": "pivotgrid/templates",
        "title": {
            "kendo-ui": "Customizing Pivot Grid apperience"
        },
        "meta": {
            "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can customize the widget apperience."
        }
      },
      {
          "text": "Export to Excel",
          "url": "pivotgrid/excel-export",
          "title": {
              "kendo-ui": "Exporting to MS Excel"
          },
          "meta": {
              "kendo-ui": "Export Kendo UI PivotGrid as Microsoft Excel file"
          },
          "packages": [
              "!offline"
          ]
      },
      {
          "text": "Export to PDF",
          "url": "pivotgrid/pdf-export",
          "title": {
              "kendo-ui": "Exporting to PDF"
          },
          "meta": {
              "kendo-ui": "Export Kendo UI PivotGrid as PDF"
          },
          "packages": [
              "!offline"
          ]
      },
      {
        "text": "AngularJS",
        "url": "pivotgrid/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI PivotGrid"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI PivotGrid"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "MaskedTextBox",
    "name": "maskedtextbox",
    "api": "web/maskedtextbox",
    "documentation": {
       "kendo-ui": "getting-started/web/maskedtextbox/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/maskedtextbox/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/maskedtextbox/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/maskedtextbox/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/maskedtextbox",
       "aspnet-mvc": "aspnet-mvc/maskedtextbox",
       "jsp-ui": "jsp/maskedtextbox",
       "php-ui": "php/maskedtextbox"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/maskedtextbox",
       "aspnet-mvc": "aspnet-mvc/maskedtextbox",
       "jsp-ui": "jsp/maskedtextbox",
       "php-ui": "php/maskedtextbox"
    },
    "spriteCssClass": "maskedtextboxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "maskedtextbox/index",
        "title": {
            "kendo-ui": "Primary features of Kendo UI Mask Input | Kendo UI Web demo",
            "aspnet-mvc": "Primary features of ASP.NET MVC Mask Input | ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "This demo shows the core functionality of KendoMaskedTextBox component.",
            "aspnet-mvc": "This demo shows the core functionality of ASP.NET MVC MaskedTextBox component."
        }
      },
      {
        "text": "Events",
        "url": "maskedtextbox/events",
        "title": {
            "kendo-ui": "Events in Kendo UI MaskedTextBox widget",
            "aspnet-mvc": "Events in ASP.NET MVC MaskedTextBox control"
        },
        "meta": {
            "kendo-ui": "This example shows events which are triggered in Kendo UI MaskedTextBox widget.",
            "aspnet-mvc": "This example shows events which are triggered in ASP.NET MVC MaskedTextBox component."
        }
      },
      {
        "text": "API",
        "url": "maskedtextbox/api",
        "title": {
            "kendo-ui": "API Functions Demo for KendoMaskedTextBox",
            "aspnet-mvc": "API Functions Demo for ASP.NET MVC MaskedTextBox"
        },
        "meta": {
            "kendo-ui": "This demo shows specific API functions for KendoMaskedTextBox component.",
            "aspnet-mvc": "This demo shows specific API functions for ASP.NET MVC MaskedTextBox component."
        }
      },
      {
        "text": "Globalization",
        "url": "maskedtextbox/globalization",
        "title": {
            "kendo-ui": "Globalization Demo for KendoMaskedTextBox",
            "aspnet-mvc": "Globalization Demo for ASP.NET MVC MaskedTextBox"
        },
        "meta": {
            "kendo-ui": "This demo shows KendoMaskedTextBox globalization support for decimal point, thousand separator and currency symbol.",
            "aspnet-mvc": "This demo shows ASP.NET MVC MaskedTextBox globalization support for decimal point, thousand separator and currency symbol."
        }
      },
      {
        "text": "RTL support",
        "url": "maskedtextbox/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI MaskedTextBox widget",
            "aspnet-mvc": "RTL support in ASP.NET MVC MaskedTextBox control"
        },
        "meta": {
            "kendo-ui": "This demo shows how right-to-left input is implemented in Kendo UI MaskedTextBox component to ensure the satisfaction of RTL language users.",
            "aspnet-mvc": "This demo shows how right-to-left input is implemented in ASP.NET MVC MaskedTextBox component to ensure the satisfaction of RTL language users."
        }
      },
      {
        "text": "MVVM",
        "url": "maskedtextbox/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI MaskedTextBox"
        },
        "meta": {
            "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI MaskedTextBox"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Validation",
        "url": "maskedtextbox/validation",
        "title": {
            "kendo-ui": "Validation Demo for Kendo UI MaskedTextBox",
            "aspnet-mvc": "Validation Demo for ASP.NET MVC MaskedTextBox"
        },
        "meta": {
            "kendo-ui": "This demo shows how to validate an incomplete widget value",
            "aspnet-mvc": "This demo shows how to validate an incomplete control value in ASP.NET MVC MaskedTextBox"
        }
      },
      {
        "text": "AngularJS",
        "url": "maskedtextbox/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI MaskedTextBox"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI MaskedTextBox"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Menu",
    "name": "menu",
    "api": "web/menu",
    "documentation": {
       "kendo-ui": "getting-started/web/menu/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/menu/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/menu/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/menu/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/menu",
       "aspnet-mvc": "aspnet-mvc/menu",
       "jsp-ui": "jsp/menu",
       "php-ui": "php/menu"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/menu",
       "aspnet-mvc": "aspnet-mvc/menu",
       "jsp-ui": "jsp/menu",
       "php-ui": "php/menu"
    },
    "spriteCssClass": "menuIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "menu/index",
        "title": {
            "kendo-ui": "Basic usage of Kendo UI Menu Navigation widget | Kendo UI Web demo",
            "aspnet-mvc": "Basic usage of ASP.NET MVC Menu Navigation | ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "In this Kendo UI Menu demo we will demonstrates the rich features of the component and its basic usage for your app.",
            "aspnet-mvc": "In this ASP.NET MVC Menu demo we will demonstrates the rich features of the component and its basic usage for your app."
        }
      },
      {
        "text": "Images",
        "url": "menu/images",
        "title": {
            "kendo-ui": "Images in KendoMenu control | Kendo UI Demo",
            "aspnet-mvc": "Images in ASP.NET MVC Menu control | ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "This KendoMenu example shows the feature which allows you to use menu with images. They can be loaded from a specific URL or be arranged in image sprite CSS class.",
            "aspnet-mvc": "This ASP.NET MVC Menu example shows the feature that allows you to use menu with images. They are loaded from a specific URL or arranged in image sprite CSS class."
        }
      },
      {
        "text": "Direction",
        "url": "menu/direction",
        "title": {
            "kendo-ui": "Kendo UI Menu direction demo",
            "aspnet-mvc": "ASP.NET MVC Menu direction demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how the pop-up direction of the items in Kendo UI dropdown jQuery menu can be changed, depending on your web app development needs.",
            "aspnet-mvc": "This demo shows how the pop-up direction of the items in ASP.NET MVC dropdown menu can be changed, depending on your web app development needs."
        }
      },
      {
        "text": "Orientation",
        "title": {
            "kendo-ui": "Orientation of dropdown menus in Kendo UI Menu widget",
            "aspnet-mvc": "Orientation of dropdown menus in ASP.NET MVC Menu"
        },
        "url": "menu/orientation",
        "meta": {
            "kendo-ui": "In this example we will see how the orientation of the Kendo UI Menu can be easily modified through the orientation settings.",
            "aspnet-mvc": "In this example we will see how the orientation of the ASP.NET MVC Menu can be easily modified through the orientation settings."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "SiteMapBinding",
        "url": "menu/sitemapbinding"
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "ModelBinding",
        "url": "menu/modelbinding"
      },
      {
        "text": "Animation effects",
        "url": "menu/animation",
        "title": {
            "kendo-ui": "Animation effects example in KendoMenu widget",
            "aspnet-mvc": "Animation effects example in ASP.NET MVC Menu"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates how KendoMenu HTML dropdown control supports animation effects which can be easily customized to change the desired animation effect.",
            "aspnet-mvc": "This sample demonstrates how ASP.NET MVC Menu dropdown control supports animation effects which can be easily customized to change the desired animation effect."
        }
      },
      {
        "text": "Events",
        "url": "menu/events",
        "title": {
            "kendo-ui": "Kendo UI jQuery Menu Events Sample | KendoMenu Demos",
            "aspnet-mvc": "ASP.NET MVC Menu Events Sample | ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This sample shows KendoMenu events which are enabled and the demo source code guides you how you can handle the events in your dropdown menu.",
            "aspnet-mvc": "This sample shows ASP.NET MVC Menu events which are enabled and the demo source code guides you how you can handle the events in your dropdown menu."
        }
      },
      {
        "text": "API",
        "url": "menu/api",
        "title": {
            "kendo-ui": "API functions demo for KendoMenu",
            "aspnet-mvc": "API functions demo for ASP.NET MVC Menu"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how API functions of KendoMenu control operate and how you can configure them for your web project.",
            "aspnet-mvc": "This demo illustrates how the API functions of ASP.NET MVC Menu control operate and how you can configure them for your web project."
        }
      },
      {
        "text": "Context Menu",
        "url": "menu/context-menu",
        "title": {
            "kendo-ui": "Kendo UI Context Menu example"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how to use a Kendo UI ContextMenu widget."
        }
      },
      {
        "text": "RTL support",
        "url": "menu/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left support in Kendo UI Menu control | Kendo UI Web Demo",
            "aspnet-mvc": "Right-to-left support in ASP.NET MVC Menu | ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "Review how the RTL feature is enabled for the dropdown items in Kendo UI Menu and in the menu labels of the widget.",
            "aspnet-mvc": "Review how the RTL feature is enabled for the dropdown items in ASP.NET MVC Menu and in the menu labels of the control."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "menu/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI Menu",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC Menu"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how the keyboard navigation is a supported feature in Kendo UI Menu widget.",
            "aspnet-mvc": "This example demonstrates the keyboard navigation support feature in ASP.NET MVC Menu."
        }
      },
      {
        "text": "MVVM",
        "url": "menu/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Menu"
        },
        "meta": {
            "kendo-ui": "Events and visible MVVM binding support in Kendo UI Menu"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "menu/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Menu"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Menu"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS - ContextMenu",
        "url": "menu/context-menu-angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI ContextMenu"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI ContextMenu"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "MultiSelect",
    "name": "multiselect",
    "api": "web/multiselect",
    "documentation": {
       "kendo-ui": "getting-started/web/multiselect/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/multiselect/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/multiselect/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/multiselect/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/multi-select",
       "aspnet-mvc": "aspnet-mvc/multi-select",
       "jsp-ui": "jsp/multi-select",
       "php-ui": "php/multi-select"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/multiselect",
       "aspnet-mvc": "aspnet-mvc/multiselect",
       "jsp-ui": "jsp/multiselect",
       "php-ui": "php/multiselect"
    },
    "spriteCssClass": "multiselectIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "multiselect/index",
        "title": {
            "kendo-ui": "Kendo UI MultiSelect widget demo | Kendo UI Web Demos",
            "aspnet-mvc": "ASP.NET MVC MultiSelect control demo | UI for ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "Play with this demo to see the core functionality of Kendo UI MultiSelect component in Kendo UI Web framework.",
            "aspnet-mvc": "Play with this demo to see the core functionality of Telerik ASP.NET MVC MultiSelect control."
        }
      },
      {
        "text": "Server filtering",
        "url": "multiselect/serverfiltering",
        "title": {
            "kendo-ui": "Example of Server filtering in Kendo UI MultiSelect widget",
            "aspnet-mvc": "Example of Server filtering in ASP.NET MVC MultiSelect control"
        },
        "meta": {
            "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI MultiSelect is filtered on the the server based on the input.",
            "aspnet-mvc": "See how the auto-searchable dropdown list of ASP.NET MVC MultiSelect is filtered on the the server based on the input."
        }
      },
      {
        "text": "Virtualization",
        "url": "multiselect/virtualization",
        "title": {
            "kendo-ui": "Example of virtualization in Kendo UI MultiSelect widget",
            "aspnet-mvc": "Example of virtualization in ASP.NET MVC MultiSelect control"
        },
        "meta": {
            "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI MultiSelect is virtualized.",
            "aspnet-mvc": "See how the auto-searchable dropdown list of ASP.NET MVC MultiSelect is virtualized."
        }
      },
      {
        "text": "Grouping",
        "url": "multiselect/grouping",
        "title": {
            "kendo-ui": "Example of grouping in Kendo UI MultiSelect widget",
            "aspnet-mvc": "Example of grouping in ASP.NET MVC MultiSelect control"
        },
        "meta": {
            "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI MultiSelect displays grouped data.",
            "aspnet-mvc": "See how the auto-searchable dropdown list of ASP.NET MVC MultiSelect displays grouped data."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "multiselect/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "multiselect/template",
        "title": {
            "kendo-ui": "Templates customization of Kendo UI MultiSelect widget",
            "aspnet-mvc": "Templates customization of ASP.NET MVC MultiSelect control"
        },
        "meta": {
            "kendo-ui": "This Kendo UI MultiSelect demo shows how the template of the widget can be customized to change the appearance of items and tags.",
            "aspnet-mvc": "This ASP.NET MVC MultiSelect demo shows how the template of the control can be customized to change the appearance of items and tags."
        }
      },
      {
        "text": "Events",
        "url": "multiselect/events",
        "title": {
            "kendo-ui": "Events in Kendo UI MultiSelect Component | Kendo UI Demo",
            "aspnet-mvc": "Events in ASP.NET MVC MultiSelect Component | ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "This demo demonstrates the events which are triggered in Kendo UI MultiSelect upon user's selection of an item from the drop-down list.",
            "aspnet-mvc": "This demo demonstrates the events which are triggered in ASP.NET MVC MultiSelect upon user's selection of an item from the drop-down list."
        }
      },
      {
        "text": "API",
        "url": "multiselect/api",
        "title": {
            "kendo-ui": "API of Kendo UI MultiSelect component | Kendo UI Demo",
            "aspnet-mvc": "API of ASP.NET MVC MultiSelect control | ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "In this demo you will find more about the API functions of Kendo UI MultiSelect widget.",
            "aspnet-mvc": "In this demo you will find more about the API functions of ASP.NET MVC MultiSelect control."
        }
      },
      {
        "text": "Tag mode",
        "url": "multiselect/tag-mode",
        "title": {
            "kendo-ui": "Tag mode of Kendo UI MultiSelect component | Kendo UI Demo",
            "aspnet-mvc": "Tag mode of ASP.NET MVC MultiSelect control | ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "In this demo you will find more about the Tag mode feature of Kendo UI MultiSelect widget.",
            "aspnet-mvc": "In this demo you will find more about the Tag mode feature of ASP.NET MVC MultiSelect control."
        }
      },
      {
        "text": "RTL support",
        "url": "multiselect/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI MultiSelect widget | Kendo UI Web demo",
            "aspnet-mvc": "RTL support in ASP.NET MVC MultiSelect control | ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "This example shows how RTL support is enabled in Kendo UI MultiSelect. Any application or mobile website will be now intuitive for RTL language users.",
            "aspnet-mvc": "This example shows how RTL support is enabled in ASP.NET MVC MultiSelect. Any application or mobile website will be now intuitive for RTL language users."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "multiselect/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI MultiSelect component | Kendo UI Web demo",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC MultiSelect component"
        },
        "meta": {
            "kendo-ui": "This demo shows how the keyboard navigation for Kendo UI MultiSelect widget works. Learn more how to use the keyboard shortcuts for easier navigation.",
            "aspnet-mvc": "This demo demostrates the keyboard navigation for ASP.NET MVC MultiSelect control. Learn more about how you can use the keyboard shortcuts for easier navigation."
        }
      },
      {
        "text": "MVVM",
        "url": "multiselect/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI MultiSelect"
        },
        "meta": {
            "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI MultiSelect"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "multiselect/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI MultiSelect"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI MultiSelect"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Notification",
    "name": "notification",
    "api": "web/notification",
    "documentation": {
       "kendo-ui": "getting-started/web/notification/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/notification/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/notification/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/notification/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/notification",
       "aspnet-mvc": "aspnet-mvc/notification",
       "jsp-ui": "jsp/notification",
       "php-ui": "php/notification"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/notification",
       "aspnet-mvc": "aspnet-mvc/notification",
       "jsp-ui": "jsp/notification",
       "php-ui": "php/notification"
    },
    "spriteCssClass": "notificationIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "notification/index",
        "title": {
            "kendo-ui": "Overview of Kendo UI Notification | Kendo UI Web demo",
            "aspnet-mvc": "ASP.NET MVC Notification Extension demo"
        },
        "meta": {
            "kendo-ui": "This demo shows the core functionality of Kendo UI Notification component.",
            "aspnet-mvc": "In this example you will see all options to show and hide a notification in ASP.NET MVC."
        }
      },
      {
        "text": "Position and stacking",
        "url": "notification/position-stacking",
        "title": {
            "kendo-ui": "Position and stacking of Kendo UI Notification | Kendo UI Web demo",
            "aspnet-mvc": "Position and stacking of ASP.NET MVC Notification | ASP.NET MVC"
        },
        "meta": {
            "kendo-ui": "This demo shows the position and stacking behavior of the Kendo UI Notification component.",
            "aspnet-mvc": "This demo shows the position and stacking behavior of the ASP.NET MVC Notification component."
        }
      },
      {
        "text": "Templates",
        "url": "notification/templates",
        "title": {
            "kendo-ui": "Templates of Kendo UI Notification | Kendo UI Web demo",
            "aspnet-mvc": " Layout notification templates for ASP.NET MVC"
        },
        "meta": {
            "kendo-ui": "Demo about using templates with the Kendo UI Notification component.",
            "aspnet-mvc": "In this example you will see how Telerik notification templates could be modified in ASP.NET MVC."
        }
      },
      {
        "text": "Events",
        "url": "notification/events",
        "title": {
            "kendo-ui": "Events of Kendo UI Notification | Kendo UI Web demo",
            "aspnet-mvc": "Events of ASP.NET MVC Notification | ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "Demo about using events and handlers with the Kendo UI Notification component.",
            "aspnet-mvc": "Demo about using events and handlers with the ASP.NET MVC Notification component."
        }
      },
      {
        "text": "API",
        "url": "notification/api",
        "title": {
            "kendo-ui": "API of Kendo UI Notification | Kendo UI Web demo",
            "aspnet-mvc": "API of ASP.NET MVC Notification | UI for ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "Demo about using the API of the Kendo UI Notification component.",
            "aspnet-mvc": "Demo about using the API of the ASP.NET MVC Notification component."
        }
      },
      {
        "text": "RTL support",
        "url": "notification/right-to-left-support",
        "title": {
            "kendo-ui": "RTL Support of Kendo UI Notification | Kendo UI Web demo",
            "aspnet-mvc": "RTL Support for ASP.NET MVC Notification | ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "Demo about the RTL support of the Kendo UI Notification component.",
            "aspnet-mvc": "Demo about the RTL support of the ASP.NET MVC Notification component."
        }
      },
      {
        "text": "MVVM",
        "url": "notification/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Notification"
        },
        "meta": {
            "kendo-ui": "MVVM support for Kendo UI Notification"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "notification/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Notification"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Notification"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "NumericTextBox",
    "name": "numerictextbox",
    "api": "web/numerictextbox",
    "documentation": {
       "kendo-ui": "getting-started/web/numerictextbox/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/numerictextbox/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/numerictextbox/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/numerictextbox/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/numeric-textbox",
       "aspnet-mvc": "aspnet-mvc/numeric-textbox",
       "jsp-ui": "jsp/numeric-textbox",
       "php-ui": "php/numeric-textbox"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/numerictextbox",
       "aspnet-mvc": "aspnet-mvc/numerictextbox",
       "jsp-ui": "jsp/numerictextbox",
       "php-ui": "php/numerictextbox"
    },
    "spriteCssClass": "numericTextBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "numerictextbox/index",
        "title": {
            "kendo-ui": "Primary features of Kendo UI Numeric TextBox | Kendo UI Web demo",
            "aspnet-mvc": "ASP.NET MVC NumericTextBox control demo"
        },
        "meta": {
            "kendo-ui": "This demo shows the core functionality of KendoNumericTextBox component.",
            "aspnet-mvc": "This example illustrates how to use all core features of Telerik NumericTextBox for ASP.NET MVC."
        }
      },
      {
        "text": "Events",
        "url": "numerictextbox/events",
        "title": {
            "kendo-ui": "Events in Kendo UI NumericTextBox widget",
            "aspnet-mvc": "Events in ASP.NET MVC NumericTextBox control"
        },
        "meta": {
            "kendo-ui": "This example shows events which are triggered in Kendo UI NumericTextBox widget.",
            "aspnet-mvc": "This example shows events which are triggered in ASP.NET MVC NumericTextBox control."
        }
      },
      {
        "text": "API",
        "url": "numerictextbox/api",
        "title": {
            "kendo-ui": "API Functions Demo for KendoNumericTextBox",
            "aspnet-mvc": "API Functions Demo for ASP.NET MVC NumericTextBox"
        },
        "meta": {
            "kendo-ui": "This demo shows specific API functions for KendoNumericTextBox component.",
            "aspnet-mvc": "This demo shows specific API functions for ASP.NET MVC NumericTextBox component."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "numerictextbox/globalization"
      },
      {
        "text": "RTL support",
        "url": "numerictextbox/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI NumericTextBox widget",
            "aspnet-mvc": "RTL support in ASP.NET MVC NumericTextBox control"
        },
        "meta": {
            "kendo-ui": "This demo shows how right-to-left input is implemented in Kendo UI Numeric TextBox component to ensure the satisfaction of RTL language users.",
            "aspnet-mvc": "This demo shows how right-to-left input is implemented in ASP.NET MVC Numeric TextBox component to ensure the satisfaction of RTL language users."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "numerictextbox/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI NumericTextBox",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC NumericTextBox"
        },
        "meta": {
            "kendo-ui": "The value in Kendo UI NumericTextBox can be increased or decreased by using keyboard navigation combinations. Take a look at the demo to learn how.",
            "aspnet-mvc": "The value in ASP.NET MVC NumericTextBox can be increased or decreased by using keyboard navigation combinations. Take a look at the demo to learn how."
        }
      },
      {
        "text": "MVVM",
        "url": "numerictextbox/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI NumericTextBox"
        },
        "meta": {
            "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI NumericTextBox"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "numerictextbox/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI NumericTextBox"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI NumericTextBox"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "PanelBar",
    "name": "panelbar",
    "api": "web/panelbar",
    "documentation": {
       "kendo-ui": "getting-started/web/panelbar/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/panelbar/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/panelbar/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/panelbar/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/panelbar",
       "aspnet-mvc": "aspnet-mvc/panelbar",
       "jsp-ui": "jsp/panelbar",
       "php-ui": "php/panelbar"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/panelbar",
       "aspnet-mvc": "aspnet-mvc/panelbar",
       "jsp-ui": "jsp/panelbar",
       "php-ui": "php/panelbar"
    },
    "spriteCssClass": "panelBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "panelbar/index",
        "title": {
            "kendo-ui": "Basic usage of Kendo UI PanelBar widget",
            "aspnet-mvc": "Basic usage of ASP.NET MVC PanelBar conrol"
        },
        "meta": {
            "kendo-ui": "This example shows the core features of Kendo UI jQuery-based Accordion widget.",
            "aspnet-mvc": "This example shows the core features of ASP.NET MVC Accordion component."
        }
      },
      {
        "text": "Images",
        "url": "panelbar/images",
        "title": {
            "kendo-ui": "Example of images in KendoPanelBar widget",
            "aspnet-mvc": "Example of images in ASP.NET MVC PanelBar control"
        },
        "meta": {
            "kendo-ui": "This demo shows how images and sprites can implemented in Kendo Expandable PanelBar component.",
            "aspnet-mvc": "This demo shows how images and sprites can be implemented in ASP.NET MVC Expandable PanelBar component."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "panelbar/ajax",
        "title": {
            "kendo-ui": "Example of loading content with AJAX in Kendo UI Accordion",
            "aspnet-mvc": "Example of loading content with AJAX in ASP.NET MVC Accordion"
        },
        "meta": {
            "kendo-ui": "This example shows how content is loaded in KendoPanelBar component with AJAX.",
            "aspnet-mvc": "This example shows how content is loaded in ASP.NET MVC PanelBar component with AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Animation effects",
        "url": "panelbar/animation",
        "title": {
            "kendo-ui": "Animation effects example in Kendo UI Accordion component",
            "aspnet-mvc": "Animation effects example in ASP.NET MVC Accordion component"
        },
        "meta": {
            "kendo-ui": "This demo shows how animations effects can be easily implemented into KendoPanelBar widget.",
            "aspnet-mvc": "This demo shows how animations effects can be easily implemented into ASP.NET MVC PanelBar control."
        }
      },
      {
        "text": "Events",
        "url": "panelbar/events",
        "title": {
            "kendo-ui": "Events in Kendo UI accordion widget | KendoPanelBar demo",
            "aspnet-mvc": "Events in ASP.NET MVC accordion control | ASP.NET MVC PanelBar"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how events in KendoPanelBar widget work and you can set them to expand the content area of the accordion.",
            "aspnet-mvc": "This example demonstrates how events work in ASP.NET MVC PanelBar control and how you can set them to expand the content area of the accordion."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "panelbar/api",
        "title": {
            "kendo-ui": "Kendo UI Accordion Widget API Demo",
            "aspnet-mvc": "ASP.NET MVC Accordion Control API Demo"
        },
        "meta": {
            "kendo-ui": "This sample shows the API functions of Kendo UI PanelBar component.",
            "aspnet-mvc": "This sample shows the API functions of ASP.NET MVC PanelBar component."
        }
      },
      {
        "text": "RTL support",
        "url": "panelbar/right-to-left-support",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI PanelBar widget | Kendo UI Web demo",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC PanelBar | ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "See how directions of the arrows in Kendo UI PanelBar are easily changed when moving from right to left.",
            "aspnet-mvc": "See how directions of the arrows in ASP.NET MVC PanelBar are easily changed when moving from right to left."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "panelbar/keyboard-navigation",
        "title": {
            "kendo-ui": "Demo for keyboard navigation feature in Kendo UI Collapsible Panel",
            "aspnet-mvc": "Demo for keyboard navigation in ASP.NET MVC Collapsible Panel"
        },
        "meta": {
            "kendo-ui": "Users can navigate in Kendo UI PanelBar by using the keyboard and different keyboard combinations. Play with the demo and implement the feature in your app.",
            "aspnet-mvc": "Users can navigate in ASP.NET MVC PanelBar by using the keyboard and different keyboard combinations. Play with the demo and implement the feature in your app."
        }
      },
      {
        "text": "MVVM",
        "url": "panelbar/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI PanelBar"
        },
        "meta": {
            "kendo-ui": "Events and visible MVVM binding support in Kendo UI PanelBar"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "panelbar/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI PanelBar"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI PanelBar"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "packages": [ "!mvc", "!jsp", "!php" ],
    "text": "Drag and Drop",
    "name": "dragdrop",
    "api": "framework/draggable",
    "documentation": {
       "kendo-ui": "getting-started/framework/draganddrop/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/drag-and-drop"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/draganddrop"
    },
    "spriteCssClass": "dragDropIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dragdrop/index",
        "title": {
            "kendo-ui": "Demo for Drag & Drop Component in Kendo UI jQuery framework"
        },
        "meta": {
            "kendo-ui": "This example illustrates the basic functionality of Kendo UI Drag & Drop component which provides a cross-browser, touch-friendly way to handle mouse and touch drag events."
        }
      },
      {
        "text": "Container",
        "url": "dragdrop/container",
        "title": {
            "kendo-ui": "Example of Kendo UI Drag and Drop Component in a container"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI Drag and Drop component is used for draggable items in a container."
        }
      },
      {
        "text": "Area",
        "url": "dragdrop/area",
        "title": {
            "kendo-ui": "Example of jQuery Draggable Area | Kendo UI MVVM Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how the draggable functionality in an area is enabled in Kendo UI MVVM framework."
        }
      },
      {
        "text": "Events",
        "url": "dragdrop/events",
        "title": {
            "kendo-ui": "Events example for Kendo UI jQuery Draggable functionality"
        },
        "meta": {
            "kendo-ui": "Learn more about draggable interaction with this events example for Kendo UI Draggable in Kendo UI MVVM."
        }
      },
      {
        "text": "AngularJS",
        "url": "dragdrop/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Drag & Drop"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Drag & Drop"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "packages": [ "!mvc", "!jsp", "!php" ],
    "text": "Effects",
    "name": "fx",
    "api": "framework/kendo",
    "documentation": {
       "kendo-ui": "getting-started/framework/fx/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/effects"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/effects"
    },
    "spriteCssClass": "effectsIcon",
    "items": [
      {
        "text": "Expand",
        "url": "fx/expand",
        "title": {
            "kendo-ui": "Kendo UI Expand Effect Demo | Kendo UI Web framework"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how the expand effect is applied to jQuery widgets in Kendo UI Web framework."
        }
      },
      {
        "text": "Fade",
        "url": "fx/fade",
        "title": {
            "kendo-ui": "Effects in Kendo UI Framework | Fade Away Demo"
        },
        "meta": {
            "kendo-ui": "This Kendo UI Web example demonstrates how the elements gradually fade away once the user has clicked on them."
        }
      },
      {
        "text": "Slide In",
        "url": "fx/slidein",
        "title": {
            "kendo-ui": "Demo for slide-in effect in Kendo UI framework for building HTML5 apps"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how the slide-in effect is applied in Kendo UI Web framework."
        }
      },
      {
        "text": "Flip",
        "url": "fx/flip",
        "title": {
            "kendo-ui": "Interactive Flip Effect in Kendo UI Web framework"
        },
        "meta": {
            "kendo-ui": "In this Kendo UI Web demo you can play with the powerful flip effect which is supported in the web framework."
        }
      },
      {
        "text": "Transfer",
        "url": "fx/transfer",
        "title": {
            "kendo-ui": "Transfer effect demo in Kendo UI framework for web development"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how the transfer effect is applied in Kendo UI Web."
        }
      },
      {
        "text": "Zoom",
        "url": "fx/zoom",
        "title": {
            "kendo-ui": "Zoom effect in Kendo UI Web framework | Kendo UI Web Demo"
        },
        "meta": {
            "kendo-ui": "Just hover the mouse over the image and you will see how the zoom effect is implemented in Kendo UI Web framework."
        }
      },
      {
        "text": "Page Turn",
        "url": "fx/pageturn",
        "title": {
            "kendo-ui": "Page turn effect in Kendo UI Web app framework | Kendo UI Web Demo"
        },
        "meta": {
            "kendo-ui": "In this interactive demo you will see how the blazing fast page turn effect is supported in Kendo UI Web framework for building apps and modern websites."
        }
      },
      {
        "text": "Tile",
        "url": "fx/tile",
        "title": {
            "kendo-ui": "Kendo UI Web framework effects | Interactive tile demo"
        },
        "meta": {
            "kendo-ui": "This Kendo UI Web example shows how the tile effect is implemented to enhance end-user experience."
        }
      },
      {
        "text": "Replace",
        "url": "fx/replace",
        "title": {
            "kendo-ui": "Replace effect"
        },
        "meta": {
            "kendo-ui": "This demo showcases how to create custom CSS class based transition between two HTML elements using Kendo UI Replace effect"
        }
      },
      {
        "text": "Combined Effects",
        "url": "fx/combined",
        "title": {
            "kendo-ui": "Combined Effects Demo in Kendo UI Web"
        },
        "meta": {
            "kendo-ui": "This demo shows how different combined effects can be used while building apps with Kendo UI Web framework in order to deliver rich end-user experience."
        }
      },
      {
        "text": "Semantic Zoom",
        "url": "fx/semantic-zoom",
        "title": {
            "kendo-ui": "Semantic Zoom effect"
        },
        "meta": {
            "kendo-ui": "This demo showcases how to implement semantic zoom between views in a single-page Kendo UI application"
        }
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "ProgressBar",
    "name": "progressbar",
    "api": "web/progressbar",
    "documentation": {
       "kendo-ui": "getting-started/web/progressbar/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/progressbar/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/progressbar/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/progressbar/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/progressbar",
       "aspnet-mvc": "aspnet-mvc/progressbar",
       "jsp-ui": "jsp/progressbar",
       "php-ui": "php/progressbar"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/progressbar",
       "aspnet-mvc": "aspnet-mvc/progressbar",
       "jsp-ui": "jsp/progressbar",
       "php-ui": "php/progressbar"
    },
    "spriteCssClass": "progressBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "progressbar/index",
        "title": {
            "kendo-ui": "Basic usage of Kendo UI ProgressBar widget",
            "aspnet-mvc": "Basic usage of ASP.NET MVC ProgressBar control"
        },
        "meta": {
            "kendo-ui": "This example shows the core widget features",
            "aspnet-mvc": "This example shows the core features of ASP.NET MVC ProgressBar component."
        }
      },
      {
        "text": "Chunk ProgressBar",
        "url": "progressbar/chunk",
        "title": {
            "kendo-ui": "Displaying a progress in chunks",
            "aspnet-mvc": "Displaying a progress in chunks in ASP.NET MVC ProgressBar"
        },
        "meta": {
            "kendo-ui": "See how you can display chunks of progress in Kendo UI ProgressBar.",
            "aspnet-mvc": "See how you can display chunks of progress in ASP.NET MVC ProgressBar."
        }
      },
      {
        "text": "Vertical ProgressBar",
        "url": "progressbar/vertical",
        "title": {
            "kendo-ui": "Displaying a vertical progress",
            "aspnet-mvc": "Displaying a vertical progress in ASP.NET MVC ProgressBar"
        },
        "meta": {
            "kendo-ui": "Kendo UI ProgressBar can be oriented both horizontally and vertically. See how and play with the demo.",
            "aspnet-mvc": "ASP.NET MVC ProgressBar can be oriented both horizontally and vertically. See how and play with the demo."
        }
      },
      {
        "text": "Custom Label",
        "url": "progressbar/customlabel",
        "title": {
            "kendo-ui": "Displaying a custom progress label in Kendo UI Progressbar",
            "aspnet-mvc": "Displaying a custom progress label in ASP.NET MVC ProgressBar"
        },
        "meta": {
            "kendo-ui": "This demo shows how you can display custom progress label in Kendo UI HTML5 ProgressBar to indicate the level of progress.",
            "aspnet-mvc": "This demo shows how you can display custom progress label in ASP.NET MVC ProgressBar to indicate the level of progress."
        }
      },
      {
        "text": "Events",
        "url": "progressbar/events",
        "title": {
            "kendo-ui": "Events in Kendo UI ProgressBar widget",
            "aspnet-mvc": "Events in ASP.NET MVC ProgressBar control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how events work in Kendo UI ProgressBar control.",
            "aspnet-mvc": "This example demonstrates how events work in ASP.NET MVC ProgressBar control."
        }
      },
      {
        "text": "API",
        "url": "progressbar/api",
        "title": {
            "kendo-ui": "Kendo UI ProgressBar API demo",
            "aspnet-mvc": "ASP.NET MVC ProgressBar API demo"
        },
        "meta": {
            "kendo-ui": "This sample shows the API functions of Kendo UI ProgressBar component.",
            "aspnet-mvc": "This sample shows the API functions of ASP.NET MVC ProgressBar component."
        }
      },
      {
        "text": "RTL Support",
        "url": "progressbar/right-to-left-support",
        "title": {
            "kendo-ui": "Kendo UI ProgressBar RTL Support",
            "aspnet-mvc": "ASP.NET MVC ProgressBar RTL Support"
        },
        "meta": {
            "kendo-ui": "Demo about the right-to-left (RTL) support of the Kendo UI ProgressBar component.",
            "aspnet-mvc": "Demo about the right-to-left (RTL) support of the ASP.NET MVC ProgressBar component."
        }
      },
      {
        "text": "MVVM",
        "url": "progressbar/mvvm",
        "title": {
            "kendo-ui": "MVVM support for Kendo UI ProgressBar"
        },
        "meta": {
            "kendo-ui": ""
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "progressbar/angular",
        "title": {
            "kendo-ui": "AngularJS support for Kendo UI ProgressBar"
        },
        "meta": {
            "kendo-ui": ""
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Gantt",
    "name": "gantt",
    "api": "web/gantt",
    "pro": "true",
    "documentation": {
       "kendo-ui": "getting-started/web/gantt/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/gantt/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/gantt/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/gantt/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/gantt",
       "aspnet-mvc": "aspnet-mvc/gantt",
       "jsp-ui": "jsp/gantt",
       "php-ui": "php/gantt"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/gantt",
       "aspnet-mvc": "aspnet-mvc/gantt",
       "jsp-ui": "jsp/gantt",
       "php-ui": "php/gantt"
    },
    "spriteCssClass": "ganttIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "gantt/index",
        "title": {
            "kendo-ui": "Example of Kendo UI jQuery-based Gantt chart"
        },
        "meta": {
            "kendo-ui": "Explore the example of HTML5 gantt chart widget, included in Kendo UI Web, to find how easy it is to add a gantt chart to your website or web app."
        }
      },
      {
       "text": "Column resizing",
       "url": "gantt/column-resizing",
       "new": "true",
       "title": {
            "kendo-ui": "Columns resizing in Kendo UI Gantt control | Kendo UI Web demo",
            "aspnet-mvc": "Column resizing in Telerik ASP.NET MVC Gantt"
        },
        "meta": {
            "kendo-ui": "This demo shows the column resizing feature of the KendoGantt control.",
            "aspnet-mvc": "In this demo you can see how simple it is to resize columns in the Telerik ASP.NET MVC Gantt."
        }
      },
      {
        "text": "Export to PDF",
        "url": "gantt/pdf-export",
        "title": {
            "kendo-ui": "Exporting to PDF"
        },
        "meta": {
            "kendo-ui": "Export Kendo UI gantt as PDF file"
        },
        "packages": [
            "!offline"
        ]
      },
      {
        "text": "Resources",
        "url": "gantt/resources",
        "title": {
            "kendo-ui": "Resources in Kendo UI Gantt"
        },
        "meta": {
            "kendo-ui": "This demo shows how to assign resources to gantt tasks."
        }
      },
      {
        "text": "Events",
        "url": "gantt/events",
        "title": {
            "kendo-ui": "Example of using events in Kendo UI Gantt control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates different events which are available in KendoGantt widget and the code explains how you can use them for your project."
        }
      },
      {
        "text": "API",
        "url": "gantt/api",
        "title": {
            "kendo-ui": "Kendo UI Gantt API Functions Example"
        },
        "meta": {
            "kendo-ui": "This demo shows API Functions of KendoGantt. Demo Source Code will show you how to call methods on the widget instance to script its behavior."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "gantt/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI Gantt"
        },
        "meta": {
            "kendo-ui": "Look at this Kendo UI Gantt demo to learn how different keyboard combinations could be used to navigate in the component."
        }
      },
      {
        "text": "RTL Support",
        "url": "gantt/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left (RTL) support of Kendo UI Gantt"
        },
        "meta": {
            "kendo-ui": "This demo shows the Right-to-left (RTL) support of Kendo UI Gantt."
        }
      },
      {
        "text": "Task Template",
        "url": "gantt/task-template",
        "new": "true",
        "title": {
            "kendo-ui": "Task template support of Kendo UI Gantt"
        },
        "meta": {
            "kendo-ui": "This demo shows the Task template support of Kendo UI Gantt."
        }
      },
      {
        "text": "MVVM",
        "url": "gantt/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Gantt"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Gantt"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Server binding",
        "url": "gantt/serverbinding",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "AngularJS",
        "url": "gantt/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Gantt"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Gantt"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Responsive Panel",
    "name": "responsive-panel",
    "api": "web/responsivepanel",
    "documentation": {
       "kendo-ui": "getting-started/web/responsivepanel/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/responsivepanel/mvc-responsivepanel-overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/responsivepanel/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/responsivepanel/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/responsivepanel",
       "aspnet-mvc": "aspnet-mvc/responsivepanel",
       "jsp-ui": "jsp/responsivepanel",
       "php-ui": "php/responsivepanel"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/responsivepanel",
       "aspnet-mvc": "aspnet-mvc/mvc-responsivepanel",
       "jsp-ui": "jsp/responsivepanel",
       "php-ui": "php/responsivepanel"
    },
    "spriteCssClass": "responsivePanelIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "responsive-panel/index",
        "title": {
            "kendo-ui": "Kendo jQuery ResponsivePanel Control Demo",
            "aspnet-mvc": "ASP.NET MVC ResponsivePanel Control Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows the basic functionality of Kendo UI ResponsivePanel widget, included in Kendo UI Web framework.",
            "aspnet-mvc": "This demo shows the basic functionality of the Telerik ASP.NET MVC ResponsivePanel control."
        }
      }
    ],
    "category": "Layout"
  },
  {
    "text": "Scheduler",
    "name": "scheduler",
    "pro": "true",
    "api": "web/scheduler",
    "documentation": {
       "kendo-ui": "getting-started/web/scheduler/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/scheduler/mvc-scheduler-overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/scheduler/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/scheduler/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/scheduler",
       "aspnet-mvc": "aspnet-mvc/scheduler",
       "jsp-ui": "jsp/scheduler",
       "php-ui": "php/scheduler"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/scheduler",
       "aspnet-mvc": "aspnet-mvc/mvc-scheduler",
       "jsp-ui": "jsp/scheduler",
       "php-ui": "php/scheduler"
    },
    "spriteCssClass": "schedulerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "scheduler/index",
        "title": {
            "kendo-ui": "Kendo jQuery Scheduler Control Demo",
            "aspnet-mvc": "ASP.NET MVC Scheduler Control Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows the basic functionality of Kendo UI Scheduler widget, included in Kendo UI Web framework.",
            "aspnet-mvc": "This demo shows the basic functionality and UI of the Telerik ASP.NET MVC Scheduler control."
        }
      },
      {
        "text": "Custom data source",
        "url": "scheduler/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Timeline view",
        "url": "scheduler/timeline",
        "title": {
            "kendo-ui": "Timeline view in Kendo UI Scheduler"
        },
        "meta": {
            "kendo-ui": "This demo shows the Timeline, Timeline Week and Timeline Work Week views."
        }
      },
      {
          "text": "Export to PDF",
          "url": "scheduler/pdf-export",
          "title": {
              "kendo-ui": "Exporting to PDF"
          },
          "meta": {
              "kendo-ui": "Export Kendo UI scheduler as PDF file"
          },
          "packages": [
              "!offline"
          ]
      },
      {
        "text": "Binding to Telerik Backend Services",
        "url": "scheduler/backend-services",
        "title": {
            "kendo-ui": "Binding to Telerik Backend Services | Kendo UI Scheduler demo"
        },
        "meta": {
            "kendo-ui": "This example shows how the Kendo UI Scheduler can be bound to Telerik Backend Services which will provide the backend functionality"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to SignalR",
        "url": "scheduler/signalr",
        "title": {
            "kendo-ui": "Real-time Binding to SignalR Hub",
            "aspnet-mvc": "Real-time Binding to SignalR Hub | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This example shows how the Kendo UI Scheduler can be bound to SignalR Hub for real-time push notifications",
            "aspnet-mvc": "This example shows how the Telerik ASP.NET MVC Scheduler can be bound to SignalR Hub for real-time push notifications."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Resources",
        "url": "scheduler/resources",
        "title": {
            "kendo-ui": "Resources in Kendo UI Scheduler",
            "aspnet-mvc": "Resources in ASP.NET MVC Scheduler"
        },
        "meta": {
            "kendo-ui": "This demo shows how to assign resources to scheduler events.",
            "aspnet-mvc": "This demo shows how to assign resources to events in ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "Horizontal Grouping",
        "url": "scheduler/resources-grouping-horizontal",
        "title": {
            "kendo-ui": "Horizontal resources grouping in Kendo UI Scheduler",
            "aspnet-mvc": "Horizontal resources grouping in ASP.NET MVC Scheduler control"
        },
        "meta": {
            "kendo-ui": "This demo shows how to group resources horizontally in scheduler widget.",
            "aspnet-mvc": "This demo shows how to group resources horizontally in ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "Vertical Grouping",
        "url": "scheduler/resources-grouping-vertical",
        "title": {
            "kendo-ui": "Vertical resources grouping in Kendo UI Scheduler",
            "aspnet-mvc": "Vertical resources grouping in ASP.NET MVC Scheduler control"
        },
        "meta": {
            "kendo-ui": "This demo shows how to group resources vertically in scheduler widget.",
            "aspnet-mvc": "This demo shows how to group resources vertically in ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "Web API binding",
        "url": "scheduler/webapi",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Templates",
        "url": "scheduler/templates",
        "title": {
            "kendo-ui": "Templates in Kendo UI Scheduler",
            "aspnet-mvc": "Templates in ASP.NET MVC Scheduler"
        },
        "meta": {
            "kendo-ui": "This demo shows how to use templates to customize the appearance of scheduler events",
            "aspnet-mvc": "This demo shows how to use templates to customize the appearance of the scheduler events of your ASP.NET MVC app."
        }
      },
      {
        "text": "Events",
        "url": "scheduler/events",
        "title": {
            "kendo-ui": "Events in Kendo UI Scheduler",
            "aspnet-mvc": "Events in ASP.NET MVC Scheduler"
        },
        "meta": {
            "kendo-ui": "This demo shows how events are handled and triggered in Kendo UI Scheduler.",
            "aspnet-mvc": "This demo shows how events are handled and triggered in ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "API",
        "url": "scheduler/api",
        "title": {
            "kendo-ui": "API in Kendo UI Scheduler",
            "aspnet-mvc": "API in Telerik ASP.NET MVC Scheduler component"
        },
        "meta": {
            "kendo-ui": "This demo shows the API of Kendo UI Scheduler.",
            "aspnet-mvc": "This demo shows the API of Telerik ASP.NET MVC Scheduler control."
        }
      },
      {
        "text": "Globalization",
        "url": "scheduler/globalization",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Restrictions",
        "url": "scheduler/restriction",
        "title": {
            "kendo-ui": "Restricting events resizing and moving",
            "aspnet-mvc": "Restrictions in ASP.NET MVC Scheduler | UI for ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This demo shows how to restrict the events in Kendo UI Scheduler",
            "aspnet-mvc": "Set restrictions to better control your resources with ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "Event move & resize",
        "url": "scheduler/move-resize",
        "title": {
            "kendo-ui": "Moving and resizing events",
            "aspnet-mvc": "Moving and resizing events in ASP.NET MVC Scheduler"
        },
        "meta": {
            "kendo-ui": "This demo shows the move and resize feature of Kendo UI Scheduler",
            "aspnet-mvc": "This demo shows the move and resize feature of ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "Selection",
        "url": "scheduler/selection",
        "title": {
            "kendo-ui": "Selection and Keyboard navigation in Kendo UI Scheduler",
            "aspnet-mvc": "Selection and Keyboard navigation in ASP.NET MVC Scheduler"
        },
        "meta": {
            "kendo-ui": "This demo shows the selection and the different keyboard combinations that could be used to navigate in Kendo UI Scheduler.",
            "aspnet-mvc": "This demo shows the selection and the different keyboard combinations that could be used to navigate in ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "Localization",
        "url": "scheduler/localization",
        "title": {
            "kendo-ui": "Kendo UI Scheduler localization demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Scheduler widget can be localized."
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "RTL Support",
        "url": "scheduler/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left (RTL) support of Kendo UI Scheduler",
            "aspnet-mvc": "Right-to-left (RTL) support for ASP.NET MVC Scheduler control"
        },
        "meta": {
            "kendo-ui": "This demo shows the Right-to-left (RTL) support of Kendo UI Scheduler.",
            "aspnet-mvc": "This demo shows the Right-to-left (RTL) support for ASP.NET MVC Scheduler."
        }
      },
      {
        "text": "MVVM",
        "url": "scheduler/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Scheduler"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Scheduler"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "scheduler/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Scheduler"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Scheduler"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Slider",
    "name": "slider",
    "api": "web/slider",
    "documentation": {
       "kendo-ui": "getting-started/web/slider/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/slider/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/slider/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/slider/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/slider",
       "aspnet-mvc": "aspnet-mvc/slider",
       "jsp-ui": "jsp/slider",
       "php-ui": "php/slider"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/slider",
       "aspnet-mvc": "aspnet-mvc/slider",
       "jsp-ui": "jsp/slider",
       "php-ui": "php/slider"
    },
    "spriteCssClass": "sliderIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "slider/index",
        "title": {
            "kendo-ui": "Kendo jQuery Slider Control Demo",
            "aspnet-mvc": "ASP.NET MVC Slider Extension Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows the basic functionality of Kendo UI slider widget, included in Kendo UI Web framework.",
            "aspnet-mvc": "This example illustrates how Telerik ASP.NET MVC Slider extension for Kendo UI Slider widget allows end users to interact with slider's main feature."
        }
      },
      {
        "text": "Events",
        "url": "slider/events",
        "title": {
            "kendo-ui": "Events demo in Kendo UI Slider Widget",
            "aspnet-mvc": "Events demo in ASP.NET MVC Slider control"
        },
        "meta": {
            "kendo-ui": "This demo shows how events are handled and triggered in Kendo UI HTML&jQuery Slider.",
            "aspnet-mvc": "This demo shows how events are handled and triggered in ASP.NET MVC Slider."
        }
      },
      {
        "text": "API",
        "url": "slider/api",
        "title": {
            "kendo-ui": "Kendo UI Slider API Functions Example",
            "aspnet-mvc": "API for Telerik ASP.NET MVC Slider control"
        },
        "meta": {
            "kendo-ui": "This demo shows API Functions of KendoSlider. Demo Source Code will help you find out how to handle events and the behavior of the component.",
            "aspnet-mvc": "This sample demonstrates how to use ASP.NET MVC Slider API functions. Play with range slider API functions and examine the demo for your specific scenario."
        }
      },
      {
        "text": "RTL support",
        "url": "slider/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left support in Kendo UI Slider | Kendo UI Web Demos",
            "aspnet-mvc": "Right-to-left support in ASP.NET MVC Slider | ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how the right-to-left feature is enabled in Kendo UI Slider widget.",
            "aspnet-mvc": "This demo illustrates how the right-to-left feature is enabled in ASP.NET MVC Slider control."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "slider/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI Slider | Kendo UI Web Demos",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC Slider | ASP.NET MVC Demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the keyboard navigation feature of Telerik Kendo UI Slider control.",
            "aspnet-mvc": "This demo illustrates the keyboard navigation feature of Telerik ASP.NET MVC Slider control."
        }
      },
      {
        "text": "MVVM",
        "url": "slider/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Slider"
        },
        "meta": {
            "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI Slider"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "slider/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Slider"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Slider"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Sortable",
    "name": "sortable",
    "api": "web/sortable",
    "documentation": {
       "kendo-ui": "getting-started/web/sortable/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/sortable/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/sortable/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/sortable/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/sortable",
       "aspnet-mvc": "aspnet-mvc/sortable",
       "jsp-ui": "jsp/sortable",
       "php-ui": "php/sortable"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/sortable",
       "aspnet-mvc": "aspnet-mvc/sortable",
       "jsp-ui": "jsp/sortable",
       "php-ui": "php/sortable"
    },
    "spriteCssClass": "sortableIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "sortable/index",
        "title": {
            "kendo-ui": "Demo for Sortable Component in Kendo UI jQuery framework",
            "aspnet-mvc": "Demo for Sortable Component in ASP.NET MVC"
        },
        "meta": {
            "kendo-ui": "This example illustrates the basic functionality of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop.",
            "aspnet-mvc": "See the basic functionality of ASP.NET MVC Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Filter / Disable items",
        "url": "sortable/filter-disable",
        "title": {
            "kendo-ui": "Demo for filter and disable items functionality of Kendo UI Sortable Component",
            "aspnet-mvc": "Filter and disable items in ASP.NET MVC Sortable control"
        },
        "meta": {
            "kendo-ui": "This example illustrates the filter and disable items functionality of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop.",
            "aspnet-mvc": "See how you can filter and disable items in ASP.NET MVC Sortable which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Handlers",
        "url": "sortable/handlers",
        "title": {
            "kendo-ui": "Demo for handler functionality of Kendo UI Sortable Component",
            "aspnet-mvc": "Demo for handler functionality of ASP.NET MVC Sortable Component"
        },
        "meta": {
            "kendo-ui": "This example illustrates the handler feature of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop.",
            "aspnet-mvc": "See the handler feature of ASP.NET MVC Sortable control which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Axis / Container constraints",
        "url": "sortable/constraints",
        "title": {
            "kendo-ui": "Demo for axis / container functionality of Kendo UI Sortable Component",
            "aspnet-mvc": "Demo for axis / container functionality of ASP.NET MVC Sortable"
        },
        "meta": {
            "kendo-ui": "This example illustrates the axis / container restriction feature of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop.",
            "aspnet-mvc": "See the axis/container restriction feature of ASP.NET MVC Sortable, which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Linked Lists",
        "url": "sortable/linkedlists",
        "title": {
            "kendo-ui": "Demo for linked list functionality of Kendo UI Sortable Component",
            "aspnet-mvc": "Linked list functionality of ASP.NET MVC Sortable control"
        },
        "meta": {
            "kendo-ui": "This example illustrates the linked lists feature of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop.",
            "aspnet-mvc": "Check out the linked lists feature of ASP.NET MVC Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Events",
        "url": "sortable/events",
        "title": {
            "kendo-ui": "Events example for Kendo UI Sortable Component",
            "aspnet-mvc": "Events example for ASP.NET MVC Sortable Component"
        },
        "meta": {
            "kendo-ui": "This example shows events of Kendo UI Sortable widget.",
            "aspnet-mvc": "This example shows events of ASP.NET MVC Sortable control."
        }
      },
      {
        "text": "Sortable panels",
        "url": "sortable/sortable-panels",
        "title": {
            "kendo-ui": "Panels example for Kendo UI Sortable Component",
            "aspnet-mvc": "Panels example for ASP.NET MVC Sortable Component"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the usage of Kendo UI Sortable widget.",
            "aspnet-mvc": "See how to sort panels with simple drag and drop in ASP.NET MVC Sortable."
        }
      },
      {
        "text": "Integration - Grid",
        "url": "sortable/integration-grid",
        "title": {
            "kendo-ui": "Kendo UI Grid integration with Sortable Component",
            "aspnet-mvc": "ASP.NET MVC Grid integration with Sortable Component"
        },
        "meta": {
            "kendo-ui": "This example demonstrates Kendo UI Grid integration with Sortable Component.",
            "aspnet-mvc": "This example demonstrates ASP.NET MVC Grid integration with Sortable Component."
        }
      },
      {
        "text": "Integration - ListView",
        "url": "sortable/integration-listview",
        "title": {
            "kendo-ui": "Kendo UI ListView integration with Sortable Component",
            "aspnet-mvc": "ASP.NET MVC ListView integration with Sortable Component"
        },
        "meta": {
            "kendo-ui": "This example demonstrates Kendo UI ListView integration with Sortable Component.",
            "aspnet-mvc": "This example demonstrates ASP.NET MVC ListView integration with Sortable Component."
        }
      },
      {
        "text": "Integration - TabStrip",
        "url": "sortable/integration-tabstrip",
        "title": {
            "kendo-ui": "Kendo UI TabStrip integration with Sortable Component",
            "aspnet-mvc": "ASP.NET MVC TabStrip integration with Sortable Component"
        },
        "meta": {
            "kendo-ui": "This example demonstrates Kendo UI TabStrip integration with Sortable Component.",
            "aspnet-mvc": "This example demonstrates ASP.NET MVC TabStrip integration with Sortable Component."
        }
      },
      {
        "text": "AngularJS",
        "url": "sortable/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Sortable"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Sortable"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Splitter",
    "name": "splitter",
    "api": "web/splitter",
    "documentation": {
       "kendo-ui": "getting-started/web/splitter/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/splitter/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/splitter/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/splitter/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/splitter",
       "aspnet-mvc": "aspnet-mvc/splitter",
       "jsp-ui": "jsp/splitter",
       "php-ui": "php/splitter"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/splitter",
       "aspnet-mvc": "aspnet-mvc/splitter",
       "jsp-ui": "jsp/splitter",
       "php-ui": "php/splitter"
    },
    "spriteCssClass": "splitterIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "splitter/index",
        "title": {
            "kendo-ui": "Features, supported in Kendo UI Splitter widget | Kendo UI Web demo",
            "aspnet-mvc": "Splitter example in ASP.NET MVC | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the basic usage and core functionality of Kendo UI Splitter.",
            "aspnet-mvc": "In this Splitter demo you will learn how to configure Kendo UI jQuery-powered Splitter in ASP.NET MVC."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "splitter/ajax",
        "title": {
            "kendo-ui": "AJAX Content in Kendo UI Splitter widget | Kendo UI Web demo",
            "aspnet-mvc": "Loading content with AJAX in Telerik ASP.NET MVC Splitter"
        },
        "meta": {
            "kendo-ui": "This demo shows how AJAX content is loaded in the container's display area of Kendo UI Splitter control.",
            "aspnet-mvc": "This demo shows how Telerik ASP.NET MVC Splitter control enables you to load content with AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Events",
        "url": "splitter/events",
        "title": {
            "kendo-ui": "Events in Kendo UI Splitter widget | Kendo UI Web demo",
            "aspnet-mvc": "Events in ASP.NET MVC Splitter control | UI for ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "This demo shows the events which change the behavior of Kendo UI Splitter. Find more about resize events and Javascript function names to be called before the panel is collapsed.",
            "aspnet-mvc": "See the events that change the behavior of ASP.NET MVC Splitter. Learn about resize events and Javascript function names to be called before the panel is collapsed."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "splitter/api",
        "title": {
            "kendo-ui": "Kendo UI Splitter API Demo",
            "aspnet-mvc": "ASP.NET MVC Splitter API Demo"
        },
        "meta": {
            "kendo-ui": "This example shows how API of Kendo UI Splitter widget works. Find all API functions to expand/collapse content and resize the pane.",
            "aspnet-mvc": "This example shows how API of ASP.NET MVC Splitter control works. Find all API functions to expand/collapse content and resize the pane."
        },
        "requiresServer": "true"
      },
      {
        "text": "RTL support",
        "url": "splitter/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left support in Kendo UI Splitter control | Kendo UI Web demo",
            "aspnet-mvc": "Right-to-left support in ASP.NET MVC Splitter control"
        },
        "meta": {
            "kendo-ui": "In this demo we will play with the right-to-left text input and visualization which is enabled in Kendo UI Splitter widget.",
            "aspnet-mvc": "In this demo we will play with the right-to-left text input and visualization which is enabled in ASP.NET MVC Splitter control."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "splitter/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation support in Kendo UI Slider",
            "aspnet-mvc": "Keyboard navigation support in ASP.NET MVC Slider"
        },
        "meta": {
            "kendo-ui": "Users can easily manipulate the behaviour of Kendo UI Slider by using different keyboard keys and combinations.",
            "aspnet-mvc": "Users can easily manipulate the behaviour of ASP.NET MVC Slider by using different keyboard keys and combinations."
        }
      },
      {
        "text": "MVVM",
        "url": "splitter/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Splitter"
        },
        "meta": {
            "kendo-ui": "Events and visible MVVM binding support in Kendo UI Splitter"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "splitter/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Splitter"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Splitter"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "TabStrip",
    "name": "tabstrip",
    "api": "web/tabstrip",
    "documentation": {
       "kendo-ui": "getting-started/web/tabstrip/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/tabstrip/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/tabstrip/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/tabstrip/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/tabstrip",
       "aspnet-mvc": "aspnet-mvc/tabstrip",
       "jsp-ui": "jsp/tabstrip",
       "php-ui": "php/tabstrip"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/tabstrip",
       "aspnet-mvc": "aspnet-mvc/tabstrip",
       "jsp-ui": "jsp/tabstrip",
       "php-ui": "php/tabstrip"
    },
    "spriteCssClass": "tabStripIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "tabstrip/index",
        "title": {
            "kendo-ui": "Kendo UI TabStrip Demo",
            "aspnet-mvc": "Using Kendo UI jQuery-based Tabstrip widget in ASP.NET MVC "
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI jQuery Tabs control works. KendoTabStrup divides the content into multiple sections which the user can navigate through clicking on the tab pane.",
            "aspnet-mvc": "Look at this demo to learn how to use the ASP.NET MVC TabStrip HtmlHelper extension for the Kendo UI TabStrip widget."
        }
      },
      {
        "text": "Images",
        "url": "tabstrip/images",
        "title": {
            "kendo-ui": "Kendo UI TabStrip widget with images | Kendo UI Web",
            "aspnet-mvc": "ASP.NET MVC TabStrip with images | UI for ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "This example shows how images are displayed in Kendo UI TabStrip component.",
            "aspnet-mvc": "This example shows how images are displayed in Telerik ASP.NET MVC TabStrip component."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "tabstrip/ajax",
        "title": {
            "kendo-ui": "AJAX loaded content demo in Kendo UI TabStrip widget",
            "aspnet-mvc": "Loading content with AJAX in Telerik TabStrip in ASP.NET MVC"
        },
        "meta": {
            "kendo-ui": "This sample shows how the tabs in Kendo UI TabStrip control are dynamically loaded with AJAX upon selection of a tab.",
            "aspnet-mvc": "This example illustrates how to load content with AJAX in Telerik TabStrip for ASP.NET MVC."
        },
        "requiresServer": "true"
      },
      {
        "text": "Animation effects",
        "url": "tabstrip/animation",
        "title": {
            "kendo-ui": "Kendo UI jQuery Tabs animation effects demo",
            "aspnet-mvc": "ASP.NET MVC Tabs animation effects demo"
        },
        "meta": {
            "kendo-ui": "This sample shows the supported animation effects in Kendo UI TabStrip. You can play with the sample by changing the settings of the animation.",
            "aspnet-mvc": "This sample shows the supported animation effects in ASP.NET MVC TabStrip. You can play with the sample by changing the settings of the animation."
        }
      },
      {
        "text": "Tab position",
        "url": "tabstrip/tab-position",
        "title": {
            "kendo-ui": "Kendo UI jQuery TabStrip tab position demo",
            "aspnet-mvc": "ASP.NET MVC TabStrip tab position demo"
        },
        "meta": {
            "kendo-ui": "This sample shows different tab position options for the Kendo UI TabStrip.",
            "aspnet-mvc": "This sample shows different tab position options for the ASP.NET MVC TabStrip."
        }
      },
      {
        "text": "Scrollable tabs",
        "url": "tabstrip/scrollable-tabs",
        "title": {
            "kendo-ui": "Kendo UI jQuery TabStrip scrollable tabs demo",
            "aspnet-mvc": "ASP.NET MVC TabStrip scrollable tabs demo"
        },
        "meta": {
            "kendo-ui": "This sample shows auto scrollable tabs in the Kendo UI TabStrip.",
            "aspnet-mvc": "This sample shows auto scrollable tabs in the ASP.NET MVC TabStrip."
        }
      },
      {
        "text": "Events",
        "url": "tabstrip/events",
        "title": {
            "kendo-ui": "Example of Kendo UI TabStrip Events",
            "aspnet-mvc": "Using events with ASP.NET MVC TabStrip HtmlHelper extension"
        },
        "meta": {
            "kendo-ui": "This sample shows how you can trigger select event in Kendo UI TabStrip. Find demo source code for all types of events in KendoTabStrip.",
            "aspnet-mvc": "This demo shows how to use events feature of Telerik ASP.NET MVC Tabstrip extension for Kendo UI Tabstrip widget."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "tabstrip/api",
        "title": {
            "kendo-ui": "API example for Kendo UI TabStrip widget",
            "aspnet-mvc": "API example for ASP.NET MVC TabStrip control"
        },
        "meta": {
            "kendo-ui": "This sample shows how API functions in KendoTabStrip control work. Find the demo source code to play with Kendo UI TabStrip API.",
            "aspnet-mvc": "This sample shows how API functions in ASP.NET MVC TabStrip control work. Find the demo source code to play with ASP.NET MVC TabStrip API."
        }
      },
      {
        "text": "RTL support",
        "url": "tabstrip/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI TabStrip widget | Kendo UI Web Demos",
            "aspnet-mvc": "RTL support in ASP.NET MVC TabStrip control | ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This demo shows the right-to-left feature, enabled in Kendo UI TabStrip. Now users can easily reorder the tabs from right to left.",
            "aspnet-mvc": "This demo shows the right-to-left feature, enabled in ASP.NET MVC TabStrip. Now users can easily reorder the tabs from right to left."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "tabstrip/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI TabStrip",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC TabStrip"
        },
        "meta": {
            "kendo-ui": "This Kendo UI demo shows how end users of your app can intuitively use keyboard navigation in Kendo UI TabStrip.",
            "aspnet-mvc": "This ASP.NET MVC demo shows how end users of your app can intuitively use keyboard navigation in ASP.NET MVC TabStrip."
        }
      },
      {
        "text": "MVVM",
        "url": "tabstrip/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI TabStrip"
        },
        "meta": {
            "kendo-ui": "Events and visible MVVM binding support in Kendo UI TabStrip"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "tabstrip/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI TabStrip"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI TabStrip"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "TimePicker",
    "name": "timepicker",
    "api": "web/timepicker",
    "documentation": {
       "kendo-ui": "getting-started/web/timepicker/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/timepicker/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/timepicker/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/timepicker/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/date-time-pickers",
       "aspnet-mvc": "aspnet-mvc/date-time-pickers",
       "jsp-ui": "jsp/date-picker-pickers",
       "php-ui": "php/date-time-pickers"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/datepicker",
       "aspnet-mvc": "aspnet-mvc/datetime",
       "jsp-ui": "jsp/date-time-pickers",
       "php-ui": "php/date-time-pickers"
    },
    "spriteCssClass": "timePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "timepicker/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery Time Picker Example",
            "aspnet-mvc": "ASP.NET MVC TimePicker example | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This demo shows the basic usage and core functionality of Kendo UI TimePicker widget.",
            "aspnet-mvc": "This example shows how to configure Telerik TimePicker ASP.NET MVC extension for Kendo UI Timepicker widget."
        }
      },
      {
        "text": "Range selection",
        "url": "timepicker/rangeselection",
        "title": {
            "kendo-ui": "Kendo UI jQuery TimePicker Demo for selecting a time range",
            "aspnet-mvc": "ASP.NET MVC TimePicker Demo for selecting a time range"
        },
        "meta": {
            "kendo-ui": "This example shows the flexible functionality of Kendo UI TimePicker. You can specify a range of visible hours and enable the user to select them from the dropdown list.",
            "aspnet-mvc": "This demo shows the flexible functionality of ASP.NET MVC TimePicker. Specify a range of visible hours and enable the user to select them from the dropdown list."
        }
      },
      {
        "text": "Events",
        "url": "timepicker/events",
        "title": {
            "kendo-ui": "Events demo for Kendo UI jQuery TimePicker",
            "aspnet-mvc": "Events in Telerik ASP.NET MVC TimePicker"
        },
        "meta": {
            "kendo-ui": "This sample shows all events which are triggered upon time select, close and time change in Kendo UI TimePicker widget.",
            "aspnet-mvc": "This example illustrates how events are used in Telerik ASP.NET MVC TimePicker control. Play with the demo, select time and find how the functionality works."
        }
      },
      {
        "text": "API",
        "url": "timepicker/api",
        "title": {
            "kendo-ui": "API demo for Kendo UI Time Picker",
            "aspnet-mvc": "API demo for ASP.NET MVC Time Picker"
        },
        "meta": {
            "kendo-ui": "This example shows API functions of Kendo UI HTML5 TimePicker component.",
            "aspnet-mvc": "This example shows the API functions of ASP.NET MVC TimePicker."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "timepicker/globalization"
      },
      {
        "text": "RTL support",
        "url": "timepicker/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left time input in Kendo UI TimePicker",
            "aspnet-mvc": "Right to left support in ASP.NET MVC TimePicker"
        },
        "meta": {
            "kendo-ui": "See how end users of your webapp can type and change time values from the right to the left. Enhance the experience with RTL support in Kendo UI TimePicker.",
            "aspnet-mvc": "This sample illustrates the right to left functionality which Telerik ASP.NET MVC TimePicker supports."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "timepicker/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation in Kendo UI TimePicker",
            "aspnet-mvc": "Keyboard navigation in ASP.NET MVC TimePicker"
        },
        "meta": {
            "kendo-ui": "Users can intuitively select time in Kendo UI TimePicker by simply using the keyboard support of the widget.",
            "aspnet-mvc": "Users can intuitively select time in ASP.NET MVC TimePicker by simply using the keyboard support of the control."
        }
      },
      {
        "text": "MVVM",
        "url": "timepicker/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI TimePicker"
        },
        "meta": {
            "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI TimePicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "timepicker/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI TimePicker"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI TimePicker"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ToolBar",
    "name": "toolbar",
    "api": "web/toolbar",
    "documentation": {
       "kendo-ui": "getting-started/web/toolbar/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/toolbar/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/toolbar/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/toolbar/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/toolbar",
       "aspnet-mvc": "aspnet-mvc/toolbar",
       "jsp-ui": "jsp/toolbar",
       "php-ui": "php/toolbar"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/toolbar",
       "aspnet-mvc": "aspnet-mvc/toolbar",
       "jsp-ui": "jsp/toobar",
       "php-ui": "php/toolbar"
    },
    "spriteCssClass": "toolbarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "toolbar/index",
        "title": {
            "kendo-ui": "Basic usage of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with the supported commands and core functionality."
        }
      },
      {
        "text": "Resizing",
        "url": "toolbar/resizing",
        "title": {
            "kendo-ui": "Resizing demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with the resizing functionality."
        }
      },
      {
        "text": "Events",
        "url": "toolbar/events",
        "title": {
            "kendo-ui": "Events demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with supported events."
        }
      },
      {
        "text": "API",
        "url": "toolbar/api",
        "title": {
            "kendo-ui": "API demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with supported API methods."
        }
      },
      {
        "text": "Integration with Editors",
        "url": "toolbar/integration",
        "title": {
            "kendo-ui": "Integration demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "Play with this Kendo UI ToolBar demo to learn how to include Kendo UI Editor widgets in the ToolBar."
        }
      },
      {
       "text": "Keyboard navigation",
        "url": "toolbar/keyboard-navigation",
        "new": "true",
        "title": {
            "kendo-ui": "Kendo UI ToolBar control | Keyboard support demo",
            "aspnet-mvc": "ASP.NET MVC ToolBar control | Keyboard support demo"
        },
        "meta": {
            "kendo-ui": "Look at the source code and play with the demo to find out more about the keyboard support feature in Kendo UI ToolBar.",
            "aspnet-mvc": "Look at the source code and play with the demo to find out more about the keyboard support feature in ASP.NET MVC ToolBar."
        }
      },
      {
        "text": "AngularJS",
        "url": "toolbar/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Toolbar"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support in Kendo UI Toolbar"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },{
        "text": "RTL Support",
		"disableInMobile": true,
        "url": "toolbar/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-left support for Kendo UI Toolbar",
            "aspnet-mvc": "Right to left support in ASP.NET MVC Toolbar"
        },
        "meta": {
            "kendo-ui": "Enhance the experience with RTL support in Kendo UI Toolbar.",
            "aspnet-mvc": "The sample illustrates the right to left functionality which Telerik ASP.NET MVC Toolbar supports."
        }
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Tooltip",
    "name": "tooltip",
    "api": "web/tooltip",
    "documentation": {
       "kendo-ui": "getting-started/web/tooltip/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/tooltip/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/tooltip/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/tooltip/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/tooltip",
       "aspnet-mvc": "aspnet-mvc/tooltip",
       "jsp-ui": "jsp/tooltip",
       "php-ui": "php/tooltip"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/tooltip",
       "aspnet-mvc": "aspnet-mvc/tooltip",
       "jsp-ui": "jsp/tooltip",
       "php-ui": "php/tooltip"
    },
    "spriteCssClass": "tooltipIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "tooltip/index",
        "title": {
            "kendo-ui": "Basic usage of Kendo UI Tooltip Widget | Kendo UI Web demo",
            "aspnet-mvc": "ASP.NET MVC jQuery Tooltip Demo"
        },
        "meta": {
            "kendo-ui": "Play with this Kendo UI Tooltip demo to get familiar with the performance of the component and its core functionality.",
            "aspnet-mvc": "Look at this example of Telerik jQuery-based toolip in ASP.NET MVC and explore all features of the extension. "
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "tooltip/ajax",
        "title": {
            "kendo-ui": "AJAX loaded content with Kendo UI Tooltip widget",
            "aspnet-mvc": "AJAX loaded content with ASP.NET MVCTooltip control"
        },
        "meta": {
            "kendo-ui": "This example illustrates how the content in Kendo UI Tooltip widget can be loaded, using AJAX.",
            "aspnet-mvc": "This example illustrates how the content in ASP.NET MVC Tooltip control can be loaded, using AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Content template",
        "url": "tooltip/template",
        "title": {
            "kendo-ui": "Content template in Kendo UI Tooltip widget | Kendo UI Web demo",
            "aspnet-mvc": "Content template sample for Telerik ASP.NET MVC Tooltip extension"
        },
        "meta": {
            "kendo-ui": "This example illustrates how the template can be used as content of Kendo UI Tooltip widget.",
            "aspnet-mvc": "This demo shows how  you can use a content template with Telerik jQuery-based tooltip for ASP.NET MVC."
        }
      },
      {
        "text": "Events",
        "url": "tooltip/events",
        "title": {
            "kendo-ui": "Events in Kendo UI Tooltip | Kendo UI Web demo",
            "aspnet-mvc": "Events in Telerik ASP.NET MVC Tooltip"
        },
        "meta": {
            "kendo-ui": "In this demo we will see how all events are triggered in Kendo UI Tooltip widget.",
            "aspnet-mvc": "In this demo we will show how events are triggered in Telerik Tooltip extension in ASP.NET MVC."
        }
      },
      {
        "text": "API",
        "url": "tooltip/api",
        "title": {
            "kendo-ui": "API for Kendo UI Tooltip component | Kendo UI Web demo",
            "aspnet-mvc": "API for ASP.NET MVC Tooltip component | UI for ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "This example shows how the API functions are enabled in Kendo UI Tooltip widget.",
            "aspnet-mvc": "This example shows how the API functions are enabled in ASP.NET MVC Tooltip control."
        }
      },
      {
        "text": "MVVM",
        "url": "tooltip/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Tooltip"
        },
        "meta": {
            "kendo-ui": "Events MVVM binding support in Kendo UI Tooltip"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "tooltip/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Tooltip"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Tooltip"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "TreeList",
    "name": "treelist",
    "pro": "true",
    "api": "web/treelist",
    "documentation": {
       "kendo-ui": "getting-started/web/treelist/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/treelist/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/treelist/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/treelist/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/treelist",
       "aspnet-mvc": "aspnet-mvc/treelist",
       "jsp-ui": "jsp/treelist",
       "php-ui": "php/treelist"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/treelist",
       "aspnet-mvc": "aspnet-mvc/treelist",
       "jsp-ui": "jsp/treelist",
       "php-ui": "php/treelist"
    },
    "spriteCssClass": "treeListIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "treelist/index",
        "title": {
            "kendo-ui": "Kendo UI TreeList widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the basic usage and functionality of Kendo UI jQuery TreeList widget which represents items in a hierarchical tree structure."
        }
      },
      {
        "text": "Binding to local data",
        "url": "treelist/local-data-binding",
        "title": {
            "kendo-ui": "Binding Kendo UI TreeList component to local data"
        },
        "meta": {
            "kendo-ui": "This example illustrates how the treelist can be bound to local data, so that all information is available."
        },
        "packages": [
            "!mvc"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "treelist/remote-data-binding",
        "title": {
            "kendo-ui": "Binding Kendo UI TreeList component to remote data"
        },
        "meta": {
            "kendo-ui": "This example illustrates how the treelist can be bound to remote data and each level is requested asynchronously."
        }
      },
      {
        "text": "Drag & drop",
        "url": "treelist/dragdrop",
        "title": {
            "kendo-ui": "Kendo UI TreeList widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to use drag & drop to allow users to rearrange treelist items"
        }
      },
      {
        "text": "Editing",
        "url": "treelist/editing",
        "title": {
            "kendo-ui": "Kendo UI TreeList widget | Kendo UI Web demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how editing works within the Kendo UI jQuery TreeList widget which represents items in a hierarchical tree structure."
        }
      },
      {
        "text": "Popup editing",
        "url": "treelist/editing-popup",
        "title": {
            "kendo-ui": "Popup data editing example for Kendo UI TreeList widget"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how the records in KendoTreeList can be easily modified in a pop-up dialog."
        }
      },
      {
        "text": "Column resizing",
        "url": "treelist/column-resizing",
        "title": {
            "kendo-ui": "Columns resizing in Kendo UI TreeList control | Kendo UI Web demo",
            "aspnet-mvc": "Column resizing in Telerik ASP.NET MVC TreeList"
        },
        "meta": {
            "kendo-ui": "This demo shows the column resizing feature of the KendoTreeList control.",
            "aspnet-mvc": "In this demo you can see how simple it is to resize columns in the Telerik ASP.NET MVC TreeList."
        }
      },
      {
        "text": "Column reordering",
        "url": "treelist/column-reordering",
        "title": {
            "kendo-ui": "Columns reordering in Kendo UI TreeList control | Kendo UI Web demo",
            "aspnet-mvc": "Column Reordering in Telerik ASP.NET MVC TreeList"
        },
        "meta": {
            "kendo-ui": "This demo shows column moving and reordering feature of KendoTreeList control.",
            "aspnet-mvc": "In this demo you can see how simple it is to reorder columns in Telerik ASP.NET MVC TreeList."
        }
      },
      {
        "text": "Column menu",
        "url": "treelist/column-menu",
        "title": {
            "kendo-ui": "Column menu in Kendo UI TreeList",
            "aspnet-mvc": "Column menu functionality of Telerik ASP.NET MVC TreeList"
        },
        "meta": {
            "kendo-ui": "This demo shows column menu functionality of KendoTreeList widget.",
            "aspnet-mvc": "This Telerik example shows column menu functionality in the TreeList extension for ASP.NET MVC."
        }
      },
      {
        "text": "Frozen columns",
        "url": "treelist/frozen-columns",
        "title": {
            "kendo-ui": "Static columns of Kendo UI TreeList control | Kendo UI Web demo",
            "aspnet-mvc": "Frozen columns demo in Telerik ASP.NET MVC TreeList"
        },
        "meta": {
            "kendo-ui": "This demo shows locked columns feature of KendoTreeList control.",
            "aspnet-mvc": "Play with the demo for frozen columns functionality of Telerik ASP.NET MVC TreeList."
        }
      },
      {
        "text": "Aggregates",
        "url": "treelist/aggregates",
        "title": {
            "kendo-ui": "Aggregating option demo for KendoTreeList jQuery control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the aggregate option for KendoTreeList. Use demo source code to enable the TreeList to calculate aggregated values."
        }
      },
      {
        "text": "Export to Excel",
        "url": "treelist/excel-export",
        "title": {
            "kendo-ui": "Exporting to MS Excel"
        },
        "meta": {
            "kendo-ui": "Export Kendo UI TreeList as Microsoft Excel file"
        },
        "packages": [
            "!offline",
            "!jsp",
            "!php",
            "!offline"
        ]
      },
      {
        "text": "Export to PDF",
        "url": "treelist/pdf-export",
        "title": {
            "kendo-ui": "Exporting to PDF"
        },
        "meta": {
            "kendo-ui": "Export Kendo UI TreeList as PDF file"
        },
        "packages": [
            "!offline",
            "!jsp",
            "!php",
            "!offline"
        ]
      },
      {
        "text": "Events",
        "url": "treelist/events",
        "title": {
            "kendo-ui": "Example of using events in Kendo UI TreeList control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates different events which are available in KendoTreeList widget and the code explains how you can use them for  your project."
        }
      },
      {
        "text": "API",
        "url": "treelist/api",
        "title": {
            "kendo-ui": "KendoTreeList API Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how API Functions can manipulate the contents and behavior of Kendo UI TreeList widget."
        }
      },
      {
        "text": "MVVM",
        "url": "treelist/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI TreeList"
        },
        "meta": {
            "kendo-ui": "MVVM support for Kendo UI TreeList"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "treelist/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI TreeList"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI TreeList"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "ScrollView",
    "name": "scrollview",
    "api": "mobile/scrollview",
    "category": "Data Management",
    "spriteCssClass": "mobileScrollViewIcon",
    "packages": [ "!jsp", "!php" ],
    "documentation": {
       "kendo-ui": "getting-started/mobile/scrollview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/mobilescrollview/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/scrollview",
       "aspnet-mvc": "aspnet-mvc/scrollview"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/scrollview",
       "aspnet-mvc": "aspnet-mvc/scrollview"
    },
    "items": [
      {
        "text": "Basic Usage",
        "url": "scrollview/index",
        "title": {
            "kendo-ui": "Mobile ScrollView widget demo | Kendo UI Demos"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the ScrollView widget basic usage"
        },
        "packages": [ "!mvc", "!jsp", "!php" ]
      }
    ]
  },
  {
    "text": "TreeView",
    "name": "treeview",
    "pro": "true",
    "api": "web/treeview",
    "documentation": {
       "kendo-ui": "getting-started/web/treeview/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/treeview/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/treeview/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/treeview/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/treeview",
       "aspnet-mvc": "aspnet-mvc/treeview",
       "jsp-ui": "jsp/treeview",
       "php-ui": "php/treeview"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/treeview",
       "aspnet-mvc": "aspnet-mvc/treeview",
       "jsp-ui": "jsp/treeview",
       "php-ui": "php/treeview"
    },
    "spriteCssClass": "treeViewIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "treeview/index",
        "title": {
            "kendo-ui": "Kendo UI TreeView widget | Kendo UI Web demo",
            "aspnet-mvc": "ASP.NET MVC TreeView control | UI for ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the basic usage and functionality of Kendo UI jQuery Tree widget which represents items in a hierarchical tree structure.",
            "aspnet-mvc": "This demo illustrates the basic usage and functionality of ASP.NET MVC Tree component which represents items in a hierarchical tree structure."
        }
      },
      {
        "text": "Drag & drop",
        "url": "treeview/dragdrop",
        "title": {
            "kendo-ui": "Drag & Drop feature in Kendo UI TreeView control",
            "aspnet-mvc": "Drag & Drop support in ASP.NET MVC TreeView control"
        },
        "meta": {
            "kendo-ui": "This example shows how items in Kendo TreeView can be dragged and dropped to a specific place. Use the demo source code to try this functionality of the HTML5 component.",
            "aspnet-mvc": "This example shows how to drag and drop items in ASP.NET MVC TreeView. Use the demo source code and play with the demo."
        }
      },
      {
        "text": "Animation effects",
        "url": "treeview/animation",
        "title": {
            "kendo-ui": "Animation effects sample for Kendo UI jQuery Tree component",
            "aspnet-mvc": "Animation effects sample for ASP.NET MVC Treeview component"
        },
        "meta": {
            "kendo-ui": "This sample shows how you can add animation effects and expand animation by setting the specific options for Kendo UI TreeView widget.",
            "aspnet-mvc": "This sample shows how you can add animation effects and expand animation by setting the specific options for ASP.NET MVC TreeView component."
        }
      },
      {
        "text": "Images",
        "url": "treeview/images",
        "title": {
            "kendo-ui": "Example of customized Kendo UI TreeView using images",
            "aspnet-mvc": "Example of customized ASP.NET MVC TreeView using image"
        },
        "meta": {
            "kendo-ui": "This demo shows you can add images to your Kendo UI TreeView control, as well as implement TreeView with sprites in your website or project.",
            "aspnet-mvc": "This demo shows how you can add images to your ASP.NET MVC TreeView control, as well as implement TreeView with sprites in your website or project."
        }
      },
      {
        "text": "Checkboxes",
        "url": "treeview/checkboxes",
        "title": {
            "kendo-ui": "Creating tree nodes with checkboxes | Kendo UI TreeView Demo",
            "aspnet-mvc": "Creating tree nodes with checkboxes | ASP.NET MVC TreeView Demo"
        },
        "meta": {
            "kendo-ui": "This sample illustrates how you can easily create tree nodes with checkboxes by simply setting the child item of the checkboxes to true.",
            "aspnet-mvc": "This sample illustrates how you can easily create tree nodes with checkboxes in ASP.NET MVC Treeview by simply setting the child item of the checkboxes to true."
        }
      },
      {
        "text": "Binding to local data",
        "url": "treeview/local-data-binding",
        "title": {
            "kendo-ui": "Binding to local data demo for Kendo UI TreeView control",
            "aspnet-mvc": "Binding to local data demo for ASP.NET MVC TreeView control"
        },
        "meta": {
            "kendo-ui": "This demo shows how items in the tree are displayed with the default settings of Kendo UI TreeView and how the component can be easily bound to local data.",
            "aspnet-mvc": "This demo shows how items in the tree are displayed with the default settings of ASP.NET MVC TreeView and how the component can be easily bound to local data."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "treeview/remote-data-binding",
        "title": {
            "kendo-ui": "Binding Kendo UI tree component to remote data",
            "aspnet-mvc": "Binding ASP.NET MVC tree component to remote data"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This example illustrates how the hierarchical tree can be bound to remote data and thus the items in the tree are populated from the external source.",
            "aspnet-mvc": "This example illustrates how the ASP.NET MVC hierarchical tree can be bound to remote data and the items in the tree populated from an external source."
        }
      },
      {
        "packages": [
          "!mvc"
        ],
        "text": "Binding to OData service",
        "url": "treeview/odata-binding",
        "title": {
            "kendo-ui": "Example of binding Kendo UI TreeView to OData service"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This sample shows how Kendo UI TreeView widget can be bound to oData service."
        }
      },
      {
        "text": "Templates",
        "url": "treeview/templates",
        "title": {
            "kendo-ui": "Example of templates for Kendo UI TreeView",
            "aspnet-mvc": "Example of templates for ASP.NET MVC TreeView"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how tree nodes in Kendo UI TreeView component can be further customized by using templates.",
            "aspnet-mvc": "This demo illustrates how tree nodes in ASP.NET MVC TreeView component can be further customized by using templates."
        }
      },
      {
        "text": "Events",
        "url": "treeview/events",
        "title": {
            "kendo-ui": "Demo for Kendo UI TreeView widget events",
            "aspnet-mvc": "Demo for ASP.NET MVC TreeView control events"
        },
        "meta": {
            "kendo-ui": "This sample shows built-in events in Kendo jQuery tree widget. Events are triggered when the user selects, collapses, expands, adds or removes an item on the list.",
            "aspnet-mvc": "This sample shows built-in events in ASP.NET MVC tree control. Events are triggered when the user selects, collapses, expands, adds or removes an item on the list."
        }
      },
      {
        "text": "API",
        "url": "treeview/api",
        "title": {
            "kendo-ui": "Kendo UI TreeView API Example",
            "aspnet-mvc": "ASP.NET MVC TreeView API Example"
        },
        "meta": {
            "kendo-ui": "This demo shows the specific API functions, as well as DataSource interaction options, which control the behaviour of Kendo UI TreeView.",
            "aspnet-mvc": "This demo shows the specific API functions, as well as DataSource interaction options, which control the behaviour of ASP.NET MVC TreeView."
        }
      },
      {
        "text": "RTL support",
        "url": "treeview/right-to-left-support",
        "title": {
            "kendo-ui": "RTL Support in Kendo UI TreeView component",
            "aspnet-mvc": "RTL Support in ASP.NET MVC TreeView component"
        },
        "meta": {
            "kendo-ui": "Get familiar with the RTL support in Kendo UI TreeView widget, look at the example and use the source code to play with the demo!",
            "aspnet-mvc": "Get familiar with the RTL support in ASP.NET MVC TreeView component. Look at the example and use the source code to play with the demo."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "treeview/keyboard-navigation",
        "title": {
            "kendo-ui": "Kendo UI TreeView control | Keyboard support demo",
            "aspnet-mvc": "ASP.NET MVC TreeView control | Keyboard support demo"
        },
        "meta": {
            "kendo-ui": "Look at the source code and play with the demo to find out more about the keyboard support feature in Kendo UI TreeView.",
            "aspnet-mvc": "Look at the source code and play with the demo to find out more about the keyboard support feature in ASP.NET MVC TreeView."
        }
      },
      {
        "text": "MVVM",
        "url": "treeview/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI TreeView"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI TreeView"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
{
        "text": "AngularJS",
        "url": "treeview/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI TreeView"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI TreeView"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Upload",
    "name": "upload",
    "pro": "true",
    "api": "web/upload",
    "documentation": {
       "kendo-ui": "getting-started/web/upload/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/upload/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/upload/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/upload/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/upload",
       "aspnet-mvc": "aspnet-mvc/upload",
       "jsp-ui": "jsp/upload",
       "php-ui": "php/upload"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/upload",
       "aspnet-mvc": "aspnet-mvc/upload",
       "jsp-ui": "jsp/upload",
       "php-ui": "php/upload"
    },
	"sources": {
		"kendo-ui": [{
			"name": "Sample service",
			"url": "~/Controllers/Public/UploadController.cs"
		}]
	},
    "spriteCssClass": "uploadIcon",
    "packages": [
      "!offline"
    ],
    "items": [
      {
        "text": "Basic usage",
        "url": "upload/index",
        "title": {
            "kendo-ui": "Kendo UI Upload widget - example of core features",
            "aspnet-mvc": "ASP.NET MVC Upload extension demo"
        },
        "meta": {
            "kendo-ui": "This example shows the basic functionality and core features of Kendo UI jQuery file upload control.",
            "aspnet-mvc": "This ASP.NET MVC Upload extension demo illustrates the multi-file selection capability of the control."
        }
      },
      {
        "text": "Asynchronous Upload",
        "url": "upload/async",
        "title": {
            "kendo-ui": "jQuery Asynchronous File Upload Example | Kendo UI Upload Demo",
            "aspnet-mvc": "ASP.NET MVC Asynchronous File Upload Example"
        },
        "meta": {
            "kendo-ui": "This example shows the async upload functionality of Kendo UI Upload control.",
            "aspnet-mvc": "This example shows the async upload functionality of ASP.NET MVC Upload control."
        }
      },
      {
        "text": "Events",
        "url": "upload/events",
        "title": {
            "kendo-ui": "Example of handling events in Kendo UI Upload",
            "aspnet-mvc": "Handling events in ASP.NET MVC Upload | UI for ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "Learn with this example how to handle events, triggered by Kendo UI Upload widget.",
            "aspnet-mvc": "In this sample you will see how to handle events, triggered by Kendo UI jQuery-based Upload widget, used in ASP.NET MVC."
        }
      },
      {
        "text": "API",
        "url": "upload/api",
        "title": {
            "kendo-ui": "API example for Kendo UI File Upload Control",
            "aspnet-mvc": "API example for ASP.NET MVC File Upload Control"
        },
        "meta": {
            "kendo-ui": "This demo shows API Functions of Kendo UI Upload component. Try the sample to see how to enable, disable the upload option and toggle the enabled state.",
            "aspnet-mvc": "This demo shows API Functions of ASP.NET MVC Upload component. Try the sample to see how to enable, disable the upload option and toggle the enabled state."
        }
      },
      {
        "text": "Templates",
        "url": "upload/templates",
        "title": {
            "kendo-ui": "Example of templates for Kendo UI Upload",
            "aspnet-mvc": "Templates for Telerik ASP.NET MVC Upload"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to use templates with the Kendo UI Upload widget.",
            "aspnet-mvc": "In this example you will see templates options for Telerik ASP.NET MVC Upload extension."
        }
      },
      {
        "text": "Initial Files",
        "url": "upload/initialfiles",
        "title": {
            "kendo-ui": "Example of initial files for Kendo UI Upload",
            "aspnet-mvc": "Example of initial files for ASP.NET MVC Upload"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to render initial files with the Kendo UI Upload widget.",
            "aspnet-mvc": "This demo illustrates how to render initial files with the ASP.NET MVC Upload."
        }
      },
      {
        "text": "RTL support",
        "url": "upload/right-to-left-support",
        "title": {
            "kendo-ui": "RTL support in Kendo UI Upload",
            "aspnet-mvc": "Right to left support in Telerik ASP.NET MVC Upload extension"
        },
        "meta": {
            "kendo-ui": "This Kendo UI demo illustrates how you can facilitate your RTL app users by using the RTL feature of Kendo UI Upload widget.",
            "aspnet-mvc": "This demo illustrates the right to left support in Telerik ASP.NET MVC Upload HtmlHelper extension."
        }
      },
      {
        "text": "MVVM",
        "url": "upload/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Upload"
        },
        "meta": {
            "kendo-ui": "Enabled, events and visible MVVM binding support in Kendo UI Upload"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "upload/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Upload"
        },
        "meta": {
            "kendo-ui": "AngularJS support directives in Kendo UI Upload"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Window",
    "name": "window",
    "api": "web/window",
    "documentation": {
       "kendo-ui": "getting-started/web/window/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/window/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/window/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/window/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/window",
       "aspnet-mvc": "aspnet-mvc/window",
       "jsp-ui": "jsp/window",
       "php-ui": "php/window"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/window",
       "aspnet-mvc": "aspnet-mvc/window",
       "jsp-ui": "jsp/window",
       "php-ui": "php/window"
    },
    "spriteCssClass": "windowIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "window/index",
        "title": {
            "kendo-ui": "Kendo UI Window Example | Kendo UI Web Demos",
            "aspnet-mvc": "ASP.NET MVC Window Example | UI for ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the basic usage of KendoWindow widget, one of the components which you can use to enhance the interaction in your web app.",
            "aspnet-mvc": "This example demonstrates the basic usage of ASP.NET MVC Window contorl one of the components which you can use to enhance the interaction in your web app."
        }
      },
      {
        "text": "Customizing actions",
        "url": "window/actions",
        "title": {
            "kendo-ui": "Example of customizing actions in Kendo UI Window control",
            "aspnet-mvc": "Example of customizing actions in ASP.NET MVC Window control"
        },
        "meta": {
            "kendo-ui": "This Kendo UI Window sample illustrates how client-side actions can be further customized in order to bring interactivity in your web app to a higher level.",
            "aspnet-mvc": "This ASP.NET MVC Window sample illustrates how client-side actions can be further customized in order to bring interactivity in your web app to a higher level."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "window/ajax",
        "title": {
            "kendo-ui": "AJAX loaded content with Kendo UI Window widget",
            "aspnet-mvc": "AJAX loaded content with ASP.NET MVC Window"
        },
        "meta": {
            "kendo-ui": "This example illustrates how content in Kendo UI window widget can be loaded, using AJAX.",
            "aspnet-mvc": "This example illustrates how content in ASP.NET MVC window control can be loaded, using AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Animation effects",
        "url": "window/animation",
        "title": {
            "kendo-ui": "Animation effects demo for Kendo UI window widget",
            "aspnet-mvc": "Animation effects demo for ASP.NET MVC window control"
        },
        "meta": {
            "kendo-ui": "This sample illustrates the animation effects in Kendo UI window control. Just play with animation settings to change the interactivity of the control.",
            "aspnet-mvc": "This sample illustrates the animation effects in ASP.NET MVC window control. Just play with animation settings to change the interactivity of the control."
        }
      },
      {
        "text": "Events",
        "url": "window/events",
        "title": {
            "kendo-ui": "Events in Kendo UI Window demo",
            "aspnet-mvc": "Events in ASP.NET MVC Window demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how to fire events in  Kendo UI jQuery window control. Refresh, activate, open, dragend, dragstart are some of the events which you can trigger.",
            "aspnet-mvc": "This demo shows how to fire events in ASP.NET MVC window control. Refresh, activate, open, dragend, dragstart are some of the events which you can trigger."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "window/api",
        "title": {
            "kendo-ui": "Example of Kendo UI Window API",
            "aspnet-mvc": "Example of ASP.NET MVC Window API"
        },
        "meta": {
            "kendo-ui": "This sample shows how you can use the API of kendoWindow widget to refresh the content of the window, open and close it.",
            "aspnet-mvc": "This sample shows how you can use the API of ASP.NET MVC Window control to refresh the content of the window, open and close it."
        },
        "requiresServer": "true"
      },
      {
        "text": "RTL support",
        "url": "window/right-to-left-support",
        "title": {
            "kendo-ui": "Right-to-Left window position of Kendo UI Window control",
            "aspnet-mvc": "Right-to-Left window position of ASP.NET MVC Window control"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Window widget supports right-to-left direction of the window to provide best end-user experience.",
            "aspnet-mvc": "This demo shows how ASP.NET MVC Window control supports right-to-left direction of the window to provide best end-user experience."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "window/keyboard-navigation",
        "title": {
            "kendo-ui": "Keyboard navigation support | Kendo UI Window Demo",
            "aspnet-mvc": "Keyboard navigation support | ASP.NET MVC Window Demo"
        },
        "meta": {
            "kendo-ui": "The sample demonstrates how the keyboard navigation feature is integrated in the powerful Kendo UI Window.",
            "aspnet-mvc": "The sample demonstrates how the keyboard navigation feature is integrated in the powerful ASP.NET MVC Window control."
        }
      },
      {
        "text": "MVVM",
        "url": "window/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Window"
        },
        "meta": {
            "kendo-ui": "Events and visible MVVM binding support in Kendo UI Window"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "window/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Window"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Window"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "packages": [ "!mvc", "!jsp", "!php" ],
    "text": "DataSource",
    "name": "datasource",
    "api": "framework/datasource",
    "documentation": {
       "kendo-ui": "getting-started/framework/datasource/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/data-source"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/data-source"
    },
    "spriteCssClass": "dataSourceIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datasource/index",
        "title": {
            "kendo-ui": "Kendo UI DataSource Demo"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the basic functionality of Kendo UI DataSource which is used for data operations and manipulations in Kendo jQuery web widgets."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "datasource/remote-data-binding",
        "title": {
            "kendo-ui": "Kendo UI DataSource binding to a remote data service"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This sample illustrates how Kendo UI DataSource component can be bound to a remote data service."
        }
      },
      {
        "text": "Binding to XML",
        "url": "datasource/xml-data",
        "title": {
            "kendo-ui": "Kendo UI DataSource bound to XML | Kendo UI Web Demos"
        },
        "meta": {
            "kendo-ui": "This example shows how you can bind Kendo UI Data Source control to XML Data format."
        },
        "requiresServer": "true"
      },
      {
        "text": "Remote data operations",
        "url": "datasource/remote-operations",
        "title": {
            "kendo-ui": "Remote data operations | Kendo UI DataSource Demo"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This sample demonstrates how to configure remote data operations such as paging and sorting of Kendo UI jQuery Data Source."
        }
      },
      {
        "text": "Local data operations",
        "url": "datasource/local-operations",
        "title": {
            "kendo-ui": "Example of local data operations in Kendo UI DataSource component"
        },
        "meta": {
            "kendo-ui": "This sample shows how to configure the functionality of local data operations in Kendo UI DataSource. The component supports paging, sorting and filtering."
        }
      },
      {
        "text": "Shared DataSource",
        "url": "datasource/shared-datasource",
        "title": {
            "kendo-ui": " Shared DataSource Demo | Kendo UI Web demos"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This example demonstrates a shared DataSource which can be created to enable multiple UI widgets to bind to the same data collection."
        },
        "requiresServer": "true"
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [ "!mvc", "!jsp", "!php" ],
    "category": "Framework",
    "text": "Drawing API",
    "name": "drawing",
    "spriteCssClass": "drawingIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "drawing/index",
        "title": {
            "kendo-ui": "Kendo UI Drawing API"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how the Kendo UI Drawing API can be used to draw basic shapes."
        }
      }, {
        "text": "Manipulating Paths",
        "url": "drawing/paths",
        "title": {
            "kendo-ui": "Kendo UI Drawing API"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how the Kendo UI Drawing API can be used to manipulate paths."
        }
      }
    ]
  },
  {
    "packages": [ "!jsp", "!php" ],
    "category": "Framework",
    "text": "PDF Export",
    "name": "export",
    "spriteCssClass": "drawingIcon",
    "items": [
      {
        "text": "Document Export",
        "url": "pdf-export/index",
        "packages": [
          "!jsp",
          "!php"
        ],
        "title": {
            "kendo-ui": "Kendo UI Drawing API Export functionality"
        },
        "meta": {
            "kendo-ui": "This demo shows how to export HTML elements and Drawing surfaces to PDF, PNG Images or SVG and save them directly in the browser."
        }
      }, {
        "text": "Page Layout",
        "url": "pdf-export/page-layout",
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "title": {
            "kendo-ui": "Kendo UI PDF Export customizations"
        },
        "meta": {
            "kendo-ui": "This demo shows how to customize layout and style of PDF exports."
        }
      }
    ]
  },
  {
    "packages": [ "!jsp", "!php" ],
    "text": "Globalization",
    "name": "globalization",
    "api": "framework/kendo",
    "documentation": {
       "kendo-ui": "getting-started/framework/globalization/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/globalization"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/globalization"
    },
    "spriteCssClass": "globalizationIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "globalization/index",
        "title": {
            "kendo-ui": "Globalization example in Kendo UI Web framework"
        },
        "meta": {
            "kendo-ui": "This is an example of globalization which is supported in Kendo UI Web framework."
        }
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [ "!mvc", "!jsp", "!php" ],
    "text": "Integration with JS libraries",
    "name": "integration",
    "spriteCssClass": "integrationIcon",
    "new": "true",
    "items": [
      {
        "text": "Kendo UI + Handlebars",
        "url": "integration/index",
        "title": {
            "kendo-ui": "Integrating Handlebars templates with Kendo UI Web examples"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Handlebars templates can be integrated with the robust Kendo UI framework for web app development."
        }
      },
      {
        "text": "Kendo UI + Twitter Bootstrap",
        "url": "integration/bootstrap",
        "title": {
            "kendo-ui": "Integrating Twitter Bootstrap with Kendo UI responsive webapp example"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Twitter Bootstrap can be integrated with the Kendo UI framework into a responsive web application."
        }
      },
      {
        "text": "Kendo UI + Angular2",
        "url": "integration/angular2",
        "title": {
            "kendo-ui": "Integrating Angular 2 with Kendo UI (experimental)"
        },
        "sources": {
            "kendo-ui": [{
                "name": "angular2-app.ts",
                "url": "~/content/web/integration/angular2-app.ts"
            }]
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Angular 2 can be integrated with the Kendo UI framework"
        },
        "new": "true"
      },
      {
        "text": "Kendo UI + WebComponents",
        "url": "integration/webcomponents",
        "title": {
            "kendo-ui": "Integrating Kendo UI widgets with WebComponents (experimental)"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI widget can be initialized and used the WebComponents way"
        },
        "new": "true"
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [ "!mvc", "!jsp", "!php" ],
    "text": "MVVM",
    "name": "mvvm",
    "api": "framework/kendo",
    "documentation": {
       "kendo-ui": "getting-started/framework/mvvm/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/mvvm"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/mvvm"
    },
    "spriteCssClass": "mvvmIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "mvvm/index",
        "title": {
            "kendo-ui": "Kendo UI MVVM Demo"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the basic usage and functionality of Kendo UI MVVM which helps you separate the data from the UI."
        }
      },
      {
        "text": "HTML element binding",
        "url": "mvvm/elements",
        "title": {
            "kendo-ui": "Example of HTML element binding in Kendo UI MVVM"
        },
        "meta": {
            "kendo-ui": "This Kendo UI MVVM demo shows how the html binding sets the HTML content of the target DOM element to a View-Model state."
        }
      },
      {
        "text": "Widget binding",
        "url": "mvvm/widgets",
        "title": {
            "kendo-ui": "Example of jQuery widgets bound to Kendo UI MVVM"
        },
        "meta": {
            "kendo-ui": "This example shows how Kendo UI jQuery widgets can be bound to Kendo UI MVVM."
        }
      },
      {
        "text": "Attribute binding",
        "url": "mvvm/attributes",
        "title": {
            "kendo-ui": "Kendo UI MVVM attribute binding example"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how attributes are bound in Kendo UI MVVM."
        }
      },
      {
        "text": "Style binding",
        "url": "mvvm/style",
        "title": {
            "kendo-ui": "Example of using the style binding in Kendo UI MVVM"
        },
        "meta": {
            "kendo-ui": "This demo shows how the style binding sets the style attributes to the target DOM element."
        }
      },
      {
        "text": "Event binding",
        "url": "mvvm/event",
        "title": {
            "kendo-ui": "Kendo UI MVVM event binding demo"
        },
        "meta": {
            "kendo-ui": "This example shows the events which are bound to an attribute in MVVM."
        }
      },
      {
        "text": "Source and template binding",
        "url": "mvvm/source",
        "title": {
            "kendo-ui": "Source and template binding demo | Kendo UI MVVM"
        },
        "meta": {
            "kendo-ui": "This demo shows how the source binding sets the HTML content of the target element by rendering a template with a View-model value."
        }
      },
      {
        "text": "Strongly typed binding",
        "url": "mvvm/types",
        "title": {
            "kendo-ui": "Strongly typed binding demo | Kendo UI MVVM"
        },
        "meta": {
            "kendo-ui": "This demo shows how the View-model fields can be updated using strongly typed 'checked' and 'value' bindings"
        }
      },
      {
        "text": "CSS class binding",
        "url": "mvvm/css",
        "title": {
            "kendo-ui": "CSS class binding | Kendo UI MVVM"
        },
        "meta": {
            "kendo-ui": "This demo shows how CSS classes can be assigned based on a View-model field"
        }
      },
      {
        "text": "Remote binding",
        "url": "mvvm/remote-binding",
        "title": {
            "kendo-ui": "Remote binding in Kendo UI MVVM framework"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "This example shows how remote data is bound  in Kendo UI MVVM framework."
        }
      },
      {
        "text": "Custom binding",
        "url": "mvvm/custom",
        "title": {
            "kendo-ui": "Example of creating custom bindings in Kendo UI MVVM"
        },
        "meta": {
            "kendo-ui": "This example demonstrates how custom bindings can be created in Kendo UI MVVM. Try the demo to see how a custom binding is declared in the View."
        }
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [ "!mvc", "!jsp", "!php", "!offline" ],
    "text": "Single-Page App",
    "name": "spa",
    "api": "framework/kendo",
    "documentation": {
       "kendo-ui": "getting-started/framework/spa/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/spa"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/spa"
    },
    "spriteCssClass": "spaIcon",
    "items": [
      {
        "text": "Launch",
        "url": "spa/index",
        "title": {
            "kendo-ui": "Build Single-Page app with Kendo UI Web framework | Kendo UI Demos"
        },
        "meta": {
            "kendo-ui": "In this example we will demonstrate the basic usage and functionality of Kendo UI Web for building single-page applications."
        },
        "packages": [ "!mvc", "!jsp", "!php", "!offline" ]
      }
    ],
    "category": "Framework"

  },
  {
    "packages": [ "!mvc", "!jsp", "!php" ],
    "text": "Templates",
    "name": "templates",
    "api": "framework/kendo",
    "documentation": {
       "kendo-ui": "getting-started/framework/templates/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/templates"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/templates"
    },
    "spriteCssClass": "templatesIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "templates/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery Templates Demo"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the basic functionality of Kendo UI jQuery templates which can be used in Kendo UI Web framework."
        }
      },
      {
        "text": "Expressions",
        "url": "templates/expressions",
        "title": {
            "kendo-ui": "Examples of different Kendo UI jQuery templates"
        },
        "meta": {
            "kendo-ui": "These examples show different expressions of Kendo UI Templates which can be represented as a basic template, script elements, encoding HTML and JS code inside the template definition."
        }
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [ "!jsp", "!php" ],
    "text": "Validator",
    "name": "validator",
    "api": "web/validator",
    "documentation": {
       "kendo-ui": "getting-started/framework/validator/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/validation"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/validator"
    },
    "spriteCssClass": "validatorIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "validator/index",
        "title": {
            "kendo-ui": "Kendo UI Validator Demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the core functionality of Kendo UI Validator component in Kendo UI Web framework."
        }
      },
      {
        "text": "Custom validation",
        "url": "validator/custom-validation",
        "title": {
            "kendo-ui": "Custom rule Kendo UI Validator Demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to implement a custom validation rule for the Kendo UI Validator component in Kendo UI Web framework."
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "validator/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Validator"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Validator"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "packages": [ "!jsp", "!php" ],
    "text": "Styling",
    "name": "styling",
    "spriteCssClass": "stylingIcon",
    "items": [
      {
        "text": "Forms",
        "url": "styling/index",
        "title": {
            "kendo-ui": "jQuery forms styling demo | Kendo UI Web framework"
        },
        "meta": {
            "kendo-ui": "This example illustrates how jQuery and HTML5-based forms can be styled with Kendo UI Web."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Panels",
        "url": "styling/panels",
        "title": {
            "kendo-ui": "Panels styling example | Kendo UI Web app framework"
        },
        "meta": {
            "kendo-ui": "This demo shows how different styling can be applied to panels in Kendo UI Web."
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Icons",
        "url": "styling/icons",
        "title": {
            "kendo-ui": "jQuery icons styling example | Kendo UI Web demos"
        },
        "meta": {
            "kendo-ui": "This example shows how different styling can be applied to icons by using Kendo UI Web framework."
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Checkboxes",
        "url": "styling/checkboxes",
        "title": {
            "kendo-ui": "jQuery icons styling example | Kendo UI Web demos"
        },
        "meta": {
            "kendo-ui": "This example shows how different styling can be applied to icons by using Kendo UI Web framework."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Radio buttons",
        "url": "styling/radios",
        "title": {
            "kendo-ui": "jQuery icons styling example | Kendo UI Web demos"
        },
        "meta": {
            "kendo-ui": "This example shows how different styling can be applied to icons by using Kendo UI Web framework."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Area Charts",
    "name": "area-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartAreaIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "area-charts/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery-based Area Charts Demo",
            "aspnet-mvc": "ASP.NET MVC Area Charts control | UI for ASP.NET MVC Demos"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI Area Charts component can be added to your web page in order to visualize quantitive data. Learn how to define your area chart.",
            "aspnet-mvc": "This example shows how to use Telerik ASP.NET MVC Area Charts extension to visualize filled areas on a diagram. "
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>Area chart type is suitable for displaying quantitative data as continuous lines that pass through points defined by their items' values. The portion of the graph beneath the lines is filled with a particular color for each series. The different colors in an Area chart are useful for emphasizing changes in values from several sets of similar data. </p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this example, you can see how to register and configure an Aria chart, which represents the gross domestic growth of India, Haiti and of the whole World. This chart type is suitable for displaying quantitative data as continuous lines that pass through points defined by their items' values. The portion of the graph beneath the lines is filled with a particular color for each series. The different colors in an Area chart are useful for emphasizing changes in values from several sets of similar data. <br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Stacked area",
        "url": "area-charts/stacked-area",
        "title": {
            "kendo-ui": "Kendo UI jQuery stacked area chart example",
            "aspnet-mvc": "ASP.NET MVC stacked area chart example"
        },
        "meta": {
          "kendo-ui": "This demo shows how the stacked area is created with KendoChart. Learn how to visualize series that should be stacked in the chart.",
          "aspnet-mvc": "Learn how to visualize series that should be stacked in an ASP.NET MVC chart."
        },
		"description": {
            "kendo-ui": "<p>Multiple series rendered in the same area chart will overlap one another by default. To avoid that, you have the option to stack these series on top of one another, so that the data values at each x-value are summed. In an area chart, the value for each series will always be stacked relative to the preceding one.</p> <p>You can enable the stack feature through the seriesDefault,stack setting.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefault option</a> in the documentation.</p>",
			      "aspnet-mvc": "<p>By default, the MVC Area Chart renders its series on top of one another. You have the ability to stack them atop one another instead, so that the data values at each x-value are summed. In an area chart, the value for each series will always be stacked relative to the preceding one.</p> <p>You can enable the stack feature through the SeriesDefaults -&gt; Area -&gt; Stack(true) setting.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/aspnet-mvc/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
		},
        "group": "Area Chart Types"
      },
      {
        "text": "100% Stacked area",
        "url": "area-charts/stacked100-area",
        "title": {
            "kendo-ui": "Kendo UI jQuery 100% stacked area chart example",
            "aspnet-mvc": "ASP.NET MVC 100% stacked area chart example"
        },
        "meta": {
            "kendo-ui": "This demo shows how a 100% stacked area chart is created with KendoChart. Learn how to visualize series that should be stacked to 100% in the chart.",
            "aspnet-mvc": "Learn how to visualize series that should be stacked to 100% in an ASP.NET MVC chart."
        },
		"description": {
            "kendo-ui": "<p>The Area chart type supports 100% stacking, where the stacked series value are rescaled such that they add up to 100%.</p> <p>To enable the 100% stack feature set the seriesDefault-&gt; stack-&gt;type setting.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefaults option</a> in the documentation.</p>",
			"aspnet-mvc": "<p>The Area chart type supports 100% stacking, where the stacked series value are rescaled such that they add up to 100%.</p> <p>You can enable the 100% stack feature through the SeriesDefaults -&gt; Area -&gt; Stack(ChartStackType.Stack100) setting.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/aspnet-mvc/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
		}
      },
      {
        "text": "Stepped Area",
        "url": "area-charts/step-area",
        "title": {
            "kendo-ui": "Example of using Kendo UI Area Chart with step line style",
            "aspnet-mvc": "Stepped area demo for Telerik ASP.NET MVC Area Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure step line style for the Kendo UI Area Chart",
            "aspnet-mvc": "In this example we illustrate how stepped area can be configured for Telerik Area charts for ASP.NET MVC."
        },
		"description": {
            "kendo-ui": "<p>The Stepped Area chart is a variation of area chart where each data point from the series is connected with vertical and horizontal lines to form a step-like progression. This type of area visualization is useful when you want to highlight the increase or decrease in values over time.</p> <p>You can configure a stepped area chart through the series-&gt; line-&gt; style = \"line\" settings of Kendo UI chart widget.</p>",
			      "aspnet-mvc": "<p>The Stepped Area chart is a form of area chart where each data point from the series is connected with vertical and horizontal lines to form a step-like progression. This type of area visualization is useful when you want to highlight the increase or decrease in values over time.</p> <p>You can configure a stepped area chart through the Series -&gt; Area -&gt; Line -&gt; Style(ChartLineStyle.<strong>Step</strong>) settings of the MVC Chart.</p>"
		}		
      },
      {
        "text": "Smooth Area",
        "url": "area-charts/smooth-area",
        "title": {
            "kendo-ui": "Example of using Kendo UI Area Chart with smooth line (spline) style",
            "aspnet-mvc": "Configure smooth line (spline) style for ASP.NET MVC Area Chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure smooth line (spline) style for the Kendo UI Area Chart",
            "aspnet-mvc": "This demo shows how to configure smooth line (spline) style for the ASP.NET MVC Area Chart."
        },
		"description": {
            "kendo-ui": "<p>This demo illustrates how to configure smooth line (spline) style for the Kendo UI area chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can specify a smooth line area chart to be rendered through the series -&gt; line -&gt; style = \"smooth\" settings of the chart widget.</p>",
			      "aspnet-mvc": "<p>This demo shows how to configure smooth line (spline) style for the Telerik MVC Area Chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth line area chart through the Series -&gt; Area -&gt; Line -&gt; Style(ChartAreaStyle.<strong>Smooth</strong>) settings of the ASP.NET MVC Chart.</p>"
		}		
      },
      {
        "text": "Date axis",
        "url": "area-charts/date-axis",
        "title": {
            "kendo-ui": "Date axis sample for Kendo UI Area Charts",
            "aspnet-mvc": "Date axis sample for ASP.NET MVC Area Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can set specific base date units in your Kendo UI Area Chart to help you visualize a seasonal trend in your app.",
          "aspnet-mvc": "This demo shows how you can set specific base date units in your ASP.NET MVC Area Chart to help you visualize a seasonal trend in your app."
        },
		"description": {
            "kendo-ui": "<p>You can scale the date axis of your Kendo UI area chart to get a better visualization of the date axis values in your app. This can be done by altering:</p> <ul> <li>The base date unit of the x-axis through the categoryAxis.baseUnit attribute, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the series.aggregate attribute, which takes max, min, sum, avg and count.</li> </ul>",
			"aspnet-mvc": "<p>You can scale the date axis of your ASP.NET MVC Area Chart to get a better visualization of the seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the CategoryAxis.BaseUnit property, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the Series.Aggregate property, which takes max, min, sum, avg and count.</li> </ul>"
		},
        "group": "Functionality"
      },
      {
        "text": "Logarithmic axis",
        "url": "area-charts/logarithmic-axis",
        "title": {
            "kendo-ui": "Logarithmic axis sample for Kendo UI Area Charts",
            "aspnet-mvc": "Logarithmic axis sample for ASP.NET MVC Area Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how you can use a logarithmic axis for the Kendo UI Area Chart.",
            "aspnet-mvc": "This demo shows how you can use a logarithmic axis for the ASP.NET MVC Area Chart."
        },
		"description": {
            "kendo-ui": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This example represents how you can use a logarithmic axis for the Kendo UI area chart by setting the valueAxis-&gt; type attribute to log.</p>",
			"aspnet-mvc": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the ASP.NET MVC Area Chart by setting the ValueAxis -&gt; Logarithmic() method. Тhe base of the logarithmic axis is defined by the interval between the major divisions, controlled by the МajorUnit property.</p>"
		},
        "requiresServer": "true"
      },
      {
        "text": "Multi-axis",
        "url": "area-charts/multiple-axes",
        "title": {
            "kendo-ui": "Multi-axis demo for Kendo UI Area Charts component",
            "aspnet-mvc": "Multi-axis demo for ASP.NET MVC Area Chart"
        },
        "meta": {
            "kendo-ui": "Ensure the best performance of HTML5 charting and visualize data on multiple axis with Kendo UI Area Charts  in order to provide solid business reports for end users.",
            "aspnet-mvc": "Leverage the best charting performance and visualize data on multiple axis with ASP.NET MVC Area Charts to provide solid business reports for end users."
        },
		"description": {
            "kendo-ui": "<p>The Kendo UI area chart supports multiple axis which is a feature applicable for a variety of scenarios. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>miles</em>, <em>km</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has an unique name which is set through the <strong>valueAxis.title</strong> property. You can also set the <strong>categoryAxis.axisCrossingValues</strong> array values to specify the alignment of the value axes.</p>",
			      "aspnet-mvc": "<p>The Telerik ASP.NET MVC Area chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>miles</em>, <em>km</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has unique name which is set through the <strong>ValueAxis.Title </strong>method. You can also set the <strong>CategoryAxis.AxisCrossingValue</strong> method to specify the alignment of the value axes.</p>"
		}
      },
      {
        "text": "Error Bars",
        "url": "area-charts/error-bars",
        "title": {
            "kendo-ui": "Example of using ErrorBars for Kendo UI Area Chart",
            "aspnet-mvc": "Example of using ErrorBars for ASP.NET MVC Area Chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to use ErrorBars for Kendo UI Area Chart",
            "aspnet-mvc": "This demo shows how to use ErrorBars for ASP.NET MVC Area Chart"
        },
		"description": {
            "kendo-ui": "<p>This sample demonstrates how you can use Error Bars in Kendo UI area chart to show variability of data. The Error Bars are specified as part of the series -&gt; errorBars chart setting and are offered by the following series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p> <p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a>, <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a> and so on. To specify standard deviation, you should using chart setting as in this example, i.e. series -&gt; errorBars = \"stddev\"</p> <p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>",
			      "aspnet-mvc": "<p>This demo illustrates how you can use Error Bars for ASP.NET MVC Area Chart to show variability of data. The Error bars are specified as part of the Series chart setting and are offered by the following Series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p> <p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a>, <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a> and other. To specify that standard deviation, you should set \"stddev\" as in this demo, i.e. Series -&gt; Area -&gt; ErrorBars(errorBars =&gt; errorBars.Value(\"stddev\"))</p> <p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
		}
      },
      {
        "text": "Binding to remote data",
        "url": "area-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Example of jQuery & HTML5 Kendo UI Area Chart bound to remote data",
            "aspnet-mvc": "Example of ASP.NET MVC Area Chart bound to remote data"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Area Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.",
          "aspnet-mvc": "See how the ASP.NET MVC Area Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
		"description": {
            "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>You can see in this demo how the ASP.NET MVC Area chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
		},
        "group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "area-charts/local-data-binding",
        "title": {
            "kendo-ui": "Kendo UI Area Charts binding to local data example",
            "aspnet-mvc": "ASP.NET MVC Area Charts binding to local data example"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates that Kendo UI HTML5 chart can use existing objects as data points.",
            "aspnet-mvc": "This sample demonstrates how ASP.NET MVC Area Chart can use existing objects as data points."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Area chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the InternetUsers list located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound fields for the Series (series =>{series.Area(model => model.Value)}) and Category Axis (axis => axis.Categories(model => model.Year)) Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p> "
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "area-charts/grouped-data",
        "title": {
            "kendo-ui": "Kendo UI Area Charts | Example of binding to grouped data",
            "aspnet-mvc": "ASP.NET MVC Area Charts | Example of binding to grouped data"
        },
        "meta": {
            "kendo-ui": "With this example you will learn how to bind grouping data to Kendo UI Area Charts.",
            "aspnet-mvc": "With this example you will learn how to bind grouping data to ASP.NET MVC Area Charts."
        },
		"description": {
            "kendo-ui": "<p>The Kendo UI chart can be bound to grouped data using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\"> Kendo UI DataSource</a> as a mediator. To do so you can follow the steps below:</p> <ol> <li>Feed data to the chart via <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\"> Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart items into series</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the &ldquo;close&rdquo; field)</li> <li>Bind the Category Axis to the corresponding field (e.g., the &ldquo;date&rdquo; field)</li> </ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column. &nbsp;Since the &ldquo;symbol&rdquo; field in this example contains three distinct values (&ldquo;1. GOOG (close)&rdquo;, &ldquo;2. AAPL (close)&rdquo; and &ldquo;3. AMZN (close)&rdquo;) the chart will create three series as well.</p>",
			"aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\"> Kendo UI DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\"> Kendo UI DataSource control</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;Symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the &ldquo;Close&rdquo; field): series.Area(model =&gt; model.Close)</li> <li>Bind the Category Axis to the corresponding field (e.g., the &ldquo;Date&rdquo; field): .Categories(model =&gt; model.Date)</li> </ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g., &ldquo;Symbol&rdquo;). &nbsp;Since the &ldquo;Symbol&rdquo; field in this example contains three distinct values (&ldquo;1. GOOG (close)&rdquo;, &ldquo;2. AAPL (close)&rdquo; and &ldquo;3. AMZN (close)&rdquo;) the chart will create three series as well.</p>"
		},
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "area-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "area-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>" 
       },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Bar Charts",
    "name": "bar-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bar-charts/index",
        "title": {
            "kendo-ui": "Demo for Kendo UI Bar Chart",
            "aspnet-mvc": "ASP.NET MVC Bar Charts sample"
        },
        "meta": {
            "kendo-ui": "This example illustrates the basic usage of Kendo UI Bar Chart which enables the user to show customized bar charts.",
            "aspnet-mvc": "In this demo you will see in action the ASP.NET MVC Bar Chart HTMLHelper extension for Kendo UI Bar Charts widget."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>A Bar chart displays data as horizontal or vertical bars whose lengths vary according to their value. You can use a Bar chart to show a comparison between several sets of data (for example, summaries of the unique and total site visitors for certain period).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>A Bar chart displays data as horizontal bars whose lengths vary according to their value. You can use a Bar chart to show a comparison between several sets of data (for example, summaries of the unique and total site visitors for certain period).<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Column chart",
        "url": "bar-charts/column",
        "title": {
            "kendo-ui": "Example of a basic Kendo UI Column Chart control",
            "aspnet-mvc": "Example of a basic ASP.NET MVC Column Chart control"
        },
        "meta": {
            "kendo-ui": "This demo shows how some settings of Kendo UI chart widget can be changed in order to display the bar Chart as a Column chart.",
            "aspnet-mvc": "This demo shows how some settings of ASP.NET MVC chart can be changed in order to display the bar Chart as a Column chart."
        },
		"description": {
            "kendo-ui": "<p>The Column chart visualizes data as vertical bars whose heights vary according to their value. It can be useful for presenting a comparison between several sets of data (e.g., snapshots of data across different points in time like the GDP growth shown in this example).</p> <p>Column charts are very similar to Bar charts, with the only difference that bars&rsquo; orientation is vertical instead of horizontal.</p> <p>You can define the chart series as horizontal via the seriesDefaults-&gt; type -&gt;<strong>= \"column\"</strong></p>",
			"aspnet-mvc": "<p>The Column chart shows data as vertical bars whose heights vary according to their value. It can be useful for showing a comparison between several sets of data (e.g., snapshots of data across different points in time like the GDP growth shown in this example).</p> <p>Column charts are very similar to Bar charts, with the only difference that bars&rsquo; orientation is vertical instead of horizontal.</p> <p>You can define the chart series as horizontal via the Series -&gt; series.<strong>Column</strong> method:<br /> <br /> .Series(series =&gt; series.Column(new double[] { 3.907, 7.943, 7.848, 9.284, 9.263, 9.801, 3.890, 8.238, 9.552, 6.855 }))</p>"
		},
		"group": "Bar Chart Types"
      },
      {
        "text": "Stacked bars",
        "url": "bar-charts/stacked-bar",
        "title": {
            "kendo-ui": "Kendo UI jQuery-powered Stacked Bar Charts | Kendo UI DataViz Demos",
            "aspnet-mvc": "ASP.NET MVC Stacked Bar Charts | UI for ASP.NET MVC demo"
        },
        "meta": {
            "kendo-ui": "This example shows how Kendo UI Bar Charts component supports a stacked bar. The feature of the widget is enabled by setting the stacked property to true.",
            "aspnet-mvc": "This example shows how ASP.NET MVC Bar Chart supports a stacked bar. The feature of the control is enabled by setting the stacked property to true."
        },
		"description": {
            "kendo-ui": "<p>A Stacked bar is a bar divided into subparts to represent cumulative effect, to display money distribution or production against time. You can easily enable the stack feature through the seriesDefaults-&gt; stack chart setting:</p><p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefaults option</a> in the documentation.</p>",
			      "aspnet-mvc": "<p>A Stacked bar is a bar divided into subparts to show cumulative effect, to display money distribution or production against time. You can easily enable the stack feature through the SeriesDefaults -&gt; Bar -&gt; Stack(true) setting:</p> <p>.SeriesDefaults(series =&gt; series.Bar().Stack(true))</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/aspnet-mvc/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
		}
      },
      {
        "text": "Stacked and grouped bars",
        "url": "bar-charts/grouped-stacked-bar",
        "title": {
            "kendo-ui": "Kendo UI Stacked and Grouped Bar Chart Example",
            "aspnet-mvc": "ASP.NET MVC Stacked and Grouped Bar Chart Example"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the implementation of Kendo UI stacked and grouped bars in various data visualization-driven web apps.",
            "aspnet-mvc": "This sample demonstrates the implementation of ASP.NET MVC stacked and grouped bars in various data visualization-driven web apps."
        },
		"description": {
            "kendo-ui": "<p>In general, the data series in a stacked column or bar chart have one stack per category. There are cases in which you might want to arrange your data so that the chart appears to have more than one stack per category, i.e. grouping the stacks.</p> <p>In this demo you can see how to group stacked columns to display the World population compared by age and sex in a specific period of time by setting the series -&gt; stack option, which applies the name of the stack that the series belong to (Male or Female in this sample)</p>",
			      "aspnet-mvc": "<p>Usually, the data series in a stacked column or bar chart have one stack per category. There are scenarios in which you might want to arrange your data so that the chart appears to have more than one stack per category.</p> <p>In this demo, you can see how to group stacked columns to display the World population compared by age and sex in a specific period of time by setting the Stack() method, which sets the name of the stack that the series belong to:</p> <p>series.Column(new int[] { 1100941, 1139797, 1172929, 1184435, 1184654 }).Name(\"0-19\").Stack(\"Female\");</p>"
		}
      },
      {
        "text": "100% Stacked bars",
        "url": "bar-charts/stacked100-bar",
        "title": {
            "kendo-ui": "Kendo UI jQuery-powered 100% Stacked Bar Charts | Kendo UI DataViz Demos",
            "aspnet-mvc": "100% Stacked Bars in Telerik ASP.NET MVC Bar Charts"
        },
        "meta": {
            "kendo-ui": "This example shows how Kendo UI Bar Charts component supports a 100% stacked bar. The feature of the widget is enabled by setting the stack type to '100%'.",
            "aspnet-mvc": "This demo illustrates 100% stacked bars capability in Telerik ASP.NET MVC Bar Charts for Kendo UI jQuery-powered Bar Chart control."
        },
		"description": {
            "kendo-ui": "<p>The Bar chart type supports 100% stacking, where the stacked series values are rescaled in a way they add up to 100%.</p> <p>You can enable the 100% stack feature through the seriesDefaults-&gt; stack -&gt; type chart attribute.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefaults option</a> in the documentation.</p>",
			      "aspnet-mvc": "<p>The Bar chart type supports 100% stacking, where the stacked series value are rescaled such that they add up to 100%.</p> <p>You can enable the 100% stack feature through the SeriesDefaults -&gt; Bar -&gt; Stack(ChartStackType.Stack100) method.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/aspnet-mvc/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
		}
      },
      {
        "text": "100% Stacked and grouped bars",
        "url": "bar-charts/grouped-stacked100-bar",
        "title": {
            "kendo-ui": "Kendo UI 100% Stacked and Grouped Bar Chart Example",
            "aspnet-mvc": "ASP.NET MVC 100% Stacked and Grouped Bar Chart Example"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the implementation of Kendo UI 100% stacked and grouped bars in various data visualization-driven web apps.",
            "aspnet-mvc": "This sample demonstrates the implementation of ASP.NET MVC 100% stacked and grouped bars in various data visualization-driven web apps."
        },
		"description": {
            "kendo-ui": "<p>This example demonstrates the implementation of 100% stacked and grouped bars for the Kendo UI chart.</p> <p>You can enable the 100% stack feature by setting the seriesDefaults -&gt; stack -&gt; type and series -&gt; stack -&gt; group attributes of the chart (the latter are set to Male and Female in this demo).</p>",
			      "aspnet-mvc": "<p>This example demonstrates the implementation of ASP.NET MVC 100% stacked and grouped bars.</p> <p>You can enable the 100% stack feature by setting the first ChartStackType.Stack100 argument of the Series -&gt; Column -&gt; Stack() method, i.e.</p> <p>series.Column(new int[] { 1100941, 1139797, 1172929, 1184435, 1184654 }).Name(\"0-19\").Stack(ChartStackType.Stack100, \"Female\");</p>"
		}
      },
      {
        "text": "Date axis",
        "url": "bar-charts/date-axis",
        "title": {
            "kendo-ui": "Date axis example in Kendo UI jQuery chart control",
            "aspnet-mvc": "Date axis example in ASP.NET MVC Bar chart control"
        },
        "meta": {
            "kendo-ui": "This sample shows how you can configure the base date unit for your date axis in Kendo UI HTML5 business bar chart.",
            "aspnet-mvc": "This sample shows how you can configure the base date unit for your date axis in ASP.NET MVC business bar chart."
        },
		"description": {
            "kendo-ui": "<p>You can scale the date axis of your Kendo UI  Bar Chart to get a better visualization of seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the categoryAxis.baseUnit attribute, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the series -&gt; aggregate chart setting, which takes max, min, sum, avg and count.</li> </ul>",
			"aspnet-mvc": "<p>You can scale the date axis of your ASP.NET MVC Bar Chart to get a better visualization of the seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the CategoryAxis.BaseUnit method, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the Series.Aggregate property, which takes max, min, sum, avg and count.</li> </ul>"
		},
        "group": "Functionality"
      },
      {
        "text": "Logarithmic axis",
        "url": "bar-charts/logarithmic-axis",
        "title": {
            "kendo-ui": "Logarithmic axis sample for Kendo UI Bar Charts",
            "aspnet-mvc": "Logarithmic axis sample for ASP.NET MVC Bar Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how you can use a logarithmic axis for the Kendo UI Bar Chart.",
            "aspnet-mvc": "This demo shows how you can use a logarithmic axis for the ASP.NET MVC Bar Chart."
        },
		"description": {
            "kendo-ui": "<p>Logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. Logarithmic axis is helpful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the Kendo UI Column Chart by setting the valueAxis -&gt; type = \"log\" attribute value.</p>",
			"aspnet-mvc": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the ASP.NET MVC Column Chart by setting the ValueAxis -&gt; Logarithmic() method.</p>"
		}
      },
      {
        "text": "Multi-axis",
        "url": "bar-charts/multiple-axes",
        "title": {
            "kendo-ui": "Example of multiple axes implementation in Kendo UI Bar Chart",
            "aspnet-mvc": "Multi-axis in ASP.NET MVC Bar Charts | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This sample illustrates how you can display a data series, using multiple axes in your business chart, built with Kendo UI HTML5 Bar Chart widget.",
            "aspnet-mvc": "In this demo you will see how multiple axis of Telerik jQuery-powered Bar Charts can be configured in ASP.NET MVC."
        },
		"description": {
            "kendo-ui": "<p>The Telerik Kendo UI Bar chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>km</em>, <em>miles</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has a unique name which is set through the <strong>valueAxis.title</strong>attribute. You can also populate the <strong>categoryAxis.axisCrossingValue</strong> array with values to specify the alignment of the value axes.</p>",
			      "aspnet-mvc": "<p>The Telerik ASP.NET MVC Bar chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>km</em>, <em>miles</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has unique name which is set through the <strong>ValueAxis.Title </strong>method. You can also set the <strong>CategoryAxis.AxisCrossingValue</strong> method to specify the alignment of the value axes.</p>"
		}
      },
      {
        "text": "Plot bands",
        "url": "bar-charts/plotbands",
        "title": {
            "kendo-ui": "Plot Bands example in Kendo UI Bar chart",
            "aspnet-mvc": "Plot Bands example in ASP.NET MVC Bar chart"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates how to add plot bands to your Kendo UI jQuery charts in order to plot data within some borders.",
            "aspnet-mvc": "This sample demonstrates how to add plot bands to your ASP.NET MVC charts in order to plot data within some borders."
        },
		"description": {
            "kendo-ui": "<p>Plot Bands are colored ranges which are used to highlight certain areas in the Kendo UI chart, usually specific thresholds designating whether the data falls under these boundaries or not. You can create them by setting valueAxis-&gt; plotBands values</p> <p>Each Plot Band could be configured independently by specifying the following properties:</p> <ul> <li>From &mdash; the start position of the plot band.</li> <li>To &mdash; the end position of the plot band.</li> <li>Opacity &mdash; the opacity of the plot band.</li> <li>Color &mdash; the color of the plot band.</li> </ul>",
			      "aspnet-mvc": "<p>Plot Bands are colored ranges, which are used to highlight certain areas in the ASP.NET MVC Chart. You can create them by setting:</p> <p>ValueAxis -&gt; PlotBands -&gt; bands.Add().From(10000).To(30000).Color(\"#c00\").Opacity(0.3);</p> <p>Each Plot Band could be configured independently by specifying the following properties:</p> <ul> <li>From &mdash; the start position of the plot band.</li> <li>To &mdash; the end position of the plot band.</li> <li>Opacity &mdash; the opacity of the plot band.</li> <li>Color &mdash; the color of the plot band.</li> </ul>"
		},
        "requiresServer": "true"
      },
      {
        "text": "Error Bars",
        "url": "bar-charts/error-bars",
        "title": {
          "kendo-ui": "Example of using ErrorBars for Kendo UI Bar Chart",
          "aspnet-mvc": "This demo shows how to use ErrorBars for ASP.NET MVC Bar Chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to use ErrorBars for Kendo UI Bar Chart",
          "aspnet-mvc": "Example of using ErrorBars for ASP.NET MVC Bar Chart"
        },
		    "description": {
            "kendo-ui": "<p>The Bar chart component allows you to control the distance between its categories as well as between series points within a category. This can be done through the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.gap\">series.gap</a> and <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.spacing\">series.spacing</a> client-side settings of the chart.</p> <p>In this demo, you can play with the provided GAP and SPACING dropdowns to change the values of the above properties.</p>",
			      "aspnet-mvc": "<p>The Bar chart component allows you to control the distance between its categories as well as between series points within a category. This can be done through the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.gap\">series.gap</a> and <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.spacing\">series.spacing</a> client-side settings of the chart.</p> <p>In this demo, you can play with the provided GAP and SPACING dropdowns to change the values of the above properties.</p>"
		}
      },
      {
        "text": "Pan and zoom",
        "url": "bar-charts/pan-and-zoom",
        "new": "true",
        "title": {
            "kendo-ui": "Pan and zoom in Bar charts | Kendo UI Bar Chart demo"
        },
        "meta": {
            "kendo-ui": "Enable pan and zoom effect in Kendo UI Bar charts. This example demonstrates how to enable pan and zoom for your bar charts."
        },
		"description": {
            "kendo-ui": "<p>This example demonstrates how to show variability of data using the Error Bars feature of the Kendo UI chart. The Error bars are configured via the series -&gt; errorBars setting and are offered for the following series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p><p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a> and <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a>. To specify that standard error should be used, you need to set \"stderr\" as a value.</p><p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>",
			      "aspnet-mvc": "<p>This demo illustrates how to show variability of data using the Error Bars feature of the Telerik MVC Bar Chart. The Error bars are specified as part of the Series setting and are offered by the following Series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p><p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a> and <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a>. To specify that standard error should be used, you need to set \"stderr\" as a value, i.e.</p><p>Series -&gt; Column-&gt; .ErrorBars(errorBars =&gt; errorBars.Value(\"<strong>stderr</strong>\"))</p><p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
		}
      },
      {
        "text": "Gap and spacing",
        "url": "bar-charts/gap-spacing",
        "title": {
            "kendo-ui": "Gap and spacing in Kendo UI Bar Charts | Kendo UI DataViz demo",
            "aspnet-mvc": "Gap and spacing in MVC Bar Charts | UI for ASP.NET MVC demo"
        },
        "meta": {
          "kendo-ui": "With this example, you will be able to take a closer look at gap and spacing in Kendo UI Bar Charts. Set gap and spacing values to play with the demo.",
          "aspnet-mvc": "With this example, you will be able to take a closer look at gap and spacing in ASP.NET MVC Bar Charts. Set gap and spacing values to play with the demo."
        },
		"description": {
            "kendo-ui": "<p>You can implement custom visualizations for the Bar/Column chart legend items, axis titles, labels, markers and series by utilizing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo Drawing API</a>. This can be done by assigning a JavaScript function which creates these custom shapes to the seriesDefaults -&gt; visual attribute of the chart</p> <p>Context information is available through the function argument fields, including <strong>rect</strong> (the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/geometry/rect\">kendo.geometry.Rect</a> that defines where the visual should be rendered) and options (different options depending on the item type).</p> <p>You can read more about it in the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo UI JavaScript API reference</a>.</p>",
			      "aspnet-mvc": "<p>You can implement custom visualizations for the Bar/Column chart legend items, axis titles, labels, markers and series by utilizing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo Drawing API</a>. You can do that by setting a JavaScript function name as a string parameter of the Series <strong>Visual</strong> method:<br /> <br /> SeriesDefaults -&gt; .Column().Visual(\"columnVisual\") or <br /> Series -&gt; series.Column(&hellip;).Visual(\"columnVisual\")</p> <p>Various context information is available through the function argument fields. Such are <strong>rect</strong> (the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/geometry/rect\">kendo.geometry.Rect</a> that defines where the visual should be rendered), createVisual (a function that can be used to get the default visual) and options (different options depending on the item type).</p> <p>You can read more about it in the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo UI JavaScript API reference</a>.</p>"
		}
      },
      {
        "text": "Custom Visuals",
        "url": "bar-charts/visuals",
        "title": {
            "kendo-ui": "Example of using custom visuals for the Kendo UI Bar Chart",
            "aspnet-mvc": "Example of using custom visuals for ASP.NET MVC Bar Chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to use ustom visuals for the Kendo UI Bar Chart",
            "aspnet-mvc": "This demo shows how to use ustom visuals for the ASP.NET MVC Bar Chart"
        },
		"description": {
            "kendo-ui": "<p>The Pan and Zoom features allow you to navigate through and zoom in/out the Telerik Kendo UI Bar Chart. </p> <p>You can enable the pan feature through the pannable setting as well as to lock either the X or Y axis using the nested lock attribute.</p> <p>To enable the zoom set the zoomable configuration option. You can also fine tune the mouse wheel and selection zooming through the available mousewheel and selection nested properties.</p>",
			      "aspnet-mvc": "<p>The Pan and Zoom features allow you to navigate through and zoom in/out the Telerik MVC Bar Chart. </p> <p>You can enable the pan feature through the Pannable setting as well as to lock the either the X or Y axis using the Lock method.</p> <p>To enable the Zoom set the Zoomable configuration option. You can also fine tune the mouse wheel and selection zooming through the available Mousewheel and Selection methods.</p>"
		}
      },
      {
        "text": "Custom pan and zoom",
        "url": "bar-charts/custom-pan-and-zoom",
        "title": {
            "kendo-ui": "Custom Pan and zoom in Bar charts | Kendo UI Bar Chart demo"
        },
        "meta": {
            "kendo-ui": "Achieve pan and zoom effect in Kendo UI Bar charts. This example demonstrates how you can apply pan and zoom to your bar charts."
        },
        "description": {
            "kendo-ui": "<p>In addition to the built-in pan and zoom functionality, the Kendo UI chart supports custom panning and zooming as well. </p> <p>This example represents a custom implementation wiring the drag, dragEnd and zoom events of the chart. The idea is to intercept when these events are raised and fetch the data that has to be visualized in the chart, using a dynamical query by invoking the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#methods-query\">query method</a> of the chart data source. Review the code snippets in the demo for more details.</p>"
        },
        "packages": [
          "!mvc"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "bar-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data demo | Kendo UI HTML5 jQuery Bar Charts",
            "aspnet-mvc": "Binding to remote data demo | ASP.NET MVC Bar Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Bar Charts widget can be bound to remote data to produce high-performance report in your business app.",
            "aspnet-mvc": "This demo shows how ASP.NET MVC Bar Charts can be bound to remote data to produce high-performance report in your business app."
        },
		"description": {
            "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p><p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the Kendo UI Bar chart is bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>You can see in this demo how the ASP.NET MVC Bar chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
		},
        "group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "bar-charts/local-data-binding",
        "title": {
            "kendo-ui": "Local data-binding example | Kendo UI Bar Charts",
            "aspnet-mvc": "Local data-binding example | ASP.NET MVC Bar Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI Bar Charts. Use the demo source code to try the feature of the widget.",
            "aspnet-mvc": "This demo shows how the local data-binding is supported in ASP.NET MVC Bar Charts. Use the demo source code to try the feature of the component."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>You can see in this demo how the ASP.NET MVC Bar chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "bar-charts/grouped-data",
        "title": {
            "kendo-ui": "Grouped data binding demo for Kendo UI HTML5 Bar Charts",
            "aspnet-mvc": "Grouped data binding demo for ASP.NET MVC Bar Charts"
        },
        "meta": {
            "kendo-ui": "This example shows the feature of binding to grouped data in Kendo UI Bar Charts. See the source code to find how to use name templates for the data group.",
            "aspnet-mvc": "This example shows the feature of binding to grouped data in ASP.NET MVC Bar Charts. See the source code to find how to use name templates for the data group."
        },
		"description": {
            "kendo-ui": "<p>The Kendo UI chart can be bound to a grouped data by using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a> as a mediator. To do so follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column in the underlying data which will be the criteria for grouping the chart series items into series (symbol in this example)</li> <li>Bind the series.field setting to the &ldquo;close&rdquo; field in the underlying data source</li> <li>Bind the categoryAxis.field attribute to the \"date\" field in the source</li> </ol> <p> This will result in as many series as the number of distinct values in the column (i.e., DataSource.group.field). For each value there will be chart series in the chart. </p>",
			      "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a>. To do so you can follow the following steps:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">Kendo UI DataSource control</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column in the underlying data which will be the criteria for grouping the chart series items into series: Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the &ldquo;Close&rdquo; field: series.Area(model =&gt; model.Close)</li> <li>Bind the Category Axis to the Date field: .Categories(model =&gt; model.Date)</li> </ol> <p> This will result in as many series as the number of distinct values in the column (i.e., DataSource.group.field). For each value there will be a chart series in the chart. </p>"
		},
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "bar-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "bar-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>" 
       },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Barcode",
    "name": "barcode",
    "pro": "true",
    "spriteCssClass": "barcodeIcon",
    "api": "dataviz/barcode",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/barcode/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/barcode/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/barcode/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/barcode/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/barcode",
       "aspnet-mvc": "aspnet-mvc/barcode",
       "jsp-ui": "jsp/barcode",
       "php-ui": "php/barcode"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/barcode",
       "aspnet-mvc": "aspnet-mvc/barcode",
       "jsp-ui": "jsp/barcode",
       "php-ui": "php/barcode"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "barcode/index",
        "title": {
            "kendo-ui": "Kendo UI Barcode Demo",
            "aspnet-mvc": "ASP.NET MVC Barcode Demo"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the core functionality of Kendo UI Barcode which helps you easily encode data in machine readable format.",
            "aspnet-mvc": "This sample demonstrates the core functionality of ASP.NET MVC Barcode which helps you easily encode data in machine readable format."
        }
      },
      {
        "text": "API",
        "url": "barcode/api",
        "title": {
            "kendo-ui": "Kendo UI Barcode API Demo",
            "aspnet-mvc": "ASP.NET MVC Barcode API Demo"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the different symbologies the Barcode support and the different options that could be set",
            "aspnet-mvc": "This sample demonstrates the different symbologies the ASP.NET MVC Barcode supports and the different options that could be set."
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "MVVM",
        "url": "barcode/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Barcode"
        },
        "meta": {
            "kendo-ui": "Value MVVM binding support in Kendo UI Barcode"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "barcode/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Barcode"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support in Kendo UI Barcode"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Barcodes"
  },
  {
    "text": "Box Plot Charts",
    "name": "box-plot-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBoxPlotIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "box-plot-charts/index",
        "title": {
            "kendo-ui": "Kendo UI HTML5 Box Plot Charts Example",
            "aspnet-mvc": "ASP.NET MVC Box Plot Charts Example"
        },
        "meta": {
            "kendo-ui": "In this demo you will see in action the HTML5 Box Plot Chart control for Kendo UI.",
            "aspnet-mvc": "In this demo you will see in action the ASP.NET MVC Box Plot Chart HTMLHelper extension for Kendo UI Box Plot Charts component."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>The Box Plot chart is useful for comparing distributions between different sets of numerical data. It depicts graphically numerical data by displaying a data distribution summary with six indicators (lower value, first quartile, median, mean, third quartile, upper value) and outliers for each set of data.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
            "aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Box Plot chart is useful for comparing distributions between different sets of numerical data. It depicts graphically numerical data by displaying a data distribution summary with six indicators (lower value, first quartile, median, mean, third quartile, upper value) and outliers for each set of data.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },

      {
        "text": "Binding to remote data",
        "url": "box-plot-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data example | Kendo UI Box Plot Charts",
            "aspnet-mvc": "Binding to remote data example | ASP.NET MVC Box Plot Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI HTML5 Box Plot Charts can be bound to remote data to produce high-performance report in your business app.",
            "aspnet-mvc": "This demo shows how ASP.NET MVC Box Plot Charts can be bound to remote data to produce high-performance report in your business app."
        },
		"description": {
            "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
		},
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "box-plot-charts/local-data-binding",
        "title": {
            "kendo-ui": "Kendo UI jQuery Box Plot Charts binding to local data demo",
            "aspnet-mvc": "ASP.NET MVC Box Plot Charts binding to local data demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI HTML5 Box Plot Charts. Use the demo source code to try the feature of the control.",
            "aspnet-mvc": "This demo shows how the local data-binding is supported in ASP.NET MVC Box Plot Charts. Use the demo source code to try the feature of the control."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Box Plot chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "box-plot-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "box-plot-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>" 
       },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Bubble Charts",
    "name": "bubble-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBubbleIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bubble-charts/index",
        "title": {
            "kendo-ui": "Kendo UI Bubble Charts demo",
            "aspnet-mvc": "ASP.NET MVC Bubble Charts demo"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the basic usage and core features of Kendo UI jQuery & HTML5 Bubble Charts widget.",
            "aspnet-mvc": "This example demonstrates the basic usage and core features of the ASP.NET MVC Bubble Chart control."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>A Bubble chart shows the data as points with coordinates and size defined by their items' values. It is similar to the Scatter chart, in which the data points are replaced with bubbles. This allows a Bubble chart to display three dimensional data — two values for the items' coordinates and one for their size. A Bubble chart is useful for visualizing different scientific relationships (economic, social, etc.). This chart type's x-axis is also numerical and does not require items.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, bubble, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>A Bubble chart shows the data as points with coordinates and size defined by their items' values. It is similar to the Scatter chart, in which the data points are replaced with bubbles. This allows a Bubble chart to display three dimensional data &mdash; two values for the items' coordinates and one for their size. A Bubble chart is useful for visualizing different scientific relationships (economic, social, etc.). This chart type's x-axis is also numerical and does not require items.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "bubble-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data example | Kendo UI Bubble Chart demo",
            "aspnet-mvc": "Binding to remote data example | UI for ASP.NET MVC Bubble Chart"
        },
        "meta": {
            "kendo-ui": "This demo illustrates binding to remote data feature of Kendo UI Bubble Chart for rich HTML5 visualizations.",
            "aspnet-mvc": "This demo illustrates the  binding to remote data feature of ASP.NET MVC Bubble Chart."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p> <p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote service via the DataSource read configuration. You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
		    },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "bubble-charts/local-data-binding",
        "title": {
            "kendo-ui": "Local data binding mode in Kendo UI Bubble chart widget",
            "aspnet-mvc": "Local data binding mode in ASP.NET MVC Bubble chart control"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the powerful Binding to local data feature, supported in Kendo UI Bubble Chart widget.",
            "aspnet-mvc": "This demo illustrates the powerful Binding to local data feature, supported in ASP.NET MVC Bubble Chart component."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Bubble chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "bubble-charts/grouped-data",
        "title": {
            "kendo-ui": "Binding to grouped data example | Kendo UI HTML5 Bubble Charts",
            "aspnet-mvc": "Binding to grouped data example | ASP.NET MVC Bubble Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how to bind Kendo UI Bubble Charts component to grouped data. See how you can implement the feature in your rich web app.",
            "aspnet-mvc": "This demo shows how to bind the ASP.NET MVC Bubble Chart component to grouped data. See how you can implement the feature in your rich web app."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart widget can be bound to grouped data using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a> as a mediator. To do so follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column (e.g., the &ldquo;country&rdquo; field) in the underlying data which will be the criteria for grouping the chart series items into series</li> <li>Bind the xField, yField and sizeField values of the series to the <b>year, standing and number</b> fields</p>",
            "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">Kendo UI DataSource control</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/KENDO-UI/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column (e.g., the &ldquo;Country&rdquo; field) in the underlying data which will be the criteria for grouping the chart series items into series: Group(group =&gt; group.Add(model =&gt; model.Country)</li> <li>Bind the X, Y and Size values of the series to the &ldquo;Year, Standing and Number&rdquo; fields: </li> </ol> <p>series.Bubble(model =&gt; model.Year, model =&gt; model.Standing, model =&gt; model.Number)</p>"
		},
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "bubble-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "bubble-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>" 
       },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Bullet Charts",
    "name": "bullet-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBulletIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bullet-charts/index",
        "title": {
            "kendo-ui": "Bullet Charts Example | Kendo UI JavaScript data visualization components",
            "aspnet-mvc": "Basic usage of Telerik ASP.NET MVC Bullet Charts"
        },
        "meta": {
            "kendo-ui": "Kendo UI jQuery-based Bullet Charts provide a rich data visualization. In this basic usage demo we will create a horizontal Kendo UI Bullet Chart.",
            "aspnet-mvc": "This sample demonstrates how to use the ASP.NET MVC helper for Kendo UI bullet graph, powered by HTML5 and jQuery."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>In this demo, you can see how to configure a Bullet chart, which is a variation of a bar chart. You can use it as a replacement for dashboard gauges and meters. The bullet graph compares a given quantitative measure (such as temperature) against qualitative ranges (e.g. warm, hot, mild, cool, chilly, cold, freezing, icy, frosty) and a symbol marker that encodes the comparative measure (for example the max temperature a year ago).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this demo, you can see how to configure a Bullet chart, which is a variation of a <a href=\"http://demos.telerik.com/aspnet-mvc/bar-charts/index\">bar chart</a>. You can use it as a replacement for dashboard gauges and meters. The bullet graph compares a given quantitative measure (such as temperature) against qualitative ranges (e.g. warm, hot, mild, cool, chilly, cold, freezing, icy, frosty) and a symbol marker that encodes the comparative measure (for example the max temperature a year ago).<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong>Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "bullet-charts/local-data-binding",
        "title": {
            "kendo-ui": "Local Data Binding in Bullet Charts | Kendo UI Bullet charts demo",
            "aspnet-mvc": "Local Data Binding in ASP.NET MVC Bullet Charts demo"
        },
        "meta": {
            "kendo-ui": "In this example we will bind local data to the Kendo UI Bullet Chart in order to show the behavior of the component.",
            "aspnet-mvc": "In this example we will bind local data to the ASP.NET MVC Bullet Chart in order to show the behavior of the component."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Bullet chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways for databinding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "bullet-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding Kendo UI Bullet Chart to remote data",
            "aspnet-mvc": "Binding ASP.NET MVC Bullet Chart to remote data"
        },
        "meta": {
            "kendo-ui": "This online demo will show you how to bind a Kendo UI Bullet Chart to remote data.",
            "aspnet-mvc": "This online demo will show you how to bind ASP.NET MVC Bullet Chart to remote data."
        },
        "description": {
            "kendo-ui": "<p>The Telerik Kendo UI Chart supports binding to remote data via RESTful services.</p><p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
		},
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "bullet-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "bullet-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>" 
       },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Chart API",
    "name": "chart-api",
    "pro": "true",
    "api": "dataviz/chart",
    "spriteCssClass": "chartIcon",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "items": [
      {
        "text": "Methods",
        "url": "chart-api/index",
        "title": {
            "kendo-ui": "Kendo UI Charts API methods",
            "aspnet-mvc": "Charting API methods for ASP.NET MVC and jQuery "
        },
        "meta": {
            "kendo-ui": "This demo shows how the API manipulates the methods, applicable to Kendo UI jQuery-based chart components.",
            "aspnet-mvc": "Play with this demo and explore all API functions of Telerik Charting control for ASP.NET MVC."
        },
		"description": {
            "kendo-ui": "<p>This example illustrates how to get reference to the Kendo UI Chart and its series client-side objects, which allows you to customize series options like type, appearance, stacking and many more:</p> <ul> <li>Get reference to the Kendo UI Chart client-side object: var chart = $(\"#chart\").data(\"kendoChart\");</li> <li>Get reference to the series client object: series = chart.options.series,</li> <li>Set the series type: series[i].type = type;</li> <li>Stack the series: series[i].stack = stack;</li> </ul> <p>You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the API documentation</a>.</p>",
			      "aspnet-mvc": "<p>This demo shows how to get reference to the Kendo Chart and its series client-side objects, which allows you to customize series options like type, appearance, stacking and many more:</p> <ul> <li>Get reference to the Kendo UI Chart client-side object: var chart = $(\"#chart\").data(\"kendoChart\");</li> <li>Get reference to the series client object: series = chart.options.series,</li> <li>Set the series type: series[i].type = type;</li> <li>Stack the series: series[i].stack = stack;</li> </ul> <p>You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the control&rsquo;s API documentation</a>.</p>"
		}
      },
      {
        "text": "Events",
        "url": "chart-api/events",
        "title": {
            "kendo-ui": "Events API for Kendo UI HTML5 charting components | Kendo UI Demos",
            "aspnet-mvc": "Chart API events in ASP.NET MVC | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the events which are specific to Kendo UI HTML5 chart components.",
            "aspnet-mvc": "This demo illustrates the use of Telerik ASP.NET MVC API events."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI Chart exposes many client-side events that allow easy and flexible use in a wide range of application scenarios:</p> <ul> <li>seriesClick</li> <li>seriesHover</li> <li>dataBound</li> <li>axisLabelClick</li> <li>plotAreaClick</li> <li>render</li> <li>legendItemClick</li> <li>legendItemHover</li> <li>DragStart</li> <li>drag</li> <li>dragEnd</li> <li>zoomStart</li> <li>zoom</li> <li>zoomEnd</li> </ul>",
			      "aspnet-mvc": "<p>The Chart exposes through its Events attribute many client-side events that allow easy and flexible use in a wide range of application scenarios:</p> <ul> <li>.SeriesClick()</li> <li>.SeriesHover()</li> <li>.DataBound()</li> <li>.AxisLabelClick()</li> <li>.PlotAreaClick()</li> <li>.Render()</li> <li>.LegendItemClick()</li> <li>.LegendItemHover()</li> <li>.DragStart()</li> <li>.Drag()</li> <li>.DragEnd()</li> <li>.ZoomStart()</li> <li>.Zoom()</li> <li>.ZoomEnd()</li> </ul>"
		},
        "requiresServer": "true"
      },
      {
        "text": "PDF Export",
        "url": "chart-api/pdf-export",
        "title": {
            "kendo-ui": "Kendo UI Chart saveAsPDF API method"
        },
        "meta": {
            "kendo-ui": "This demo shows how to save the chart as PDF directly in the browser.",
			"aspnet-mvc": "This example demonstrates how to save the chart contents to PDF directly in your browser"
        },
        "description": {
            "kendo-ui": "<p>This example demonstrates how to configure the pdf export settings of the Telerik Kendo UI chart widget. </p> <p>You can specify the Author, Creator, Date, FileName, AllPages, PaperSize, ProxyURL and other options, through the <strong>pdf</strong> attribute of the chart.</p> <p>The <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-saveAsPDF\">saveAsPDF</a>or <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a> methods can be used to trigger export operation.</p>",
            "aspnet-mvc": "<p>This example shows how to configure the PDF export settings of the Telerik MVC Charting helper. </p> <p>You can specify the Author, Creator, Date, FileName, AllPages, PaperSize, ProxyURL and other options, through the <strong>PDF</strong> property of the Chart helper.</p> <p>The <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid?#methods-saveAsPDF\">saveAsPDF</a> client-side method initiates the PDF export and triggers the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid?#events-pdfExport\">pdfExport</a> event.</p>"
        }
      },
      {
        "text": "Advanced Export",
        "url": "chart-api/export",
        "title": {
            "kendo-ui": "Kendo UI Charts Export API methods"
        },
        "meta": {
            "kendo-ui": "This demo shows how to export charts to PDF, PNG Images or SVG and save them directly in the browser."
        },
        "description": {
            "kendo-ui": "<p>This demo presents how to export charts to PDF, PNG Images or SVG and save the produced files directly in the browser. You can do that by getting a reference to the chart&rsquo;s client-side object<br /> <br /> var chart = $(\"#chart\").getKendoChart();<br /> <br /> and firing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a>, <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportImage\">exportImage</a> and <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportSVG\">exportSVG</a> methods. Use the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/kendo#methods-saveAs\">kendo.saveAs</a> method to save the result and specify the file name.</p>",
            "aspnet-mvc": "<p>This example demonstrates how to export charts to PDF, PNG Images or SVG and save the produced files directly in the browser. You can do that by getting a reference to the chart&rsquo;s client-side object<br /> <br /> var chart = $(\"#chart\").getKendoChart();<br /> <br /> and firing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a>, <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportImage\">exportImage</a> and <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportSVG\">exportSVG</a> methods. Use the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/kendo#methods-saveAs\">kendo.saveAs</a> method to save the result and specify the file name.</p>"
        }
      },
      {
        "text": "Selection",
        "url": "chart-api/selection",
        "title": {
            "kendo-ui": "Axis selection in Kendo UI charting components | Kendo UI Demo",
            "aspnet-mvc": "ASP.NET MVC Chart API Selection Demo"
        },
        "meta": {
            "kendo-ui": "Take a look at this example that illustrates how to configure the axis selection in Kendo UI HTML5-powered charting widgets.",
            "aspnet-mvc": "In this demo you will see how the API is used for a selection in Telerik ASP.NET MVC Chart."
        },
        "description": {
            "kendo-ui": "<p>This example demonstrates how to configure the axis selection in the Telerik Kendo UI chart through the exposed selectStart, select and selectEnd chart events as well as the zoom and reverse attributes of the categoryAxis -&gt; select -&gt; mousewheel settings.</p>",
            "aspnet-mvc": "<p>This demo illustrates how to configure on the client the axis selection in the Telerik MVC Chart through the exposed Events -&gt; SelectStart, Select and SelectEnd chart events as well as the zoom and reverse attributes of the categoryAxis -&gt; select -&gt; mousewheel settings.</p>"
        }
      },
      {
        "text": "Benchmark",
        "description": {
            "kendo-ui": "<p>The purpose of this demo is to provide a benchmark for live Kendo UI chart updates, using multiple chart series and reflecting the frames per second/milliseconds per frame needed to render the chart in different browsers. You also have the option to choose between SVG (default) and Canvas rendering for the chart and compare the results in each of these supported rendering modes.</p>"
        },
        "packages": [
          "!mvc"
        ],
        "url": "chart-api/benchmark"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Donut Charts",
    "name": "donut-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartDonutIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "donut-charts/index",
        "title": {
            "kendo-ui": "Example of Kendo UI Donut Charts",
            "aspnet-mvc": "ASP.NET MVC Donut charts sample | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "This demo shows the core functionality of Kendo UI jQuery Donut Charts which visualize the breakdown of data into its elements.",
            "aspnet-mvc": "In this demo we show how Telerik jQuery-powered Donut charts can be implemented in ASP.NET MVC."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>In this demo, you can learn how to register and configure a Donut chart, which displays data as sectors from a circle. The Donut chart is a Pie chart variation with ability to display single series of data in a two-dimensional circle. It is useful for displaying data as parts of a whole.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this demo, you can learn how to register and configure a Donut chart, which displays data as sectors from a circle. The Donut chart is a Pie chart variation with ability to display single series of data in a two-dimensional circle. It is useful for displaying data as parts of a whole.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong>Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Donut labels",
        "url": "donut-charts/donut-labels",
        "title": {
            "kendo-ui": "Configuration of donut labels in Kendo UI Donut charts",
            "aspnet-mvc": "Configuration of donut labels in ASP.NET MVC Donut charts"
        },
        "meta": {
            "kendo-ui": "This example shows how to configure the values of Kendo UI jQuery Donut Charts, enable/disable donut labels and specify how they are aligned to the chart.",
            "aspnet-mvc": "This example shows how to configure the values of ASP.NET MVC Donut Charts, enable/disable donut labels and specify how they are aligned to the chart."
        },
        "description": {
            "kendo-ui": "<p>This sample illustrates how to show/hide the labels of the Kendo UI Donut Chart and specify how they are aligned.</p> <p>You can do that by getting a reference to the chart client-object via:</p> <p>var chart = $(\"#chart\").data(\"kendoChart\")</p> <p>which will allow you to set and configure its series collection and attributes:<br /> <br /> var pieSeries = chart.options.series[0];<br /> pieSeries.labels.visible = true|false; // If set to true the chart will display the series labels.<br /> pieSeries.labels.align = \"circle\"; // \"circle\" - the labels are positioned in circle around the chart.</p> <p>You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the API documentation</a>.</p>",
            "aspnet-mvc": "<p>This example shows how to show/hide the labels of the ASP.NET MVC Donut Chart and specify how they are aligned.</p> <p>You can do that by getting a reference to the Chart client-object via:</p> <p>var chart = $(\"#chart\").data(\"kendoChart\")</p> <p>which will allow you to set and configure its series collection and attributes:<br /> <br /> var pieSeries = chart.options.series[0];<br /> pieSeries.labels.visible = true|false; // If set to true the chart will display the series labels.<br /> pieSeries.labels.align = \"circle\"; // \"circle\" - the labels are positioned in circle around the chart.\"column\" - the labels are positioned in columns to the left and right of the chart.</p> <p>You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the control&rsquo;s API documentation</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "donut-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data demo for Kendo UI Donut Charts",
            "aspnet-mvc": "Remote data binding in ASP.NET MVC Donut Charts"
        },
        "meta": {
            "kendo-ui": "This example shows how to bind Kendo UI Donut Charts to remote data.",
            "aspnet-mvc": "In this example you will see the remote data binding functionality of Telerik Grid for ASP.NET MVC."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p> <p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "donut-charts/local-data-binding",
        "title": {
            "kendo-ui": "Local data binding in Kendo UI Donut Charts",
            "aspnet-mvc": "Binding ASP.NET Donut charts to local data"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI donut chart can be bound to local data to deliver high-performance business application.",
            "aspnet-mvc": "This example demonstrates the binding to local data feature in Telerik ASP.NET MVC Donut charts."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Donut chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the SpainElectricityBreakdown enumerator located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound Percentage, Source and Explode fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "donut-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "donut-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>" 
       },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Funnel Charts",
    "name": "funnel-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartFunnelIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "funnel-charts/index",
        "title": {
            "kendo-ui": "Example of Kendo UI Funnel Charts",
            "aspnet-mvc": "Example of ASP.NET MVC Funnel Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows the core functionality of Kendo UI jQuery Funnel Charts which visualize the breakdown of data into its elements.",
            "aspnet-mvc": "This demo shows the core functionality of ASP.NET MVC Funnel Charts which visualize the breakdown of data into its elements."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>This example illustrates how to register and configure a Funnel Chart. A Funnel chart displays a single series of data in progressively decreasing or increasing proportions, organized in segments, where each segment represents the value for the particular item from the series. The items' values can also influence the height and the shape of the corresponding segments.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This example illustrates how to register and configure a Funnel Chart. A Funnel chart displays a single series of data in progressively decreasing or increasing proportions, organized in segments, where each segment represents the value for the particular item from the series. The items' values can also influence the height and the shape of the corresponding segments.</p> <p>Funnel charts are usually used to represent stages in a sales process (e.g., show the amount of potential revenue for each stage); identify a potential problematic areas in any company's process; visualize website visitors trends and other.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Funnel labels",
        "url": "funnel-charts/funnel-labels",
        "title": {
            "kendo-ui": "Configuration of Funnel labels in Kendo UI funnel charts",
            "aspnet-mvc": "Configuration of Funnel labels in ASP.NET MVC funnel charts"
        },
        "meta": {
            "kendo-ui": "This example shows how to configure the values of Kendo UI jQuery Funnel Charts, enable/disable funnel labels and specify how they are aligned to the chart.",
            "aspnet-mvc": "This example shows how to configure the values of ASP.NET MVC Funnel Charts, enable/disable funnel labels and specify how they are aligned to the chart."
        },
        "description": {
            "kendo-ui": "<p>This example demonstrates  how to configure the labels of the Kendo UI funnel chart. You can specify their properties for visibility, position and alignment, font color, size and so on through the seriesDefaults -&gt; labels setting:</p> <ul> <li>visible</li> <li>position </li><li>align</li> <li>font</li><li>etc.</li> </ul>",
            "aspnet-mvc": "<p>You can see in this demo how to configure the labels of the MVC funnel chart. You can specify their properties for visibility, position and alignment, font color and size and so on through the SeriesDefaults -&gt; Funnel -&gt; Labels setting:</p> <ul> <li>Visibility: Labels -&gt; Visible</li> <li>Position and Alignment: Labels -&gt; Position and Labels -&gt; Alight </li> <li>Font color and size: Labels -&gt; Color and Labels -&gt; Font</li> </ul>"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "funnel-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data demo for Kendo UI Funnel Charts",
            "aspnet-mvc": "Binding to remote data demo for ASP.NET MVC Funnel Charts"
        },
        "meta": {
            "kendo-ui": "This example shows how to bind Kendo UI Funnel Charts to remote data.",
            "aspnet-mvc": "This example shows how to bind ASP.NET MVC Funnel Charts to remote data."
        },
        "description": {
            "kendo-ui": "<p>The Telerik Kendo UI chart supports binding to remote data via RESTful services.</p><p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "funnel-charts/local-data-binding",
        "title": {
            "kendo-ui": "Local data binding in Kendo UI Funnel Charts",
            "aspnet-mvc": "Local data binding in ASP.NET MVC Funnel Charts"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI funnel Charts widget can be bound to local data to deliver high-performance business application.",
            "aspnet-mvc": "This demo illustrates how ASP.NET MVC funnel Chart control can be bound to local data to deliver a high-performance business application."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			      "aspnet-mvc": "<p>The Telerik MVC Funnel chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways for databinding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "funnel-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "funnel-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>" 
       },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Linear Gauge",
    "name": "linear-gauge",
    "pro": "true",
    "spriteCssClass": "gaugeLinearIcon",
    "api": "dataviz/lineargauge",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/lineargauge/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/lineargauge/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/lineargauge/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/lineargauge/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/gauges",
       "aspnet-mvc": "aspnet-mvc/gauge",
       "jsp-ui": "jsp/gauge",
       "php-ui": "php/gauge"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/gauges",
       "aspnet-mvc": "aspnet-mvc/gauge",
       "jsp-ui": "jsp/gauge",
       "php-ui": "php/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "linear-gauge/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery-powered Linear Gauge Example",
            "aspnet-mvc": "ASP.NET MVC Linear Gauge Example"
        },
        "meta": {
            "kendo-ui": "This example shows how you can easily implement Kendo UI Linear Gauge in your HTML5 web application. Draw end users attention to a certain range of values.",
            "aspnet-mvc": "This example shows how you can easily implement ASP.NET MVC Linear Gauge in your MVC web application. Draw end users attention to a certain range of values."
        }
      },
      {
        "text": "Scale options",
        "url": "linear-gauge/scale-options",
        "title": {
            "kendo-ui": "Scale customization example for Kendo UI Linear Gauge",
            "aspnet-mvc": "Scale customization example for ASP.NET MVC Linear Gauge"
        },
        "meta": {
            "kendo-ui": "This sample illustrates how you can customize Kendo UI Linear Gauge by changing the location of the gauge scale and its appearance.",
            "aspnet-mvc": "This sample illustrates how you can customize ASP.NET MVC Linear Gauge by changing the location of the gauge scale and its appearance."
        }
      },
      {
        "text": "Multiple pointers",
        "url": "linear-gauge/multiple-pointers",
        "title": {
            "kendo-ui": "Kendo UI Linear Gauge multiple pointers demo",
            "aspnet-mvc": "ASP.NET MVC Linear Gauge multiple pointers demo"
        },
        "meta": {
            "kendo-ui": "This example shows how easily you can configure the Linear gauge to use multiple pointers.",
            "aspnet-mvc": "This example shows how easily you can configure the ASP.NET MVC Linear gauge to use multiple pointers."
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "linear-gauge/export",
        "title": {
            "kendo-ui": "Kendo UI Linear Gauge export demo",
            "aspnet-mvc": "ASP.NET MVC Linear Gauge export demo"
        },
        "meta": {
            "kendo-ui": "This example shows how easily you can export the linear gauge to PDF, Image and SVG.",
            "aspnet-mvc": "This example shows how easily you can export the ASP.NET MVC linear gauge to PDF, Image and SVG."
        }
      },
      {
        "text": "MVVM",
        "url": "linear-gauge/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Linear Gauge"
        },
        "meta": {
            "kendo-ui": "Value and visible MVVM binding support in Kendo UI Linear Gauge"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "linear-gauge/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Linear Gauge"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Linear Gauge"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Radial Gauge",
    "name": "radial-gauge",
    "pro": "true",
    "spriteCssClass": "gaugeRadialIcon",
    "api": "dataviz/radialgauge",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/radialgauge/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/radialgauge/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/radialgauge/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/radialgauge/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/gauges",
       "aspnet-mvc": "aspnet-mvc/gauge",
       "jsp-ui": "jsp/gauge",
       "php-ui": "php/gauge"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/gauges",
       "aspnet-mvc": "aspnet-mvc/gauge",
       "jsp-ui": "jsp/gauge",
       "php-ui": "php/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "radial-gauge/index",
        "title": {
            "kendo-ui": "Demo for core features in Kendo UI Radial Gauge widget",
            "aspnet-mvc": "Demo for core features in ASP.NET MVC Radial Gauge control"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the core functionality of Kendo UI Radial Gauge which helps you easily visualize an indicator within a range of values.",
            "aspnet-mvc": "This sample demonstrates the core functionality of ASP.NET MVC Radial Gauge which helps you easily visualize an indicator within a range of values."
        }
      },
      {
        "text": "Scale options",
        "url": "radial-gauge/scale-options",
        "title": {
            "kendo-ui": "Kendo UI Radial Gauge scale customization demo",
            "aspnet-mvc": "ASP.NET MVC Radial Gauge scale customization demo"
        },
        "meta": {
            "kendo-ui": "This example shows how you can easily use simple options to configure the gauge, enable/disable scale ranges and gauge labels.",
            "aspnet-mvc": "This example shows how you can easily use simple options to configure the ASP.NET MVC radial gauge, enable/disable scale ranges and gauge labels."
        }
      },
      {
        "text": "Multiple pointers",
        "url": "radial-gauge/multiple-pointers",
        "title": {
            "kendo-ui": "Kendo UI Radial Gauge multiple pointers demo",
            "aspnet-mvc": "ASP.NET MVC Radial Gauge multiple pointers demo"
        },
        "meta": {
            "kendo-ui": "This example shows how easily you can configure the radial gauge to use multiple pointers.",
            "aspnet-mvc": "This example shows how easily you can configure the ASP.NET MVC radial gauge to use multiple pointers."
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "radial-gauge/export",
        "title": {
            "kendo-ui": "Kendo UI Radial Gauge export demo",
            "aspnet-mvc": "ASP.NET MVC Radial Gauge export demo"
        },
        "meta": {
            "kendo-ui": "This example shows how easily you can export the radial gauge to PDF, Image and SVG.",
            "aspnet-mvc": "This example shows how easily you can export the ASP.NET MVC radial gauge to PDF, Image and SVG."
        }
      },
      {
        "text": "MVVM",
        "url": "radial-gauge/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Radial Gauge"
        },
        "meta": {
            "kendo-ui": "Value and visible MVVM binding support in Kendo UI Radial Gauge"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "radial-gauge/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Radial Gauge"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Radial Gauge"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Car Dashboard",
        "url": "radial-gauge/car-dashboard",
        "title": {
            "kendo-ui": "Sample car dashboard, built with Kendo UI DataViz components"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the use of Kendo UI Gauges"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Line Charts",
    "name": "line-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartLineIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "line-charts/index",
        "title": {
            "kendo-ui": "Kendo UI Line Charts Demo",
            "aspnet-mvc": " ASP.NET MVC Line Charts Control demo"
        },
        "meta": {
            "kendo-ui": "This example illustrates the features and core functionality of Kendo UI Line Charts component. HTML5 line graphs show trends over a specific time period.",
            "aspnet-mvc": "This demo illustrates how you can use Telerik ASP.NET MVC Line Charts helper to show trends for several series on the same diagram & visualize them as lines."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this example, you can see how to register and configure a Line chart. A Line chart shows data as continuous lines that pass through points defined by their items' values. It can be useful for showing a trend over time and comparing several (four in this demo) sets of similar data.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul><li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Stacked line",
        "url": "line-charts/stacked-line",
        "title": {
            "kendo-ui": "Kendo UI Stacked Line Charts Demo",
            "aspnet-mvc": "ASP.NET MVC Stacked Line Charts Demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how you can easily implement Kendo UI Stacked Line Charts in your business webapp.",
            "aspnet-mvc": "This demo shows how you can easily implement ASP.NET MVC Stacked Line Charts in your business webapp."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This demo shows how to configure a Stacked line chart. To enable the stack feature set true as an argument of the the SeriesDefaults -&gt; Bar -&gt; Stack(true) method:</p> <p>.SeriesDefaults(series =&gt; series.Line().Stack(true))</p> <p>You can also divide the line chart on two parts, by setting:</p> <p>.MissingValues(ChartLineMissingValues.Gap)</p> <p>And having <strong>null</strong> data value entries in the series data, which will be used as a divider.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/aspnet-mvc/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        },
        "group": "Line Chart Types"
      },
      {
        "text": "100% Stacked line",
        "url": "line-charts/stacked100-line",
        "title": {
            "kendo-ui": "Kendo UI 100% Stacked Line Charts Demo",
            "aspnet-mvc": "100% stacked line example in Telerik ASP.NET MVC Line charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how you can easily implement Kendo UI 100% Stacked Line Charts in your business webapp.",
            "aspnet-mvc": "This example illustrates how to implement 100% stacked line in Telerik line charts for ASP.NET MVC."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Line chart supports 100% stacking, where the last series is always rendered as a flat line on top of the value axis.</p> <p>You can enable the 100% stack feature through the SeriesDefaults -&gt; Line -&gt; Stack(ChartStackType.Stack100) method.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/aspnet-mvc/kendo.mvc.ui.fluent/chartbuilder#methods-SeriesDefaults%28System.Action%3CKendo.Mvc.UI.Fluent.ChartSeriesDefaultsBuilder%3CT%3E%3E%29\">SeriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "Steped line",
        "url": "line-charts/step-line",
        "title": {
            "kendo-ui": "Example of using Kendo UI Line Chart with step line style",
            "aspnet-mvc": "Steped line demo for Telerik ASP.NET MVC Line Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure step line style for the Kendo UI Line Chart",
            "aspnet-mvc": "This demo shows how to configure step line style for Telerik jQuery-based Line Charts in ASP.NET MVC."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Stepped Line chart is a form of Line chart where each data point from the series is connected with vertical and horizontal lines to form a step-like progression. This type of line visualization is useful when you want to highlight the increase or decrease in values over time.</p> <p>You can configure a stepped area chart through the Series -&gt; Line -&gt; Style(ChartAreaStyle.<strong>Step</strong>) settings of the MVC Chart.</p>"
        }
      },
      {
        "text": "Smooth line",
        "url": "line-charts/smooth-line",
        "title": {
            "kendo-ui": "Example of using Kendo UI Line Chart with smooth line (spline) style",
            "aspnet-mvc": "ASP.NET MVC Smooth Line Charts for Kendo UI Line chart widget"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure smooth line (spline) style for the Kendo UI Line Chart",
            "aspnet-mvc": "In this demo you will figure out how to configure smooth line (spline) style chart in ASP.NET MVC."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This demo shows how to configure smooth line (spline) style for the Telerik MVC Line chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth line area chart through the Series -&gt; Line -&gt; Style(ChartLineStyle.Smooth) settings of the ASP.NET MVC Chart.</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "line-charts/date-axis",
        "title": {
            "kendo-ui": "Example of Kendo UI HTML5 Line Charts Date Axis",
            "aspnet-mvc": "Date axis in ASP.NET MVC Line Charts"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the date axis in Kendo UI Line Charts can be easily changed by setting the configuration and specifying the aggregate function value.",
            "aspnet-mvc": "This example shows how date axis functionality works in Telerik Line Charts for ASP.NET MVC."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>You can scale the date axis of your ASP.NET MVC Line Chart to get a better visualization of the seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the CategoryAxis.BaseUnit property, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the Series.Aggregate property, which takes max, min, sum, avg and count.</li> </ul>"
        },
        "group": "Functionality"
      },
      {
        "text": "Logarithmic axis",
        "url": "line-charts/logarithmic-axis",
        "title": {
            "kendo-ui": "Logarithmic axis sample for Kendo UI Line Charts",
            "aspnet-mvc": "Logarithmic axis sample for ASP.NET MVC Line Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how you can use a logarithmic axis for the Kendo UI Line Chart.",
            "aspnet-mvc": "This demo shows how you can use a logarithmic axis for the ASP.NET MVC Line Chart."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the ASP.NET MVC Line Chart by setting the ValueAxis -&gt; Logarithmic() method. The base of the logarithmic axis is defined by the interval between the major divisions, controlled by the MajorUnit property.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Multi-axis",
        "url": "line-charts/multiple-axes",
        "title": {
            "kendo-ui": "Multi-axes feature example | Kendo UI Line Charts widget",
            "aspnet-mvc": "Multi-axes feature example | ASP.NET MVC Line Charts control"
        },
        "meta": {
            "kendo-ui": "This demo shows how easily Kendo UI Line Charts can be customized to achieve what you want in your app. Apply multiple axes to your Kendo UI Line Charts.",
            "aspnet-mvc": "This demo shows how easily ASP.NET MVC Line Charts can be customized to achieve what you want in your app. Apply multiple axes to your ASP.NET MVC Line Charts."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik ASP.NET MVC Line chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example shows a weather report and includes information for the: <em>max and min temperatures, wind speed and rainfall in mm</em>. Note that each of them has unique name which is set through the <strong>ValueAxis.Title </strong>method. You can also set the <strong>CategoryAxis.AxisCrossingValue</strong> method to specify the alignment of the value axes.</p>"
        }
      },
      {
        "text": "Notes",
        "url": "line-charts/notes",
        "title": {
            "kendo-ui": "Notes feature example | Kendo UI Line Charts widget",
            "aspnet-mvc": "Notes feature example | ASP.NET MVC Line Charts Control"
        },
        "meta": {
            "kendo-ui": "This demo shows how to place annotations in your Kendo UI Charts.",
            "aspnet-mvc": "This demo illustrates how you can use Telerik ASP.NET MVC Line Charts helper to show trends for several series on the same diagram & visualize them as lines."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>In this demo, you can see how to add notes for the Min and Max values of the Line chart.</p> <p>To do that you need to set the Series -&gt; Line -&gt; Notes -&gt; Label setting which will also allow you to specify the note and its label positions.</p>"
        }
      },
      {
        "text": "Error Bars",
        "url": "line-charts/error-bars",
        "title": {
            "kendo-ui": "Example of using ErrorBars for Kendo UI Line Chart",
            "aspnet-mvc": "Example of using ErrorBars for ASP.NET MVC Line Chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to use ErrorBars for Kendo UI Line Chart",
            "aspnet-mvc": "This demo shows how to use ErrorBars for ASP.NET MVC Line Chart"
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This demo illustrates how to show variability of data using the Error Bars feature of the Telerik MVC Line Chart. The Error bars are specified as part of the Series setting and are offered by the following Series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p> <p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars#setting-a-percentage-value\">percentage value</a>, <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a> and <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a> and other. To specify that percentage error should be used, you need to set \"percentage(Int)\" as a value, i.e.</p><p>.ErrorBars(errorBars =&gt; errorBars.Value(\"percentage(20\"))</p><p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
        }
      },
      {
        "text": "Custom Visuals",
        "url": "line-charts/visuals",
        "title": {
            "kendo-ui": "Example of using custom visuals for the Kendo UI Line Chart",
            "aspnet-mvc": "Example of using custom visuals for ASP.NET MVC Line Chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to use ustom visuals for the Kendo UI Line Chart",
            "aspnet-mvc": "This demo shows how to use ustom visuals for the ASP.NET MVC Line Chart"
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>You can implement custom visualizations for the Line chart markers and highlights by utilizing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo Drawing API</a>. You can do that by setting a JavaScript function name as a string parameter of the Series:</p> <ul> <li>Markers -&gt; Visual method: .Markers(markers =&gt; markers.Visual(\"markerVisual\"))</li> <li>Highlight -&gt; Toggle method -&gt; .Highlight(highlight =&gt; highlight.Toggle(\"toggleHandler\")); </li> </ul> <p>Various context information is available through the function argument fields. Such are <strong>rect</strong> (the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/geometry/rect\">kendo.geometry.Rect</a> that defines where the visual should be rendered), createVisual (a function that can be used to get the default visual) and options (different options depending on the item type).</p> <p>You can read more about it in the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo UI JavaScript API reference</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "line-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data example | Kendo UI Line Charts features",
            "aspnet-mvc": "Binding to remote data - Telerik ASP.NET MVC Line Charts demo"
        },
        "meta": {
          "kendo-ui": "This example illustrates how binding to remote data works in Kendo UI Line Charts and the demo source code would guide you how to apply it to your line chart.",
          "aspnet-mvc": "This example demonstrates how Telerik ASP.NET MVC Line charts can be bound to remote data source."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        },
		"group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "line-charts/local-data-binding",
        "title": {
            "kendo-ui": "Binding to local data example | Kendo UI Line Charts",
            "aspnet-mvc": "Binding to local data example | ASP.NET MVC Line Charts"
        },
        "meta": {
            "kendo-ui": "This example illustrates how Kendo UI Line Charts use existing objects as data points.",
            "aspnet-mvc": "This example illustrates how ASP.NET MVC Line Charts use existing objects as data points."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Line chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the InternetUsers list located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound fields for the Series (series =>{series.Area(model => model.Value)}) and Category Axis (axis => axis.Categories(model => model.Year)) Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "line-charts/grouped-data",
        "title": {
            "kendo-ui": "Binding to grouped data demo | Kendo UI Line Charts",
            "aspnet-mvc": "Binding to grouped data demo | ASP.NET MVC Line Charts"
        },
        "meta": {
            "kendo-ui": "This example illustrates how binding to grouped data feature works in Kendo UI Line Charts.",
            "aspnet-mvc": "This example illustrates how binding to grouped data feature works in ASP.NET MVC Line Charts."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\">Kendo UI DataSource control</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;Symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the \"Close\" field): series.Area(model =&gt; model.Close)</li> <li>Bind the Category Axis to the corresponding field (e.g., the \"Date\" field): .Categories(model =&gt; model.Date)</li> </ol> <p> This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g., \"Symbol\"). &nbsp;Since the &ldquo;Symbol&rdquo; field in this example contains three distinct values (\"1. GOOG (close)\", \"2. AAPL (close)\" and \"3. AMZN (close)\") the chart will create three series as well.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "line-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "line-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Diagram",
    "name": "diagram",
    "pro": "true",
    "api": "dataviz/diagram",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/diagram/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/diagram/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/diagram/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/diagram/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/diagram",
       "aspnet-mvc": "aspnet-mvc/diagram",
       "jsp-ui": "jsp/diagram",
       "php-ui": "php/diagram"
    },
    "sources": {
        "kendo-ui": [{
            "name": "Sample service",
            "url": "~/content/service.html"
        }]
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/diagram",
       "aspnet-mvc": "aspnet-mvc/diagram",
       "jsp-ui": "jsp/diagram",
       "php-ui": "php/diagram"
    },
    "spriteCssClass": "diagramIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "diagram/index",
        "title": {
            "kendo-ui": "Example of Kendo UI Diagram with a simple layout",
            "aspnet-mvc": "Example of ASP.NET MVC Diagram with a simple layout"
        },
        "meta": {
            "kendo-ui": "With this demo built with Kendo UI, you will be able to find out how Kendo UI Diagram widget can be implemented for hierarchical diagrams.",
            "aspnet-mvc": "With this demo built with ASP.NET MVC, you will be able to find out how ASP.NET MVC Diagram control can be implemented for hierarchical diagrams."
        }
      },
      {
        "text": "Built-in Layouts",
        "url": "diagram/layout",
        "title": {
            "kendo-ui": "Example of Kendo UI Diagram with different layouts",
            "aspnet-mvc": "Example of ASP.NET MVC Diagram with different layouts"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the built-in layouts which are specific to Kendo UI Diagram component.",
            "aspnet-mvc": "This sample demonstrates the built-in layouts which are specific to ASP.NET MVC Diagram component."
        }
      },
      {
        "text": "Editing",
        "url": "diagram/editing",
        "title": {
            "kendo-ui": "Kendo UI Diagram Editing",
            "aspnet-mvc": "Example of ASP.NET MVC Diagram with editing"
        },
        "meta": {
            "kendo-ui": "In this example you will learn how you can easily use editing operations in Kendo UI Diagram.",
            "aspnet-mvc": "In this example you will learn how you can easily use editing operations in ASP.NET MVC Diagram."
        }
      },
      {
        "text": "PDF Export",
        "url": "diagram/pdf-export",
        "title": {
            "kendo-ui": "Kendo UI Diagram saveAsPDF API method"
        },
        "meta": {
            "kendo-ui": "This demo shows how to save the diagram as PDF directly in the browser."
        }
      },
      {
        "text": "Advanced Export",
        "url": "diagram/export",
        "title": {
            "kendo-ui": "Kendo UI Diagram Export API methods"
        },
        "meta": {
            "kendo-ui": "This demo shows how to export diagrams to PDF, PNG Images or SVG and save them directly in the browser."
        }
      },
      {
        "text": "Events",
        "url": "diagram/events",
        "title": {
            "kendo-ui": "Example of using events in Kendo UI Diagram control",
            "aspnet-mvc": "Example of using events in ASP.NET MVC Diagram control"
        },
        "meta": {
            "kendo-ui": "This example demonstrates different events which are available in Kendo UI Diagram widget.",
            "aspnet-mvc": "This example demonstrates all the different events available in Telerik ASP.NET MVC Diagram control."
        }
      },
      {
        "text": "API",
        "url": "diagram/api",
        "title": {
            "kendo-ui": "Example of Kendo UI Diagram API",
            "aspnet-mvc": "Example of ASP.NET MVC Diagram API"
        },
        "meta": {
            "kendo-ui": "The API Functions of Kendo UI Diagram widget give you the option to add/remove shapes and connections, set the current pan and zoom, select elements.",
            "aspnet-mvc": "The API Functions of ASP.NET MVC Diagram control give you the option to add/remove shapes and connections, set the current pan and zoom, select elements."
        }
      },
      {
        "text": "MVVM",
        "url": "diagram/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Diagram"
        },
        "meta": {
            "kendo-ui": "Source, events and visible MVVM binding support in Kendo UI Diagram"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "diagram/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Diagram"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Diagram"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Diagrams & Maps"

  },
  {
    "text": "Map",
    "name": "map",
    "pro": "true",
    "api": "dataviz/map",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/map/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/map/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/map/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/map/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/map",
       "aspnet-mvc": "aspnet-mvc/map",
       "jsp-ui": "jsp/map",
       "php-ui": "php/map"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/map",
       "aspnet-mvc": "aspnet-mvc/map",
       "jsp-ui": "jsp/map",
       "php-ui": "php/map"
    },
    "spriteCssClass": "mapIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "map/index",
        "title": {
            "kendo-ui": "Example of Kendo UI Map with a simple tile layer",
            "aspnet-mvc": "Example of ASP.NET MVC Map with a simple tile layer"
        },
        "meta": {
            "kendo-ui": "With this demo built with Kendo UI, you will be able to find out how Kendo UI Map widget can be implemented for tile maps.",
            "aspnet-mvc": "With this demo built with ASP.NET MVC, you will be able to find out how ASP.NET MVC Map control can be implemented for tile maps."
        }
      },
      {
        "text": "Bing tile layer",
        "url": "map/bing",
        "title": {
            "kendo-ui": "Bing tile layer in Kendo UI Map",
            "aspnet-mvc": "Bing tile layer in ASP.NET MVC Map"
        },
        "meta": {
            "kendo-ui": "This demo demostrates how you can use Bing tile layer in your Hendo UI HTML5 Map.",
            "aspnet-mvc": "This demo demostrates how you can use Bing tile layer in your ASP.NET MVC Map."
        }
      },
      {
        "text": "Bubble layer",
        "url": "map/bubble-layer",
        "title": {
            "kendo-ui": "Displaying Bubble Kendo UI map layer"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to bind a Kendo UI bubble map layer to remote data."
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to GeoJSON",
        "url": "map/geojson",
        "title": {
            "kendo-ui": "Displaying GeoJSON shapes Kendo UI map layer",
            "aspnet-mvc": "Displaying GeoJSON shapes in ASP.NET MVC map"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to bind a Kendo UI map layer to GeoJSON shapes.",
            "aspnet-mvc": "This demo illustrates how to bind an ASP.NET MVC map layer to GeoJSON shapes."
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding markers to remote data",
        "url": "map/remote-markers",
        "title": {
            "kendo-ui": "Load map markers in a Kendo UI map layer",
            "aspnet-mvc": "Load map markers in a ASP.NET MVC map layer"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to bind a Kendo UI marker layer.",
            "aspnet-mvc": "This demo illustrates how to bind a ASP.NET MVC marker layer."
        },
        "requiresServer": "true"
      },
      {
        "text": "Export",
        "url": "map/export",
        "title": {
            "kendo-ui": "Kendo UI Map Export API methods"
        },
        "meta": {
            "kendo-ui": "This demo shows how to export maps to PDF, PNG Images or SVG and save them directly in the browser."
        }
      },
      {
        "text": "Events",
        "url": "map/events",
        "title": {
            "kendo-ui": "Events API for Kendo UI Map component",
            "aspnet-mvc": "Events API for ASP.NET MVC Map component"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the events which are specific to Kendo UI Map component.",
            "aspnet-mvc": "This sample demonstrates the events which are specific to ASP.NET MVC Map component."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "map/api",
        "title": {
            "kendo-ui": "API for Kendo UI Map component",
            "aspnet-mvc": "API for ASP.NET MVC Map component"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the public methods which are specific to Kendo UI Map component.",
            "aspnet-mvc": "This sample demonstrates the public methods which are specific to ASP.NET MVC Map component."
        },
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "map/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Map"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Map"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Diagrams & Maps"
  },
  {
    "text": "Pie Charts",
    "name": "pie-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartPieIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "pie-charts/index",
        "title": {
            "kendo-ui": "Kendo UI HTML5 Pie Charts Example",
            "aspnet-mvc": "ASP.NET MVC Pie Charts example "
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Pie Charts is easily applied to web apps. The control draws data series in slices in order to create rich HTML5 visualizations.",
            "aspnet-mvc": "This example illustrates core functionality of Telerik pie charts extension for ASP.NET MVC."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>In this example, you can see how to register and configure a Pie chart. This chart type displays the data as sectors from a circle and is useful for displaying data as parts of a whole. The Pie chart displays a single series of data in a two-dimensional circle. <br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br />Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Pie labels",
        "url": "pie-charts/pie-labels",
        "title": {
            "kendo-ui": "Pie labels demo | Kendo UI jQuery Pie Charts",
            "aspnet-mvc": "Pie labels demo | ASP.NET MVC Pie Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how the animated pie labels work in Kendo UI Pie Charts and lets you play with the configuration of the labels.",
            "aspnet-mvc": "This demo shows how the animated pie labels work in ASP.NET MVC Pie Charts and lets you play with the configuration of the labels."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This example shows how to show/hide the labels of the ASP.NET MVC Pie Chart and specify how they are aligned.</p> <p>You can do that by getting a reference to the Chart client-object via:</p> <p>var chart = $(\"#chart\").data(\"kendoChart\")</p> <p>which will allow you to set and configure its series collection and attributes:<br /> <br /> var pieSeries = chart.options.series[0];<br /> pieSeries.labels.visible = true|false; // If set to true the chart will display the series labels.<br /> pieSeries.labels.align = \"circle\"; // \"circle\" - the labels are positioned in circle around the chart.\"column\" - the labels are positioned in columns to the left and right of the chart.</p> <p>You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the control&rsquo;s API documentation</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "pie-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data example | Kendo UI Pie Charts",
            "aspnet-mvc": "Binding to remote data example | ASP.NET MVC Pie Charts"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI Pie Charts can be bound to remote data by configuring Kendo UI DataSource component.",
            "aspnet-mvc": "This demo illustrates how ASP.NET MVC Pie Charts can be bound to remote data by configuring Kendo UI DataSource component."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "pie-charts/local-data-binding",
        "title": {
            "kendo-ui": "Kendo UI jQuery Pie Charts binding to local data demo",
            "aspnet-mvc": "ASP.NET MVC Pie Charts binding to local data demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Pie Charts use existing objects as data points. The example illustrates binding to local data feature of the widget.",
            "aspnet-mvc": "This demo shows how ASP.NET MVC Pie Charts use existing objects as data points. The example illustrates binding to local data feature of the control."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Pie chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the SpainElectricityBreakdown enumerator located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound Percentage, Source and Explode fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "pie-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "pie-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Polar Charts",
    "name": "polar-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartPolarIcon",
    "items": [
      {
        "text": "Polar line",
        "url": "polar-charts/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery-based Polar Charts Demo",
            "aspnet-mvc": "ASP.NET MVC Polar Charts Demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI Polar Charts component can be added to your web page in order to visualize quantitive data. Learn how to define your polar chart.",
            "aspnet-mvc": "This demo illustrates how ASP.NET MVC Polar Charts control can be added to your web page in order to visualize quantitive data. Learn how to define your polar chart."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Polar chart, demonstrated in this demo, shows data in a circular plot area in polar coordinates where each data point is represented by a distance/radius and an angle, beginning of the coordinate system. Polar charts are useful for visualizing scientific data like precipitation/heat distribution in the Earth's poles and other multivariate data.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Smooth polar line",
        "url": "polar-charts/smooth-polar-line",
        "title": {
            "kendo-ui": "Example of using smooth line (spline) style for Kendo UI Polar Charts",
            "aspnet-mvc": "Smooth line (spline) style for ASP.NET MVC Polar Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure the Kendo UI Polar Charts to use smooth line (spline) style",
            "aspnet-mvc": "This demo shows how to configure the ASP.NET MVC Polar Charts to use smooth line (spline) style"
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This demo shows how to configure <em>smooth (spline)</em> polar line style for the Telerik MVC Polar chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth polar area chart through the Series -&gt; PolarLine -&gt; Style(ChartPolarLineStyle.Smooth) setting.</p>"
        }
      },
      {
        "text": "Polar scatter",
        "url": "polar-charts/polar-scatter",
        "title": {
            "kendo-ui": "Kendo UI Polar Charts | Example of polar scatter chart",
            "aspnet-mvc": "ASP.NET MVC Polar Charts | Example of polar scatter chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure Kendo UI Polar Scatter Chart",
            "aspnet-mvc": "This demo shows how to configure ASP.NET MVC Polar Scatter Chart."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This example demonstrates how to create a polar scatter chart, which series type is represented on the chart as non-connected data points.</p> <p>You can define the polar scatter series through the Series -&gt; PolarScatter setting.</p>"
        }
      },
      {
        "text": "Polar area",
        "url": "polar-charts/polar-area",
        "title": {
            "kendo-ui": "Kendo UI Polar Charts | Example of polar area chart",
            "aspnet-mvc": "ASP.NET MVC Polar Charts | Example of polar area chart"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to configure Kendo UI Polar Area Chart",
            "aspnet-mvc": "This demo illustrates how to configure ASP.NET MVC Polar Area Chart."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This demo shows how to create a polar plot chart, which series type is represented by data points connected with straight line segments that enclose a filled area together with the chart pole.</p> <p>You can configure such chart from the Series -&gt; PolarArea configuration setting</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "polar-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Example of jQuery & HTML5 Kendo UI Polar Chart bound to remote data",
            "aspnet-mvc": "Example of ASP.NET MVC Polar Chart bound to remote data"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Polar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.",
            "aspnet-mvc": "See how ASP.NET MVC Polar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "polar-charts/local-data-binding",
        "title": {
            "kendo-ui": "Kendo UI Polar Charts binding to local data example",
            "aspnet-mvc": "ASP.NET MVC Polar Charts binding to local data example"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates that Kendo UI HTML5 chart can use existing objects as data points.",
            "aspnet-mvc": "This sample demonstrates how ASP.NET MVC Polar Chart can use existing objects as data points."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Polar chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the SunPosition list located in the \\Models\\Chart\\ChartDataRepository.Polar.cs file as a model. After that you should configure the data bound Azimuth and Altitude fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "polar-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "polar-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "QR Code",
    "name": "qrcode",
    "pro": "true",
    "spriteCssClass": "qrcodeIcon",
    "api": "dataviz/qrcode",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/qrcode/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/rqcode/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/qrcode/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/qrcode/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/qrcode",
       "aspnet-mvc": "aspnet-mvc/qrcode",
       "jsp-ui": "jsp/qrcode",
       "php-ui": "php/qrcode"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/qrcode",
       "aspnet-mvc": "aspnet-mvc/qrcode",
       "jsp-ui": "jsp/qrcode",
       "php-ui": "php/qrcode"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "qrcode/index",
        "title": {
            "kendo-ui": "Kendo UI QRCode Demo",
            "aspnet-mvc": "ASP.NET MVC QRCode Demo"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates the core functionality of Kendo UI QRCode which helps you easily encode large amounts of data in a machine readable format.",
            "aspnet-mvc": "This sample demonstrates the core functionality of ASP.NET MVC QRCode which helps you easily encode large amounts of data in a machine readable format."
        }
      },
      {
        "text": "API",
        "url": "qrcode/api",
        "title": {
            "kendo-ui": "Kendo UI QRCode API demo",
            "aspnet-mvc": "ASP.NET MVC QRCode API demo"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI QRCode Widget API works and what kind of functions it supports.",
            "aspnet-mvc": "This demo shows how ASP.NET MVC QRCode control API works and what kind of functions it supports."
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "MVVM",
        "url": "qrcode/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI QR Code"
        },
        "meta": {
            "kendo-ui": "Value MVVM binding support in Kendo UI QR Code"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "qrcode/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI QR Code"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support in Kendo UI QR Code"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "category": "Barcodes"
  },
  {
    "text": "Radar Charts",
    "name": "radar-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartRadarIcon",
    "items": [
      {
        "text": "Radar line",
        "url": "radar-charts/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery-based Radar Charts Demo",
            "aspnet-mvc": "ASP.NET MVC Radar Charts Demo"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how Kendo UI Radar Charts component can be added to your web page in order to visualize quantitive data. Learn how to define your radar chart.",
            "aspnet-mvc": "This demo illustrates how ASP.NET MVC Radar Charts control can be added to your web page in order to visualize quantitive data. Learn how to define your radar chart."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This demo demonstrates the Radar Line type which series are represented on the chart as data points connected with straight line.<br /> <br /> The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Smooth radar line",
        "url": "radar-charts/smooth-radar-line",
        "title": {
            "kendo-ui": "Example of using smooth line (spline) style for the Kendo UI Radar Charts",
            "aspnet-mvc": "Smooth line (spline) style for the ASP.NET MVC Radar Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure the Kendo UI Radar Charts to use smooth line style (spline)",
            "aspnet-mvc": "This demo shows how to configure the ASP.NET MVC Radar Charts to use smooth line style (spline)."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This demo shows how to configure <em>smooth (spline)</em> radar line style for the Telerik MVC Radar Chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth polar area chart through the Series or SeriesDefaults -&gt; RadarLine -&gt; Style(ChartPolarLineStyle.Smooth) setting.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Radar area",
        "url": "radar-charts/radar-area",
        "title": {
            "kendo-ui": "Kendo UI Radar Charts | Example of radar area chart",
            "aspnet-mvc": "ASP.NET MVC Radar Charts | Example of radar area chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure Kendo UI Radar Area Chart",
            "aspnet-mvc": "This demo shows how to configure ASP.NET MVC Radar Area Chart"
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p><p>This demo shows how to create a radar area chart, which series type is represented by data points connected with straight line segments that enclose a filled area. You can configure this chart from the Series -&gt; RadarArea configuration setting.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul>"
        }
      },
      {
        "text": "Radar column",
        "url": "radar-charts/radar-column",
        "title": {
            "kendo-ui": "Kendo UI Radar Charts | Example of radar column chart",
            "aspnet-mvc": "ASP.NET MVC Radar Charts | Example of radar column chart"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how to display a Kendo UI Radar Column Chart",
            "aspnet-mvc": "This demo illustrates how to display a ASP.NET MVC Radar Column Chart"
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This example displays how to create a radar column chart, which series type is represented as data columns whose height varies according to their value.</p> <p>You can configure this chart from the Series -&gt; RadarColumn configuration setting.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "radar-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Example of jQuery & HTML5 Kendo UI Radar Charts bound to remote data",
            "aspnet-mvc": "Example of ASP.NET MVC Radar Charts bound to remote data"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Radar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.",
            "aspnet-mvc": "See how ASP.NET MVC Radar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "radar-charts/local-data-binding",
        "title": {
            "kendo-ui": "Kendo UI Radar Charts binding to local data example",
            "aspnet-mvc": "ASP.NET MVC Radar Charts binding to local data example"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates that Kendo UI HTML5 chart can use existing objects as data points.",
            "aspnet-mvc": "This sample demonstrates how ASP.NET MVC Radar chart can use existing objects as data points."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Radar chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the ProteinQualityData list located in the \\Models\\Chart\\ChartDataRepository.Radar.cs file as a model. After that you should configure the data bound Score and Abbr fields for the Series and Categories. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "radar-charts/grouped-data",
        "title": {
            "kendo-ui": "Kendo UI Radar Charts | Example of binding to grouped data",
            "aspnet-mvc": "ASP.NET MVC Radar Charts | Example of binding to grouped data"
        },
        "meta": {
            "kendo-ui": "With this example you will learn how to bind grouping data to Kendo UI Radar Charts.",
            "aspnet-mvc": "With this example you will learn how to bind grouping data to ASP.NET MVC Radar Charts."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\">Kendo UI DataSource control</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the \"Category\" field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Category))</li> <li>Bind the RadarColumn values of the series to the corresponding data source field (e.g., the \"Frequency\" and \"DirText\" fields): series.RadarColumn(model =&gt; model.Frequency, categoryExpression: model =&gt; model.DirText)</li> <li>Hide the Value Axis: ValueAxis -&gt; Visible(false) </li> </ol> <p>This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g. \"Category\"). </p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "radar-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "radar-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Range Bar Charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "items": [
        {
            "text": "Basic usage",
            "url": "range-bar-charts/index",
            "title": {
                "kendo-ui": "Demo for Kendo UI Range Bar Chart"
            },
            "meta": {
                "kendo-ui": "This example illustrates the basic usage of Kendo UI Range Bar Chart which enables the user to show customized range bar charts."
            },
            "description": {
                "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
				"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>This demo shows how to create a Range Bar chart, which displays data as bars where each bar represents a value range that spans between its minimum (i.e., From property) and maximum (i.e., To property) levels. A Range Bar type has floating bars unlike the standard Ba chart that has anchored bars to its x-axis.</p> <p>This chart type is useful for comparing the low and high levels of value ranges (e.g., employees' working time, blood glucose levels per day, average minimum and maximum temperatures and rainfalls over time, etc.).</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
        },
        {
            "text": "Binding to local data",
            "url": "range-bar-charts/local-data-binding",
            "title": {
                "kendo-ui": "Local data-binding example | Kendo UI Range Bar Charts"
            },
            "meta": {
                "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI Range Bar Charts. Use the demo source code to try the feature of the widget."
            },
            "description": {
                "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
				"aspnet-mvc": "<p>The Telerik MVC Range Bar chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series.</li> </ul> <p>You can learn from this demo how to bind the chart using the server approach. You need to create an action method and pass the RangeBarChartsLocalDataViewModel list model. After that you should configure the data bound FromA, ToA, FromB and ToB fields for the Series. Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
        },
        {
            "text": "Binding to remote data",
            "url": "range-bar-charts/remote-data-binding",
            "title": {
                "kendo-ui": "Binding to remote data demo | Kendo UI HTML5 jQuery Range Bar Charts"
            },
            "meta": {
                "kendo-ui": "This demo shows how Kendo UI Range Bar Chart widget can be bound to remote data to produce high-performance report in your business app."
            },
			"description": {
				"kendo-ui": "",
				"aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
			},
            "requiresServer": "true"
        }
    ],
    "spriteCssClass": "chartRangeBarIcon",
    "name": "range-bar-charts",
    "category": "Charts"
  },
  {
    "text": "Scatter Charts",
    "name": "scatter-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartScatterIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "scatter-charts/index",
        "title": {
            "kendo-ui": "Kendo UI jQuery-powered Scatter Charts Demo",
            "aspnet-mvc": "ASP.NET MVC Scatter Charts Demo"
        },
        "meta": {
            "kendo-ui": "This example shows the most important features and functionality of Kendo UI Scatter Charts.",
            "aspnet-mvc": "This example shows the most important features and functionality of ASP.NET MVC Scatter Charts."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>You can see in this sample demonstration of a Scatter chart, which shows data as points defined by their items' values. Scatter charts are useful for showing the relation between different sets of data, for example scientific (experimental) results.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
      },
      {
        "text": "Scatter line chart",
        "url": "scatter-charts/scatter-line",
        "title": {
            "kendo-ui": "Kendo UI Scatter Line Charts Demo",
            "aspnet-mvc": "ASP.NET MVC Scatter Line Charts Demo"
        },
        "meta": {
            "kendo-ui": "This sample demonstrates how Kendo UI Scatter Line Charts combines Line and Scatter chart types in your rich HTML5 data visualizations.",
            "aspnet-mvc": "This sample demonstrates how ASP.NET MVC Scatter Line Charts combines Line and Scatter chart types in your rich data visualizations."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This example demonstrates how to create a scatter line chart, which is useful for displaying numerical data.</p> <p>You can define the scatter line series through the Series -&gt; ScatterLine setting.</p>"
        },
		"group": "Scatter Chart Types"
      },
      {
        "text": "Smooth scatter line",
        "url": "scatter-charts/smooth-scatter-line",
        "title": {
            "kendo-ui": "Example of using smooth line (spline) style for the Kendo UI Scatter Line Chart",
            "aspnet-mvc": "Smooth line (spline) style for the ASP.NET MVC Scatter Line Chart"
        },
        "meta": {
            "kendo-ui": "This demo shows how to configure the Kendo UI Scatter Line Chart to use smooth line (spline) style",
            "aspnet-mvc": "This demo shows how to configure the ASP.NET MVC Scatter Line Chart to use smooth line (spline) style."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This example demonstrates how to create a smoother scatter line chart, in which the series items are connected with a fitted curve which represents a rough approximation of the missing data points.</p> <p>You can define the scatter line series through the Series -&gt; ScatterLine -&gt; Style(ChartScatterLineStyle.Smooth) setting.</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "scatter-charts/date-axis",
        "title": {
            "kendo-ui": "Date Axis demo in Kendo UI Scatter Charts",
            "aspnet-mvc": "Date Axis demo in ASP.NET MVC Scatter Charts"
        },
        "meta": {
          "kendo-ui": "This example illustrates all properties, specific to date value axis of Kendo UI jQuery Scatter Charts.",
          "aspnet-mvc": "This example illustrates all properties, specific to date value axis of ASP.NET MVC Scatter Charts."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This example illustrates how to data bind date time spans with Scatter Charts using a <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">server binding</a>.</p>"
        },
		"group": "Functionality",
        "requiresServer": "true"
      },
      {
        "text": "Multi-axis",
        "url": "scatter-charts/multiple-axes",
        "title": {
          "kendo-ui": "Multiple axes in Kendo UI HTML5 Scatter Charts | Kendo UI DataViz Demos",
          "aspnet-mvc": "Multiple axes in ASP.NET MVC Scatter Charts | ASP.NET MVC Demos"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how array of values for multi-axis Kendo UI Scatter Charts are displayed on the plot area.",
          "aspnet-mvc": "This demo illustrates how array of values for multi-axis ASP.NET MVC Scatter Charts are displayed on the plot area."
        }
      },
      {
        "text": "Pan and zoom",
        "url": "scatter-charts/pan-and-zoom",
        "new": "true",
        "title": {
            "kendo-ui": "Pan and zoom in Kendo UI Scatter Charts"
        },
        "meta": {
            "kendo-ui": "This demo illustrates how array of values for multi-axis Kendo UI Scatter Charts are displayed on the plot area.",
            "aspnet-mvc": "This demo illustrates how array of values for multi-axis ASP.NET MVC Scatter Charts are displayed on the plot area."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik ASP.NET MVC Scatter chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example shows a Dyno run report and includes information for the: <em>torgue and power</em>. Note that each of them has unique name which is set through the <strong>XAxis and YAxis Title </strong>method.</p>"
        }
      },
      {
        "text": "Custom Pan and zoom",
        "url": "scatter-charts/custom-pan-and-zoom",
        "title": {
            "kendo-ui": "Custom Pan and zoom in Kendo UI Scatter Charts"
        },
        "meta": {
            "kendo-ui": "In this example we demonstrate how to implement pan and zoom effects in Kendo UI Scatter Charts. Look at the source code to learn how to filter the DataSource component."
        },
        "packages": [
          "!mvc"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "scatter-charts/remote-data-binding",
        "title": {
            "kendo-ui": "Remote data-bound scatter series example | Kendo UI Scatter Charts",
            "aspnet-mvc": "Remote data-bound scatter series | ASP.NET MVC Scatter Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how scatter series of Kendo UI Scatter Charts can be bound to remote data source items.",
          "aspnet-mvc": "This demo shows how scatter series of ASP.NET MVC Scatter Charts can be bound to remote data source items."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "scatter-charts/local-data-binding",
        "title": {
            "kendo-ui": "Example of binding to local data in Kendo UI jQuery Scatter Charts",
            "aspnet-mvc": "Example of binding to local data in ASP.NET MVC Scatter Charts"
        },
        "meta": {
            "kendo-ui": "This demo shows how Kendo UI Scatter Charts can use local objects as data points in the HTML5 visualization.",
            "aspnet-mvc": "This demo shows how ASP.NET MVC Scatter Charts can use local objects as data points in the HTML5 visualization."
        },
        "description": {
            "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
			"aspnet-mvc": "<p>The Telerik MVC Area chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the PricePerformanceData list located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound fields for the Series: series.Scatter(model => model.Price, model => model.Performance). Note that the view has to be strongly typed so that the chart is able to load its data.</p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "scatter-charts/grouped-data",
        "title": {
            "kendo-ui": "Example of Kendo UI Scatter Charts bound to grouped data",
            "aspnet-mvc": "Example of ASP.NET MVC Scatter Charts bound to grouped data"
        },
        "meta": {
            "kendo-ui": "This demo shows how define a group of values in Kendo UI Scatter Charts by configuring the parameters in the DataSource component.",
            "aspnet-mvc": "This demo shows how define a group of values in ASP.NET MVC Scatter Charts by configuring the parameters in the DataSource component."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>Telerik MVC charting extension can be integrated to a grouped data by <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a>. To do, so you can follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\">Kendo UI DataSource control</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the \"Symbol\" field) of the column in the underlying data which will be the criteria for grouping the chart series items into series Group(group =&gt; group.Add(model =&gt; model.Symbol)</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the \"Date\" and \"Close\" fields): series.ScatterLine(model =&gt; model.Date, model =&gt; model.Close)</li> </ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g., &ldquo;Symbol&rdquo;). &nbsp;Since the &ldquo;Symbol&rdquo; field in this example contains three distinct values (&ldquo;1. GOOG (close)&rdquo;, &ldquo;2. AAPL (close)&rdquo; and &ldquo;3. AMZN (close)&rdquo;) the chart will create three series as well.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Pan and zoom",
        "url": "scatter-charts/pan-and-zoom",
        "new": "true",
        "title": {
            "kendo-ui": "Pan and zoom in Kendo UI Scatter Charts"
        },
        "meta": {
            "kendo-ui": "In this example we demonstrate how to enable pan and zoom effects in Kendo UI Scatter Charts."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Pan and Zoom features allow you to navigate through and zoom in/out the Telerik MVC Scatter Chart.</p><p>You can enable the pan feature through the Pannable setting and the Zoom set the Zoomable configuration option.</p>"
        }
      },
      {
        "text": "Custom Pan and zoom",
        "url": "scatter-charts/custom-pan-and-zoom",
        "title": {
            "kendo-ui": "Custom Pan and zoom in Kendo UI Scatter Charts"
        },
        "meta": {
            "kendo-ui": "In this example we demonstrate how to implement pan and zoom effects in Kendo UI Scatter Charts. Look at the source code to learn how to filter the DataSource component."
        },
        "packages": [
          "!mvc"
        ]
      },
      {
        "text": "MVVM",
        "url": "scatter-charts/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "scatter-charts/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Sparklines",
    "name": "sparklines",
    "pro": "true",
    "api": "dataviz/sparkline",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/sparkline/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/sparkline/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/sparkline/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/sparkline/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/sparkline",
       "aspnet-mvc": "aspnet-mvc/sparkline",
       "jsp-ui": "jsp/sparkline",
       "php-ui": "php/sparkline"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/sparkline",
       "aspnet-mvc": "aspnet-mvc/sparkline",
       "jsp-ui": "jsp/sparkline",
       "php-ui": "php/sparkline"
    },
    "spriteCssClass": "sparklineIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "sparklines/index",
        "title": {
            "kendo-ui": "Sparkline Charts | Kendo UI Sparklines demo",
            "aspnet-mvc": "ASP.NET MVC Sparklines Usage | UI for ASP.NET MVC demos"
        },
        "meta": {
            "kendo-ui": "In this interactive demo, we show the basic usage of Kendo UI Sparkline control which enables end users to identify trends, variations in the data.",
            "aspnet-mvc": "This example demonstrates the common usage of Telerik ASP.NET MVC Sparklines."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>A Sparkline is a very small chart, drawn without axes, coordinates, legend, title and other chart-specific elements. It behaves like an inline element (rendered inside a span) as opposed to the standard charts, which behave like block elements (rendered inside divs) so that it can be easily embedded in text.</p> <p>You can specify the sparkline type through the Type property: .Type(SparklineType.[Area|Bar|Bullet|Column|Line|Pie])</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "sparklines/remote-data-binding",
        "title": {
            "kendo-ui": "Binding to remote data in Kendo UI Sparkline Chart | Kendo UI Sparklines",
            "aspnet-mvc": "Binding to remote data in ASP.NET MVC Sparkline Chart"
        },
        "meta": {
            "kendo-ui": "This Kendo UI Demo shows how to bind to remote data in Kendo UI Sparklines charting control.",
            "aspnet-mvc": "This ASP.NET MVC Demo shows how to bind to remote data in ASP.NET MVC Sparklines charting control."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "sparklines/local-data-binding",
        "title": {
            "kendo-ui": "Local data binding in Kendo UI Sparkline Chart | Kendo UI Sparklines",
            "aspnet-mvc": "Local data binding in ASP.NET MVC Sparkline Chart"
        },
        "meta": {
            "kendo-ui": "Learn how to bind local data to Kendo UI jQuery Sparkline charting component. Try it now!",
            "aspnet-mvc": "Learn how to bind local data to ASP.NET MVC Sparkline charting component. Try it now!"
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC Area chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the server approach. You need to create an action method and pass the CompensationData list located in the \\Models\\Chart\\ChartDataRepository.cs file as a model. After that you should configure the data bound fields for the Series, i.e. .ValueAxis(axis => axis.Numeric().Max(50)). Note that the view has to be strongly typed so that the chart is able to load its data.</p><p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "sparklines/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI Sparkline"
        },
        "meta": {
            "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Sparkline"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "AngularJS",
        "url": "sparklines/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Sparkline"
        },
        "meta": {
            "kendo-ui": "AngularJS directives support in Sparkline"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ],
        "requiresServer": "true"
      }

    ],
    "category": "Charts"
  },
  {
    "text": "Stock Charts",
    "name": "financial",
    "pro": "true",
    "api": "dataviz/stock-chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/stockchart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/stockchart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/stockchart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/stockchart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "spriteCssClass": "chartStockIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "financial/index",
        "title": {
            "kendo-ui": "Example of Kendo UI charts for stock analysis apps",
            "aspnet-mvc": "Example of ASP.NET MVC charts for stock analysis apps"
        },
        "meta": {
            "kendo-ui": "With this demo for a stock chart, built with Kendo UI, you will be able to find out how Kendo UI chart widgets can be implemented in a financial app.",
            "aspnet-mvc": "See how you can implement ASP.NET MVC stock chart in your financial app."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Stock Chart type, demonstrated in this example, can visualize the price movements of any financial instrument over the time. The chart describes the high, low, opening and closing prices for a single day by combining the Bar and Line charts. The High price is represented by the top of the upper thin line, while the Low price by the bottom of the lower line. The Open and Close prices are represented by the wide part (the body) of the item. If the close price is higher than the open price, the body is hollowed (usually colored white or green), otherwise it is filled (usually colored black or red). <br /> <br /> The financial chart also offers zooming and scrolling functionality, which is exposed by the Navigator pane, located below the main chart.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Multiple panes",
        "url": "financial/panes",
        "title": {
            "kendo-ui": "Multiple panes in Kendo UI stock chart",
            "aspnet-mvc": "Multiple panes in ASP.NET MVC stock chart"
        },
        "meta": {
            "kendo-ui": "This demo illustrates the use of multiple graph panes in Kendo UI Stock chart.",
            "aspnet-mvc": "This demo illustrates the use of multiple graph panes in ASP.NET MVC Stock chart."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This demo illustrates the use of multiple graph panes in ASP.NET MVC Stock chart. You can define a pane through the Panes collection and set it&rsquo;s a title and height:</p> <p>panes.Add(\"volumePane\").Title(\"Volume\").Height(150);</p> <p>If you want to render a specific axis inside the newly create pane with name volumePane use the ValueAxis -&gt; Pane setting: ValueAxis(axis =&gt; axis.Numeric(\"volumeAxis\").Pane(\"volumePane\").Visible(false))</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Virtualization",
        "url": "financial/virtualization",
        "title": {
            "kendo-ui": "Virtualization in Kendo UI Stock Chart",
            "aspnet-mvc": "Virtualization in ASP.NET MVC Stock Chart"
        },
        "sources": {
            "kendo-ui": [{
                "name": "Sample service",
                "url": "~/content/service.html"
            }]
        },
        "meta": {
            "kendo-ui": "In this example we show you how the virtualization works in Kendo UI Stock Chart for rich data visualization.",
            "aspnet-mvc": "In this example we show you how the virtualization works in ASP.NET MVC  Stock Chart for rich data visualization."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>In this example you can see how the virtualization works in ASP.NET MVC Stock Chart for rich data visualization. To enable it you have to set the true parameter of the DataSource -&gt; ServerOperation(true) method.</p>"
        }
      },
      {
        "text": "PDF Export",
        "url": "financial/pdf-export",
        "title": {
            "kendo-ui": "Kendo UI StockChart saveAsPDF API method"
        },
        "meta": {
            "kendo-ui": "This demo shows how to save the Stock Chart as PDF directly in the browser."
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>This example shows how to configure the PDF export settings of the Telerik MVC Charting helper. </p> <p>You can specify the Author, Creator, Date, FileName, AllPages, PaperSize, ProxyURL and other options, through the <strong>PDF</strong> property of the Chart helper.</p> <p>The <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid?#methods-saveAsPDF\">saveAsPDF</a> client-side method initiates the PDF export and triggers the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid?#events-pdfExport\">pdfExport</a> event.</p>"
        }
      },
      {
        "text": "Stock History",
        "url": "financial/stock-history",
        "title": {
            "kendo-ui": "Kendo UI Chart controls application sample | Stock History"
        },
        "meta": {
            "kendo-ui": "The Stock History Dashboard demonstrates how the charting components in Kendo UI DataViz HTML5 framework are used to build a complex finance application."
        },
        "packages": [
            "!mvc",
            "!jsp",
            "!php"
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "TreeMap",
    "pro": "true",
    "spriteCssClass": "treemapIcon",
    "api": "dataviz/treemap",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/treemap/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/treemap/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/treemap/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/treemap/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/treemap",
       "aspnet-mvc": "aspnet-mvc/treemap",
       "jsp-ui": "jsp/treemap",
       "php-ui": "php/treemap"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/treemap",
       "aspnet-mvc": "aspnet-mvc/treemap",
       "jsp-ui": "jsp/treemap",
       "php-ui": "php/treemap"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "treemap/index",
        "title": {
            "kendo-ui": "Kendo UI TreeMap Demo"
        },
        "meta": {
            "kendo-ui": ""
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The Telerik MVC TreeMap component suits perfectly for visualization of hierarchical data in a traditional tree structure. The extension provides three options (Squarified, Horizontal and Vertical) for displaying the data, which could be managed by the Type treemap setting.</p> <p>The main advantages of the control are that you could:</p> <ul> <li>Visualize huge data in a meaningful and colorized way (i.e. files system structure divided by size; the popularity of different tech devices on the market, and other)</li> <li>Optimize space on your web page by its compact structure</li> </ul> <p>You can learn more in the documentation: <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/treemap/overview\" target=\"_blank\">TreeMap</a>.</p>"
        }
      },{
        "text": "Events",
        "url": "treemap/events",
        "title": {
            "kendo-ui": "Events in Kendo UI TreeMap"
        },
        "meta": {
            "kendo-ui": ""
        },
        "description": {
            "kendo-ui": "",
            "aspnet-mvc": "<p>The sample demonstrates the usage of the ItemCreated and DataBound events of the MVC Treemap helper. The ItemCreated event is fired when a tile has been created, while the DataBound one is triggered when the widget is bound to data from its DataSource.</p>"
        }
      },{
        "text": "MVVM",
        "url": "treemap/mvvm",
        "title": {
            "kendo-ui": "MVVM support in Kendo UI TreeMap"
        },
        "meta": {
            "kendo-ui": ""
        },
        "packages": [
            "!mvc",
            "!jsp",
            "!php"
        ]
      },{
        "text": "AngularJS",
        "url": "treemap/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI TreeMap"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI TreeMap"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ],
    "name": "treemap",
    "category": "Charts"
  },
  {
    "text": "Waterfall Charts",
    "name": "waterfall-charts",
    "pro": "true",
    "api": "dataviz/chart",
    "documentation": {
       "kendo-ui": "getting-started/dataviz/chart/overview",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/chart/overview",
       "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
       "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/charts",
       "aspnet-mvc": "aspnet-mvc/chart",
       "jsp-ui": "jsp/chart",
       "php-ui": "php/chart"
    },
    "items": [
        {
            "text": "Basic usage",
            "url": "waterfall-charts/index",
            "title": {
                "kendo-ui": "Demo for Kendo UI Waterfall Chart"
            },
            "meta": {
                "kendo-ui": "This example illustrates the basic usage of Kendo UI Waterfall Chart."
            },
            "description": {
                "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>",
				"aspnet-mvc": "<p>The Telerik ASP.NET MVC chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p>A Waterfall chart type shows the cumulative effect of positive or negative values on the starting point. Its purpose is to provide a better understanding of how an initial amount is influenced by subsequently added positive or negative values. A Waterfall chart is useful for different types of quantitative analysis related to inventory, cash flows, performance, etc.</p> <p>The chart can fetch data for its series from either local or remote data source. You can find more information about the MVC chart in the <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">product documentation</a>.</p> <p><strong><br /> Key Features of Telerik MVC Charts</strong></p> <ul> <li>Various Chart Types</li> <li>A Number of Data Types</li> <li>High Performance</li> <li>Export to PDF</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich Server and Client-side API</li> <li>Server and Client-side Data Binding</li> <li>Built-in Themes</li> <li>Intuitive Built-in Animations</li> <li>Multiple Series and Combination Charts</li> <li>Plot Bands</li> <li>Rich Cross-Browser and Mobile Support</li> </ul> <p>More about <a href=\"http://www.telerik.com/aspnet-mvc/charts\">Telerik MVC Charts</a>.</p>"
        }
        },
        {
            "text": "Horizontal Waterfall",
            "url": "waterfall-charts/horizontal",
            "title": {
                "kendo-ui": "Demo for horizontal Kendo UI Waterfall Chart"
            },
            "meta": {
                "kendo-ui": "This example illustrates how to set the Kendo UI Waterfall Chart orientation."
            },
			"description": {
				"kendo-ui": "",
				"aspnet-mvc": "<p>A Horizontal Waterfall chart type shows the cumulative effect of positive or negative values on the starting point. You can use it to provide a better understanding of how an initial amount is influenced by subsequently added positive or negative values. A Horizontal Waterfall chart is useful for different types of quantitative analysis related to inventory, cash flows, performance, etc. This chart type looks like a Range Bar chart where the low or high value of a subsequent item is connected to the preceding one with a thin line.</p>"
			}
        },
        {
            "text": "Binding to local data",
            "url": "waterfall-charts/local-data-binding",
            "title": {
                "kendo-ui": "Local data-binding example | Kendo UI Waterfall Charts"
            },
            "meta": {
                "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI Waterfall Charts. Use the demo source code to try the feature of the widget."
            },
            "description": {
                "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>",
				"aspnet-mvc": "<p>The Telerik MVC waterfall chart can be instructed to display data from local data storage using its built-in data-binding capabilities. </p> <p>There are two ways to bind the chart:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>In this example you can see how to bind the chart using the strongly typed server approach. You need to create an action method and supply the CashFlowData model array. After that you should configure the data bound fields for the Series: .Series(series => series.Waterfall(model => model.Amount, model => model.Period, model => model.Summary)) </p> <p>You can find additional information about how to utilize the data-binding capabilities of the MVC chart in <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">the Getting Started section</a> of the product documentation.</p>"
        }
        },
        {
            "text": "Binding to remote data",
            "url": "waterfall-charts/remote-data-binding",
            "title": {
                "kendo-ui": "Binding to remote data demo | Kendo UI HTML5 jQuery Waterfall Charts"
            },
            "meta": {
                "kendo-ui": "This demo shows how Kendo UI Waterfall Chart widget can be bound to remote data to produce high-performance report in your business app."
            },
			"description": {
				"kendo-ui": "",
				"aspnet-mvc": "<p>The Telerik MVC Chart offers two ways of data-binding:</p> <ul> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/overview\" target=\"_blank\">Server</a> - the chart will bind to a supplied model</li> <li><a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\" target=\"_blank\">Ajax</a> - the chart will perform Ajax requests to populate its series</li> </ul> <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a MVC controller assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/aspnet-mvc/helpers/chart/ajax-binding\">help article</a>.</p>"
			},
            "requiresServer": "true"
        }
    ],
    "spriteCssClass": "chartWaterfallIcon",
    "category": "Charts"
  },
  {
    "text": "Switch",
    "name": "switch",
    "api": "mobile/switch",
    "documentation": {
       "kendo-ui": "getting-started/mobile/switch",
       "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/mobileswitch/overview"
    },
    "forum": {
       "kendo-ui": "kendo-ui/switch",
       "aspnet-mvc": "aspnet-mvc/switch"
    },
    "codelibrary": {
       "kendo-ui": "kendo-ui/switch",
       "aspnet-mvc": "aspnet-mvc/switch"
    },
    "spriteCssClass": "mobileSwitchIcon",
    "category": "Editors",
    "packages": [ "!jsp", "!php" ],
    "items": [
      {
        "text": "Basic Usage",
        "url": "switch/index",
        "title": {
            "kendo-ui": "Mobile Switch widget demo | Kendo UI Demos"
        },
        "meta": {
            "kendo-ui": "This example demonstrates the Switch widget"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ]
  },
  {
    "text": "Touch Events",
    "name": "touchevents",
    "api": "mobile/touch",
    "category": "Framework",
    "documentation": {
       "kendo-ui": "getting-started/mobile/touch"
    },
    "spriteCssClass": "mobileAppIcon",
    "packages": [ "!mvc", "!jsp", "!php" ],
    "items": [
      {
        "text": "Touch Events",
        "url": "touchevents/index",
        "title": {
            "kendo-ui": "Kendo UI Touch Events Demo"
        },
        "meta": {
            "kendo-ui": ""
        }
      },
      {
        "text": "AngularJS",
        "url": "touchevents/angular",
        "title": {
            "kendo-ui": "AngularJS support in Kendo UI Touch Events"
        },
        "meta": {
            "kendo-ui": "AngularJS directive support for Kendo UI Touch Events"
        },
        "packages": [
          "!mvc",
          "!jsp",
          "!php"
        ]
      }
    ]
  },
  {
      "text": "Single Page Applications",
      "name": "spa",
      "packages": [ "offline" ],
      "items": [
          {
            "text": "Aeroviewr",
            "url": "spa/Aeroviewr",
            "title": {
                "kendo-ui": "Aeroviewr"
            },
            "meta": {
                "kendo-ui": "Aeroviewr"
            }
          },
          {
            "text": "Sushi",
            "url": "spa/Sushi",
            "title": {
                "kendo-ui": "Sushi"
            },
            "meta": {
                "kendo-ui": "Sushi"
            }
          }
      ]
  },
  {
      "text": "Kendo UI Mobile",
      "name": "mobile",
      "packages": [ "offline" ],
      "items": [
          {
            "text": "Hybrid Framework Demos",
            "url": "mobile",
            "title": {
                "kendo-ui": "Hybrid Framework Demos"
            },
            "meta": {
                "kendo-ui": "Hybrid Framework Demos"
            }
          },
          {
            "text": "Cuteness.io",
            "url": "mobile-apps/cuteness",
            "title": {
                "kendo-ui": "Cuteness.io"
            },
            "meta": {
                "kendo-ui": "Cuteness.io"
            }
          },
          {
            "text": "Sushi",
            "url": "mobile-apps/sushi",
            "title": {
                "kendo-ui": "Sushi (mobile)"
            },
            "meta": {
                "kendo-ui": "Sushi (mobile)"
            }
          }
      ]
  }
]
